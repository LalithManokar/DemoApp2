PROCEDURE "SAP_TM_TRP"."sap.tm.trp.service.tests.rail.calcmodel.stock::sp_test_calc_model_stock_for_carrier" (
	OUT OUTPUT "sap.tm.trp.service.tests.rail.calcmodel.stock::tt_test_calc_model_stock_output"
	) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA SAP_TM_TRP
    AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/

   res_out = SELECT T1.STOCK_STATUS_CODE AS MAPPING_VALUE,
                     T1.RESOURCE_ID AS RESID, D.GEO_GROUP_ID,E.EQUIP_GROUP_ID, T1.STOCK_STATUS_CODE AS STATUS 
                     FROM "sap.tm.trp.db.semantic.resource::v_stock_resource_last_status" T1
                     INNER JOIN "sap.tm.trp.db.pipeline::t_equipinfo_for_pipeline_GlobalTemp" AS E ON (E.EQUIP_CODE = T1.RESOURCE_TYPE)
                     INNER JOIN "sap.tm.trp.db.pipeline::t_locationinfo_for_pipeline_GlobalTemp" AS D ON (D.LOCATION_ID = T1.LOCATION_ID)
                     WHERE T1.STOCK_STATUS_CODE IN ( 'DMG','OTR', '','SBL','RSV','OOF');

                     
    group_out = SELECT CASE MAPPING_VALUE WHEN 'DMG' THEN 'STOCK_DAMAGED'
                                        WHEN ''    THEN 'STOCK_EMPTY_AND_AVAILABLE'
                                        WHEN 'OTR' THEN 'STOCK_OTHERS'
                                        WHEN 'OOF' THEN 'STOCK_OUT_OF_FLEET'
                                        WHEN 'SBL' THEN 'STOCK_SUBLEASED'
                                        WHEN 'RSV' THEN 'STOCK_RESERVED' END  AS NODE_ID
                      ,GEO_GROUP_ID as GEO_ID
                      ,EQUIP_GROUP_ID as EQUIP_TYPE
                      ,COUNT(1) AS OUTPUT_VALUE
              FROM :res_out
              GROUP BY GEO_GROUP_ID, EQUIP_GROUP_ID, MAPPING_VALUE;
              
              
                           
     cv_out =  SELECT NODE_ID, GEO_ID, EQUIP_TYPE, OUTPUT_VALUE FROM "_SYS_BIC"."sap.tm.trp.db.stock/cv_pipeline_stock_damaged" WHERE OUTPUT_VALUE<>0
               UNION
               SELECT NODE_ID, GEO_ID, EQUIP_TYPE, OUTPUT_VALUE FROM "_SYS_BIC"."sap.tm.trp.db.stock/cv_pipeline_stock_out_of_fleet" WHERE OUTPUT_VALUE<>0
               UNION
               SELECT NODE_ID, GEO_ID, EQUIP_TYPE, OUTPUT_VALUE FROM "_SYS_BIC"."sap.tm.trp.db.stock/cv_pipeline_stock_empty_and_available" WHERE OUTPUT_VALUE<>0
               UNION
               SELECT NODE_ID, GEO_ID, EQUIP_TYPE, OUTPUT_VALUE FROM "_SYS_BIC"."sap.tm.trp.db.stock/cv_pipeline_stock_others" WHERE OUTPUT_VALUE<>0
               UNION
               SELECT NODE_ID, GEO_ID, EQUIP_TYPE, OUTPUT_VALUE FROM "_SYS_BIC"."sap.tm.trp.db.stock/cv_pipeline_stock_reserved" WHERE OUTPUT_VALUE<>0
               UNION
               SELECT NODE_ID, GEO_ID, EQUIP_TYPE, OUTPUT_VALUE FROM "_SYS_BIC"."sap.tm.trp.db.stock/cv_pipeline_stock_subleased" WHERE OUTPUT_VALUE<>0
              ;
    
     OUTPUT =  (SELECT * FROM :group_out
               MINUS
               SELECT * FROM :cv_out)
               
               UNION
               
               (SELECT * FROM :cv_out
               MINUS
               SELECT * FROM :group_out);
               
END;
