PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.archive::sp_data_archive_table_create"
(IN TABLE_NAME_HOT NVARCHAR(500), 
IN DATE_COLUMN_NAME NVARCHAR(250),
IN PARENT_FLAG TINYINT,
IN CONFIGURATION_TYPE NVARCHAR(100),
IN DATASOURCE_NAME NVARCHAR(100),
IN DATABASE_NAME NVARCHAR(100),
IN RS_SCHEMA_NAME NVARCHAR(100),
IN IS_TM TINYINT)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "SAP_TM_TRP" AS 
BEGIN 	
	--DECLARE CONFIGURATION_TYPE NVARCHAR(100);
	--DECLARE DATASOURCE_NAME NVARCHAR(100);
	DECLARE V_DATABASE_NAME NVARCHAR(100);
	DECLARE SCHEMA_NAME NVARCHAR(100);
	DECLARE SDA_TABLE_NAME NVARCHAR(500);
	DECLARE TABLE_NAME_WARM NVARCHAR(500);
	DECLARE SQL_FOR_TABLE_CREATION NVARCHAR(2000);
	DECLARE MIN_ROW_NUM BIGINT;
	DECLARE MAX_ROW_NUM BIGINT;
	DECLARE COLUMN_NAME NVARCHAR(250);
	DECLARE DATA_TYPE_NAME NVARCHAR(250);
	DECLARE COLUMN_STR NVARCHAR(500);
	DECLARE COLUMN_LIST NVARCHAR(5000);
	DECLARE V_LENGTH BIGINT; 
	DECLARE V_SCALE BIGINT;
	
	IF :IS_TM = 0 THEN
			TABLE_NAME_WARM := :TABLE_NAME_HOT ||'_warm';
			SDA_TABLE_NAME:=SUBSTR_AFTER(:TABLE_NAME_HOT,'::');
			SCHEMA_NAME:='SAP_TM_TRP';
		ELSE 
			TABLE_NAME_WARM := :TABLE_NAME_HOT ||'_warm';
			SDA_TABLE_NAME:=:TABLE_NAME_HOT;
			--SCHEMA_NAME:='SAPTM';
		END IF;
		
	--SELECT VALUE INTO CONFIGURATION_TYPE FROM "sap.tm.trp.db.archive::t_archive_configuration" WHERE KEY='CONFIGURATION_TYPE';

	IF :CONFIGURATION_TYPE = 'SDA' THEN 
		--SELECT VALUE INTO DATASOURCE_NAME FROM "sap.tm.trp.db.archive::t_archive_configuration" WHERE KEY='DATASOURCE_NAME';
		--SELECT VALUE INTO SCHEMA_NAME FROM "sap.tm.trp.db.archive::t_archive_configuration" WHERE KEY='SCHEMA_NAME';
		--SELECT VALUE INTO DATABASE_NAME FROM "sap.tm.trp.db.archive::t_archive_configuration" WHERE KEY='DATABASE_NAME';
		IF LENGTH(:DATABASE_NAME)=0 OR :DATABASE_NAME IS NULL THEN 
			V_DATABASE_NAME:='NULL';
		ELSE 
			V_DATABASE_NAME:=DATABASE_NAME;
		END IF;
		
		
		SQL_FOR_TABLE_CREATION := 'CREATE VIRTUAL TABLE "'||escape_double_quotes(:TABLE_NAME_WARM)||'" AT "'||escape_double_quotes(:DATASOURCE_NAME)||'"."'||escape_double_quotes(:V_DATABASE_NAME)||'"."'||escape_double_quotes(:RS_SCHEMA_NAME)||'"."'||escape_double_quotes(:SDA_TABLE_NAME)||'"';
		EXECUTE IMMEDIATE :SQL_FOR_TABLE_CREATION;
	ELSE IF :CONFIGURATION_TYPE = 'DT' THEN 
		
						 
		IF :IS_TM = 0 THEN 
			TABLE_METADATA = SELECT COLUMN_NAME,DATA_TYPE_NAME,LENGTH,SCALE,ROW_NUMBER() over (partition by TABLE_NAME order by TABLE_NAME) as ROW_NUM 
						 	 FROM "SYS"."TABLE_COLUMNS" 
						 	 WHERE SCHEMA_NAME=:SCHEMA_NAME AND TABLE_NAME=:TABLE_NAME_HOT;
		ELSE 
			TABLE_METADATA = SELECT COLUMN_NAME,DATA_TYPE_NAME,LENGTH,SCALE,ROW_NUMBER() over (partition by TABLE_NAME order by TABLE_NAME) as ROW_NUM
							 FROM "SYS"."TABLE_COLUMNS"  
								 WHERE SCHEMA_NAME=(SELECT DISTINCT OBJECT_SCHEMA FROM "SYS"."SYNONYMS" 
								 					WHERE SCHEMA_NAME=:SCHEMA_NAME AND SYNONYM_NAME=:TABLE_NAME_HOT) 
								 AND TABLE_NAME=:TABLE_NAME_HOT;
		END IF;
		SELECT MIN(ROW_NUM) INTO MIN_ROW_NUM FROM :TABLE_METADATA;
		SELECT MAX(ROW_NUM) INTO MAX_ROW_NUM FROM :TABLE_METADATA;
		WHILE MIN_ROW_NUM <= MAX_ROW_NUM DO 
			SELECT IFNULL(COLUMN_NAME,'') INTO COLUMN_NAME FROM :TABLE_METADATA WHERE ROW_NUM = :MIN_ROW_NUM;
			SELECT IFNULL(DATA_TYPE_NAME,'') INTO DATA_TYPE_NAME FROM :TABLE_METADATA WHERE ROW_NUM = :MIN_ROW_NUM;
			IF :DATA_TYPE_NAME = 'VARCHAR' OR :DATA_TYPE_NAME = 'NVARCHAR' OR :DATA_TYPE_NAME = 'CHAR' THEN 
				SELECT IFNULL(LENGTH,0) INTO V_LENGTH FROM :TABLE_METADATA WHERE ROW_NUM = :MIN_ROW_NUM;
				COLUMN_STR := :COLUMN_NAME||' '||:DATA_TYPE_NAME||'('||:V_LENGTH||')';
			ELSE IF :DATA_TYPE_NAME = 'DECIMAL' THEN
				SELECT IFNULL(LENGTH,0) INTO V_LENGTH FROM :TABLE_METADATA WHERE ROW_NUM = :MIN_ROW_NUM;
				SELECT IFNULL(SCALE,0) INTO V_SCALE FROM :TABLE_METADATA WHERE ROW_NUM = :MIN_ROW_NUM;
				COLUMN_STR := :COLUMN_NAME||' '||:DATA_TYPE_NAME||'('||:V_LENGTH||','||:V_SCALE||')';
			ELSE 
				COLUMN_STR := :COLUMN_NAME||' '||:DATA_TYPE_NAME;
			END IF;
			END IF;
			
			IF MIN_ROW_NUM = 1 THEN 
				COLUMN_LIST := :COLUMN_STR;
			ELSE 
				COLUMN_LIST := :COLUMN_LIST||','||:COLUMN_STR;
			END IF;
			MIN_ROW_NUM := :MIN_ROW_NUM+1;
		END WHILE;
		IF :PARENT_FLAG = 1 THEN 
			SQL_FOR_TABLE_CREATION := 'CREATE COLUMN TABLE "'||escape_double_quotes(:TABLE_NAME_WARM)||'"  ('||escape_single_quotes(:COLUMN_LIST)||',TRP_RULE_ID BIGINT,TRP_EXECUTION_ID BIGINT) USING EXTENDED STORAGE';
		ELSE
			SQL_FOR_TABLE_CREATION := 'CREATE COLUMN TABLE "'||escape_double_quotes(:TABLE_NAME_WARM)||'"  ('||escape_single_quotes(:COLUMN_LIST)||',TRP_RULE_ID BIGINT,TRP_EXECUTION_ID BIGINT,'||escape_single_quotes(:DATE_COLUMN_NAME)||' TIMESTAMP) USING EXTENDED STORAGE';
		END IF;
		EXECUTE IMMEDIATE :SQL_FOR_TABLE_CREATION;
	ELSE 
		--RAISE EXCEPTION: Archive is not configured.
	END IF;
	END IF;
		
	
END;