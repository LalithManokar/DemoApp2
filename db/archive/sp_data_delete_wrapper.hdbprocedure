PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.archive::sp_data_delete_wrapper"
(IN RULE_ID BIGINT,
 IN EXECUTION_ID BIGINT,
 OUT STATUS_CODE INTEGER) 
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 
DEFAULT SCHEMA "SAP_TM_TRP" AS
	DATE_FROM DATE;
	DATE_TO DATE;
	TABLE_ID BIGINT;
	VAR_COMMIT  VARCHAR(100) := 'COMMIT';
	VAR_ROLLBACK VARCHAR(100) := 'ROLLBACK' ;
	IS_SIDECAR NVARCHAR(10);
	IS_TM TINYINT;
	SQL_FOR_UPDATE_DETAIL NVARCHAR(2000);
	V_COUNT BIGINT;
	HANDLE_ID BIGINT;
	DATE_COLUMN_NAME NVARCHAR(250);
	CONFIGURATION_TYPE NVARCHAR(100);
BEGIN SEQUENTIAL EXECUTION
	DECLARE NO_DATA_FOUND CONDITION FOR SQL_ERROR_CODE 10001;
	
	DECLARE EXIT HANDLER FOR NO_DATA_FOUND 
    BEGIN
    	--Rollback the transactions		
		--Update execution_detail with ERROR status
		SQL_FOR_UPDATE_DETAIL :='UPDATE "sap.tm.trp.db.archive::t_archive_execution_detail" 
		SET STATUS=2,END_TIME=CURRENT_UTCTIMESTAMP,MESSAGE=''No Data Found'',ERROR_CODE=''MSG_ARCHIVE_ERROR_NO_DATA''
		WHERE ID = '||:EXECUTION_ID; 
		EXECUTE IMMEDIATE :SQL_FOR_UPDATE_DETAIL;
		
		--Output
		STATUS_CODE := 1;
    END;
	
	DECLARE EXIT HANDLER FOR SQLEXCEPTION 
	BEGIN
		--Rollback the transactions
		
		--Update execution_detail with ERROR status
		SQL_FOR_UPDATE_DETAIL :='UPDATE "sap.tm.trp.db.archive::t_archive_execution_detail" 
		SET STATUS=2,END_TIME=CURRENT_UTCTIMESTAMP,MESSAGE='''||REPLACE(::SQL_ERROR_MESSAGE,'''','')||''' WHERE ID = '||:EXECUTION_ID;
		EXECUTE IMMEDIATE :SQL_FOR_UPDATE_DETAIL;
		
		--Output
		STATUS_CODE := 1;
	END;
	
	SELECT MAX(STATEMENT_ID) INTO HANDLE_ID FROM SYS.M_ACTIVE_STATEMENTS 
	WHERE CONNECTION_ID=CURRENT_CONNECTION 
	AND LOWER(STATEMENT_STRING) LIKE '%call%sp_data_archive_wrapper%' 
	AND LAST_EXECUTED_TIME=(SELECT MIN(LAST_EXECUTED_TIME) FROM SYS.M_ACTIVE_STATEMENTS 
	WHERE CONNECTION_ID=CURRENT_CONNECTION 
	AND LOWER(STATEMENT_STRING) LIKE '%call%sp_data_archive_wrapper%' );
	SQL_FOR_UPDATE_DETAIL :='UPDATE "sap.tm.trp.db.archive::t_archive_execution_detail" SET HANDLE_ID='||:HANDLE_ID||' WHERE ID = '||:EXECUTION_ID;
	EXECUTE IMMEDIATE :SQL_FOR_UPDATE_DETAIL;
	
	
	--General Start
	SELECT COUNT(1) INTO V_COUNT FROM "sap.tm.trp.db.semantic.common::v_client_code";
	IF :V_COUNT = 0 THEN  
		SIGNAL NO_DATA_FOUND;
	END IF;
	SELECT COUNT(1) INTO V_COUNT FROM "sap.tm.trp.db.archive::t_archive_configuration" WHERE KEY='CONFIGURATION_TYPE';
	IF :V_COUNT = 0 THEN  
		SIGNAL NO_DATA_FOUND;
	END IF;
	SELECT IFNULL(VALUE,'') INTO CONFIGURATION_TYPE FROM "sap.tm.trp.db.archive::t_archive_configuration" WHERE KEY='CONFIGURATION_TYPE';
	IF :CONFIGURATION_TYPE <> 'SDA' AND :CONFIGURATION_TYPE <> 'DT' THEN 
		SIGNAL NO_DATA_FOUND;
	END IF;
	SELECT COUNT(1) INTO V_COUNT FROM "sap.tm.trp.db.archive::t_archive_rule" WHERE ID = :RULE_ID;
	IF :V_COUNT > 0 THEN 
		SELECT TABLE_ID INTO TABLE_ID FROM "sap.tm.trp.db.archive::t_archive_rule" WHERE ID = :RULE_ID;
		SELECT TO_DATE(DATE_FROM) INTO DATE_FROM FROM "sap.tm.trp.db.archive::t_archive_rule" WHERE ID = :RULE_ID;
		SELECT ADD_DAYS(TO_DATE(DATE_TO),1) INTO DATE_TO FROM "sap.tm.trp.db.archive::t_archive_rule" WHERE ID = :RULE_ID;
	ELSE 
		SIGNAL NO_DATA_FOUND;
	END IF;
	SELECT COUNT(1) INTO V_COUNT FROM "sap.tm.trp.db.archive::t_archive_configuration" WHERE KEY='SIDECAR';
	IF :V_COUNT > 0 THEN 
		SELECT VALUE INTO IS_SIDECAR FROM "sap.tm.trp.db.archive::t_archive_configuration" WHERE KEY='SIDECAR';
	ELSE 
		IS_SIDECAR:='FALSE';
	END IF;
	SELECT COUNT(1) INTO V_COUNT FROM "sap.tm.trp.db.archive::t_archive_metadata" WHERE ID = :TABLE_ID;
	IF :V_COUNT > 0 THEN 
		SELECT DATE_COLUMN_NAME INTO DATE_COLUMN_NAME FROM "sap.tm.trp.db.archive::t_archive_metadata" WHERE ID = :TABLE_ID;
		SELECT IS_TM INTO IS_TM FROM "sap.tm.trp.db.archive::t_archive_metadata" WHERE ID = :TABLE_ID;
	ELSE 
		SIGNAL NO_DATA_FOUND;
	END IF;
	--General End
	
	IF :IS_SIDECAR = 'TRUE' AND :IS_TM = 1 THEN 
		-- Donot Delete.
	ELSE
		CALL "sap.tm.trp.db.archive::sp_data_delete"(:TABLE_ID,:EXECUTION_ID,:DATE_FROM,:DATE_TO,:DATE_COLUMN_NAME,:IS_TM);		
		--Update execution_detail for SUCCESS.
		SQL_FOR_UPDATE_DETAIL :='UPDATE "sap.tm.trp.db.archive::t_archive_execution_detail" SET STATUS=1,END_TIME=CURRENT_UTCTIMESTAMP WHERE ID = '||:EXECUTION_ID;
		EXECUTE IMMEDIATE :SQL_FOR_UPDATE_DETAIL;
	END IF;
	--Commit the transactions

	--Output
	STATUS_CODE := 0;
END;