PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.alert::p_genRuleDataset_callDT_simulation" (
IN PLAN_MODEL_ID BIGINT,
IN EXECUTION_DAYS INTEGER default 30,
OUT OUTPUT_RECORDS INTEGER
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "SAP_TM_TRP"
	AS
BEGIN
  DECLARE SP VARCHAR(500);
  DECLARE SP_PARAM VARCHAR(500);
  DECLARE SCRIPT VARCHAR(5000);
    
  DECLARE EXECUTED_FLAG INTEGER;
  DECLARE TMP_EXECUTION_ID BIGINT;
  DECLARE TMP_NODE_ID BIGINT;
  
  DECLARE EQUIP_TYPE VARCHAR(32);
  DECLARE FROM_LOC VARCHAR(32);
  DECLARE TO_LOC VARCHAR(32);
  DECLARE START_DATE DATE;
  DECLARE END_DATE DATE;
  DECLARE QUANTITY DECIMAL(13,3);
    
  select IFNULL(MAX(T1.EQUIP_TYPE),''),IFNULL(MAX(T1.FROM_LOC_ID),''),IFNULL(MAX(T1.TO_LOC_ID),''),IFNULL(MAX(T1.START_TIME),''),IFNULL(MAX(T1.END_TIME),''),IFNULL(MAX(T1.QUANTITY),0)
    into EQUIP_TYPE,FROM_LOC,TO_LOC,START_DATE,END_DATE,QUANTITY
    from "sap.tm.trp.db.planningcockpit::t_activity" T1
   where T1.ID = '115';
    --01_ 
  call "sap.tm.trp.db.alert::p_get_maxExecutionID_nodeID_ofPlan"
    (:PLAN_MODEL_ID,
     :EXECUTION_DAYS,
      TMP_EXECUTION_ID,
      TMP_NODE_ID,
      EXECUTED_FLAG);
     
  update "sap.tm.trp.db.alert::t_alert_DT_output_timeInterval" T1
  set T1.DELTA  = 1
  where ( T1.PLAN_EXECUTION_ID  = :TMP_EXECUTION_ID and 
          T1.NODE_ID = :TMP_NODE_ID and 
          T1.EQUIP_TYPE_ID = :EQUIP_TYPE and 
        ((T1.LOCATION_ID = :FROM_LOC and TO_DATE(T1.START_TIME) >= :START_DATE) or
         (T1.LOCATION_ID = :TO_LOC and TO_DATE(T1.START_TIME) >= :END_DATE))
        );
     
  SUPPLY_DEMAND_NODE_TBL = 
     select * from "sap.tm.trp.db.alert::t_alert_DT_output_timeInterval" T1
     where ( T1.PLAN_EXECUTION_ID  = :TMP_EXECUTION_ID and 
             T1.NODE_ID = :TMP_NODE_ID);
    
    OUTPUT_FOR_DT =  
        select 
          PLAN_EXECUTION_ID,
          PLAN_MODEL_ID,    
          PLAN_MODEL_TYPE_ID,  
          PLAN_MODEL_CATEGORY_ID,                 
          FILTER_TYPE,
          FILTER_GROUP_ID,
          PIPELINE_MODEL_ID,
          NODE_ID,
          NODE_NAME,
          NODE_VISIBLE,
          DATA_OBJECT_FORMAT,
          LOCATION_ID,
          LOCATION_NAME,
          EQUIP_TYPE_ID,
          EQUIP_TYPE_NAME,
          TIME_INTERVAL_ID,
          TIME_FILTER_DESC,
          SEQUENCE,
          START_TIME,
          TIME_STEP,
          STOCK,
          SUPPLY,
          DEMAND,
          (SUPPLY-DEMAND) as BALANCE_SUPPLY_DEMAND,
          (STOCK+SUPPLY-DEMAND) as BALANCE_STOCK_SUPPLY_DEMAND,
          MIN_SAFETY_STOCK,
          MAX_SAFETY_STOCK    
        from 
        (select 
           PLAN_EXECUTION_ID,
           PLAN_MODEL_ID,    
           PLAN_MODEL_TYPE_ID,  
           PLAN_MODEL_CATEGORY_ID,                 
           FILTER_TYPE,
           FILTER_GROUP_ID,
           PIPELINE_MODEL_ID,
           NODE_ID,
           NODE_NAME,
           NODE_VISIBLE,
           DATA_OBJECT_FORMAT,
           LOCATION_ID,
           LOCATION_NAME,
           EQUIP_TYPE_ID,
           EQUIP_TYPE_NAME,
           TIME_INTERVAL_ID,
           'miss time filter desc'AS TIME_FILTER_DESC,
           SEQUENCE,
           START_TIME,
           TIME_STEP,
           STOCK,
           (CASE WHEN T1.LOCATION_ID = :TO_LOC
            THEN SUPPLY + :QUANTITY
            ELSE SUPPLY
           END) as SUPPLY,
           (CASE WHEN T1.LOCATION_ID = :FROM_LOC
            THEN DEMAND + :QUANTITY
            ELSE DEMAND 
           END) as DEMAND,
           --T2.QUANTITY,
           MIN_SAFETY_STOCK,
           MAX_SAFETY_STOCK    
           --from "sap.tm.trp.db.alert::t_alert_DT_output_timeInterval" T1
           from :SUPPLY_DEMAND_NODE_TBL T1
           --inner join "sap.tm.trp.db.planningcockpit::t_activity_reposition" T2
           --on
           where ( --T1.PLAN_EXECUTION_ID  = :TMP_EXECUTION_ID and 
           --T1.NODE_ID = :TMP_NODE_ID and 
           T1.DELTA = 1
           --T2.ID = '115' and
   --      T1.EQUIP_TYPE_ID = :EQUIP_TYPE and 
      --  ((T1.LOCATION_ID = :FROM_LOC and TO_DATE(T1.START_TIME) >= :START_DATE) or
     --    (T1.LOCATION_ID = :TO_LOC and TO_DATE(T1.START_TIME) >= :END_DATE))
                 )
        );     
       insert into "sap.tm.trp.db.alert::t_alert_DT_output_simulation" 
       (select 
             '115' AS SCENARIO_ID,
             PLAN_EXECUTION_ID,
             PLAN_MODEL_ID,    
             PLAN_MODEL_TYPE_ID,                   
             PLAN_MODEL_CATEGORY_ID,                 
             FILTER_TYPE,
             FILTER_GROUP_ID,
             PIPELINE_MODEL_ID,
             NODE_ID,
             NODE_NAME,
             NODE_VISIBLE,
             DATA_OBJECT_FORMAT,
             LOCATION_ID,
             LOCATION_NAME,
             EQUIP_TYPE_ID,
             EQUIP_TYPE_NAME,
             TIME_INTERVAL_ID,
             SEQUENCE,
             START_TIME,
             TIME_STEP,
             STOCK,
             SUPPLY,
             DEMAND,
             BALANCE_SUPPLY_DEMAND,
             BALANCE_STOCK_SUPPLY_DEMAND,
             MIN_SAFETY_STOCK,
             MAX_SAFETY_STOCK,
             MESSAGE,
             ALERT_REASON,
             ALERT_SCORE_EMER,
             ALERT_SCORE_IMP
           from :SUPPLY_DEMAND_NODE_TBL T1
           where T1.DELTA  = 0);
                                                
    --    03_03_get OUTPUT_FOR_DT(calcu culumns:BALANCE_SUPPLY_DEMAND,BALANCE_STOCK_SUPPLY_DEMAND)   
          truncate table "sap.tm.trp.db.alert::t_DT_input_GlobalTemporary";   

          insert into "sap.tm.trp.db.alert::t_DT_input_GlobalTemporary" (select * from :OUTPUT_FOR_DT);
          
          select IFNULL(MAX(T1.SP),''),IFNULL(MAX(T1.SP_PARAM),'') into SP,SP_PARAM 
          from "sap.tm.trp.db.alert::t_alert_rule_dispatch_node_to_sp" T1
          where T1.PLAN_EXECUTION_ID  = :TMP_EXECUTION_ID and 
                T1.NODE_ID = :TMP_NODE_ID;
          
    --    03_05_call DT_storage_procedure SP  
          truncate table "sap.tm.trp.db.alert::t_DT_output_GlobalTemporary";  

          SCRIPT := 'call '|| :SP ||'(' || :SP_PARAM || ',"sap.tm.trp.db.alert::t_DT_input_GlobalTemporary","sap.tm.trp.db.alert::t_DT_output_GlobalTemporary") with overview';  
          execute immediate(:SCRIPT);

    --    03_06_insert output of DT_SP into table 
       insert into "sap.tm.trp.db.alert::t_alert_DT_output_simulation" 
       (select 
             '115' AS SCENARIO_ID,
             PLAN_EXECUTION_ID,
             PLAN_MODEL_ID,    
             PLAN_MODEL_TYPE_ID,                   
             PLAN_MODEL_CATEGORY_ID,                 
             FILTER_TYPE,
             FILTER_GROUP_ID,
             PIPELINE_MODEL_ID,
             NODE_ID,
             NODE_NAME,
             NODE_VISIBLE,
             DATA_OBJECT_FORMAT,
             LOCATION_ID,
             LOCATION_NAME,
             EQUIP_TYPE_ID,
             EQUIP_TYPE_NAME,
             TIME_INTERVAL_ID,
             SEQUENCE,
             START_TIME,
             TIME_STEP,
             STOCK,
             SUPPLY,
             DEMAND,
             BALANCE_SUPPLY_DEMAND,
             BALANCE_STOCK_SUPPLY_DEMAND,
             MIN_SAFETY_STOCK,
             MAX_SAFETY_STOCK,
             MESSAGE,
             ALERT_REASON,
             ALERT_SCORE_EMER,
             ABS(ALERT_SCORE_IMP) AS ALERT_SCORE_IMP
           from "sap.tm.trp.db.alert::t_DT_output_GlobalTemporary" T1
       ); 
    select COUNT(1) into OUTPUT_RECORDS from "sap.tm.trp.db.alert::t_alert_DT_output_simulation" T1
    where T1.PLAN_EXECUTION_ID = :TMP_EXECUTION_ID;
    
    truncate table "sap.tm.trp.db.alert::t_DT_input_GlobalTemporary";  
    truncate table "sap.tm.trp.db.alert::t_DT_output_GlobalTemporary";  
END;