PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.pickupreturn.settings::p_check_locations_for_location_pair_group" (
    IN ORIGIN_LOCATIONS TABLE (LOCATION VARCHAR(20)),
    IN ALL_LOCATIONS TABLE (LOCATION VARCHAR(20)),
    OUT MATCHED_LOCATIONS TABLE (LOCATION VARCHAR(20)),
    OUT CROSS_GROUP CHAR(1)
   )
     LANGUAGE SQLSCRIPT
     SQL SECURITY INVOKER
    DEFAULT SCHEMA "SAP_TM_TRP"
     AS
BEGIN
	DECLARE ACTIVATION_STATUS CHAR(1);
    DECLARE GROUP_FIELD_NAME1 VARCHAR(200);
    DECLARE GROUP_FIELD_NAME2 VARCHAR(200);
    DECLARE GROUP_COUNT INTEGER;

	CROSS_GROUP := '';
	
	CALL "sap.tm.trp.db.pickupreturn.settings::p_get_location_pair_group"(ACTIVATION_STATUS,GROUP_FIELD_NAME1,GROUP_FIELD_NAME2);
	
	IF :ACTIVATION_STATUS = 'X' THEN
		MATCHED_GROUP = SELECT T1.LOCATION, T2.PAIR_GROUP1, T2.PAIR_GROUP2
							FROM :ORIGIN_LOCATIONS T1
							INNER JOIN "sap.tm.trp.db.semantic.location::v_location_enhance_group" T2 ON T1.LOCATION = T2.NAME;
		ALL_LOCATION_GROUP = SELECT T1.LOCATION, T2.PAIR_GROUP1, T2.PAIR_GROUP2
							FROM :ALL_LOCATIONS T1
							INNER JOIN "sap.tm.trp.db.semantic.location::v_location_enhance_group" T2 ON T1.LOCATION = T2.NAME;
							
		SELECT COUNT(*) INTO GROUP_COUNT FROM :MATCHED_GROUP;
	    IF :GROUP_COUNT > 1 THEN
	    	CROSS_GROUP := 'X';
	    END IF;

		MATCHED_LOCATIONS = SELECT DISTINCT T1.LOCATION FROM :ALL_LOCATION_GROUP T1
							INNER JOIN :MATCHED_GROUP T2 
							ON (T1.PAIR_GROUP1 <> '' AND T1.PAIR_GROUP1 = T2.PAIR_GROUP1) 
							OR (T1.PAIR_GROUP2 <> '' AND T1.PAIR_GROUP2 = T2.PAIR_GROUP2);
	ELSE
		MATCHED_LOCATIONS = SELECT * FROM :ALL_LOCATIONS;
	END IF ;
END