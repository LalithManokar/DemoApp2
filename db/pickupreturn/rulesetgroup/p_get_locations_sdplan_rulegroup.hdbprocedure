PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.pickupreturn.rulesetgroup::p_get_locations_sdplan_rulegroup" (
	IN PLAN_ID_GROUP "sap.tm.trp.db.pickupreturn.rulesetgroup::tt_sd_plan_rulegroup",
	OUT LOCATIONS "sap.tm.trp.db.pickupreturn.rulesetgroup::tt_location_sd_id" ,
	OUT RESOURCES "sap.tm.trp.db.pickupreturn.rulesetgroup::tt_resource_sd_id" 
 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA SAP_TM_TRP
	READS SQL DATA 
AS
BEGIN
 
DECLARE GEO_FLAG INT;

    --get locations of SD plans--
 V_FILTER_GROUP_ID = SELECT FILTER_GROUP_ID,ID
 FROM "sap.tm.trp.db.pipeline::t_plan_model"
 WHERE ID IN (SELECT PLAN_ID FROM :PLAN_ID_GROUP);

LOC_FILTER_ID = SELECT DISTINCT T1.LOCATION_FILTER_ID  , T2.ID AS PLAN_ID
FROM "sap.tm.trp.db.filter::t_filter_location_filter" T1
INNER JOIN :V_FILTER_GROUP_ID T2 ON (T1.FILTER_GROUP_ID = T2.FILTER_GROUP_ID);
 	
select IFNULL(MAX(LOCATION_TYPE),-1) INTO GEO_FLAG 
from "sap.tm.trp.db.filter::t_location_filter" where ID in (SELECT LOCATION_FILTER_ID FROM :LOC_FILTER_ID);
    
IF :GEO_FLAG = 1 THEN
--LOCATION
  LOCATIONS = select LF.PLAN_ID,HT.LOCATION_ID
	          from "sap.tm.trp.db.filter::t_location_filter_location" HT 
	          INNER JOIN :LOC_FILTER_ID LF
	   		  ON (HT.LOCATION_FILTER_ID = LF.LOCATION_FILTER_ID) ;


ELSEIF :GEO_FLAG = 2 THEN
--LOCATION GROUP
   
   LOCATIONS = select LF.PLAN_ID,LOC_GRP_ITEM.LOCATION_ID
			   from "sap.tm.trp.db.filter::t_location_filter_location" HT			   
			   inner join "sap.tm.trp.db.systemmanagement::t_location_group_item" LOC_GRP_ITEM on LOC_GRP_ITEM.LOCATION_GROUP_ID=HT.LOCATION_GROUP_ID
			   INNER JOIN :LOC_FILTER_ID LF
	   		   ON (HT.LOCATION_FILTER_ID = LF.LOCATION_FILTER_ID) ;


ELSEIF :GEO_FLAG = 5 THEN
-- REGION
       
   LOCATIONS = select LF.PLAN_ID,R_ALL.LOCATION_ID
		       from "sap.tm.trp.db.filter::t_location_filter_region" HT
		       inner join "sap.tm.trp.db.systemmanagement.location::v_region_location_all" R_ALL on R_ALL.ROOT_ID = HT.ZonE_ID
		       INNER JOIN :LOC_FILTER_ID LF
	   		   ON (HT.LOCATION_FILTER_ID = LF.LOCATION_FILTER_ID) ;


ELSEIF :GEO_FLAG = 6 THEN
-- REGION GROUP

   LOCATIONS = select LF.PLAN_ID,R_ALL.LOCATION_ID
			   from "sap.tm.trp.db.filter::t_location_filter_region" HT			  
		       inner join "sap.tm.trp.db.systemmanagement::t_region_group_item" R_GRP_ITEM on HT.REGION_GROUP_ID = R_GRP_ITEM.REGION_GROUP_ID
    	       inner join "sap.tm.trp.db.systemmanagement.location::v_region_location_all" R_ALL on  R_GRP_ITEM.ZONE_ID = R_ALL.ROOT_ID
		       INNER JOIN :LOC_FILTER_ID LF
	   		   ON (HT.LOCATION_FILTER_ID = LF.LOCATION_FILTER_ID) ;

END IF;	       		      

CALL "SAP_TM_TRP"."sap.tm.trp.db.pickupreturn.rulesetgroup::p_auth_equip_code_by_sd_plan_id"(
    :PLAN_ID_GROUP,RESOURCES_DETAILS); 
    
lt_equipment_filter=SELECT T2.ID AS PLAN_ID,T3.EQUIP_TYPE_ID,T3.EQUIP_FILTER_ID,T3.EQUIP_GROUP_ID,T3.EQUIP_CODE,T3.RESOURCE_CATEGORY
	            	 FROM :RESOURCES_DETAILS T3 
	            	 LEFT JOIN "sap.tm.trp.db.filter::t_filter_equipment_filter" T1
	            	 ON T3.EQUIP_FILTER_ID=T1.EQUIPMENT_FILTER_ID
	            	 INNER JOIN :V_FILTER_GROUP_ID T2 ON (T1.FILTER_GROUP_ID = T2.FILTER_GROUP_ID);

RESOURCES = SELECT DISTINCT * FROM (( SELECT b.PLAN_ID, b.EQUIP_CODE AS RESOURCE_ID
                 FROM :lt_equipment_filter b
                 WHERE b.EQUIP_CODE IS NOT NULL
                 )
               UNION ALL
               ( 
                 SELECT  EF1.PLAN_ID,EG1.EQUI_CODE AS RESOURCE_ID
                 FROM "sap.tm.trp.db.systemmanagement::t_equipment_group_item"  EG1
                 INNER JOIN :lt_equipment_filter EF1
                 ON (EF1.EQUIP_GROUP_ID=EG1.EQUIPMENT_GROUP_ID AND EG1.RESOURCE_CATEGORY = EF1.RESOURCE_CATEGORY)
                 WHERE EG1.EQUIPMENT_GROUP_ID IS NOT NULL
               ));
END;