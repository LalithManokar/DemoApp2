PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.pickupreturn::p_location_rule_facet_filter_get" (
    IN FUZZYSEARCH_TEXT VARCHAR(500),
    IN RULE_TYPE_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
    IN SD_PLAN_ID_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
    IN TIME_RANGE_UNIT_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
    IN RESOURCE_FILTER_ID_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
	IN LOCATION_FILTER_ID_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
    IN NETWORK_SETTING_GROUP_ID_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
    IN LOC_DET_ID_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
    IN SCHEDULE_TIME_TYPE_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
    IN OPTIMIZATION_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list", 
    IN RESOURCE_CATEGORY VARCHAR(50),
    OUT RULE_TYPE_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list",
    OUT SD_PLAN_ID_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list",
    OUT TIME_RANGE_UNIT_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list",
    OUT RESOURCE_FILTER_ID_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list",
	OUT LOCATION_FILTER_ID_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list",
    OUT NETWORK_SETTING_GROUP_ID_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list",
    OUT LOC_DET_ID_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list",
    OUT SCHEDULE_TIME_TYPE_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list",
    OUT OPTIMIZATION_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list"
) 
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 
DEFAULT SCHEMA "SAP_TM_TRP"
READS SQL DATA 
AS
    RULE_TYPE_LIST_CNT INTEGER; 
    SD_PLAN_ID_LIST_CNT INTEGER;
    TIME_RANGE_LIST_CNT INTEGER;
    RESOURCE_FILTER_ID_CNT INTEGER;
	LOCATION_FILTER_ID_CNT INTEGER;
    NETWORK_SETTING_GROUP_ID_LIST_CNT INTEGER;
    LOC_DET_ID_LIST_CNT INTEGER;
    SCHEDULE_TIME_TYPE_LIST_CNT INTEGER;
    OPTIMIZATION_LIST_CNT INTEGER;
BEGIN
    LOCATION_RULE_DATA = SELECT * FROM "sap.tm.trp.db.pickupreturn::v_role_check_location_rule_for_facet_filter_optimized"
        WHERE RESOURCE_CATEGORY = :RESOURCE_CATEGORY AND
        (
            LOWER(RULE_NAME) LIKE '%'||:FUZZYSEARCH_TEXT||'%' 
            OR LOWER(DESCRIPTION) LIKE '%'||:FUZZYSEARCH_TEXT||'%'
            OR LOWER(SUPPLY_DEMAND_PLAN) LIKE '%'||:FUZZYSEARCH_TEXT||'%'
            OR LOWER(NETWORK_SETTING_GROUP) LIKE '%'||:FUZZYSEARCH_TEXT||'%'
            OR LOWER(RESOURCE_FILTER_DESC) LIKE '%'||:FUZZYSEARCH_TEXT||'%'
            OR LOWER(LOCATION_FILTER_DESC) LIKE '%'||:FUZZYSEARCH_TEXT||'%'
            OR LOWER(RULE_TYPE_DESC) LIKE '%'||:FUZZYSEARCH_TEXT||'%'
            OR LOWER(TIME_RANGE_UNIT_DESC) LIKE '%'||:FUZZYSEARCH_TEXT||'%'
            OR LOWER(SCHEDULE_TIME_TYPE_DESC) LIKE '%'||:FUZZYSEARCH_TEXT||'%'
            OR LOWER(OPTIMIZATION_DESC) LIKE '%'||:FUZZYSEARCH_TEXT||'%'
        )
    ;
    
    SELECT COUNT(*) INTO RULE_TYPE_LIST_CNT FROM :RULE_TYPE_LIST_INPUT;
    SELECT COUNT(*) INTO SD_PLAN_ID_LIST_CNT FROM :SD_PLAN_ID_LIST_INPUT;
    SELECT COUNT(*) INTO RESOURCE_FILTER_ID_CNT FROM :RESOURCE_FILTER_ID_LIST_INPUT;
    SELECT COUNT(*) INTO LOCATION_FILTER_ID_CNT FROM :LOCATION_FILTER_ID_LIST_INPUT;
    SELECT COUNT(*) INTO TIME_RANGE_LIST_CNT FROM :TIME_RANGE_UNIT_LIST_INPUT;
    SELECT COUNT(*) INTO NETWORK_SETTING_GROUP_ID_LIST_CNT FROM :NETWORK_SETTING_GROUP_ID_LIST_INPUT;
    SELECT COUNT(*) INTO LOC_DET_ID_LIST_CNT FROM :LOC_DET_ID_LIST_INPUT;
    SELECT COUNT(*) INTO SCHEDULE_TIME_TYPE_LIST_CNT FROM :SCHEDULE_TIME_TYPE_LIST_INPUT;
    SELECT COUNT(*) INTO OPTIMIZATION_LIST_CNT FROM :OPTIMIZATION_LIST_INPUT;

    --In order to speed up the performance, fetch the table instead of the view as mush as possible

    IF RULE_TYPE_LIST_CNT = 0
        THEN RULE_TYPE_LIST_INPUT = SELECT DISTINCT RULE_TYPE AS ID FROM :LOCATION_RULE_DATA;
    END IF;
    
    IF SD_PLAN_ID_LIST_CNT = 0
        THEN SD_PLAN_ID_LIST_INPUT = SELECT DISTINCT SD_PLAN_ID AS ID FROM :LOCATION_RULE_DATA;
    END IF;
    
    IF TIME_RANGE_LIST_CNT = 0
        THEN TIME_RANGE_LIST_INPUT = SELECT DISTINCT TIME_RANGE_UNIT AS ID FROM :LOCATION_RULE_DATA;
    END IF;
    
    IF RESOURCE_FILTER_ID_CNT = 0
        THEN RESOURCE_FILTER_ID_LIST_INPUT = SELECT DISTINCT RESOURCE_FILTER_ID AS ID FROM :LOCATION_RULE_DATA;
    END IF;
    
    IF LOCATION_FILTER_ID_CNT = 0
        THEN LOCATION_FILTER_ID_LIST_INPUT = SELECT DISTINCT LOCATION_FILTER_ID AS ID FROM :LOCATION_RULE_DATA;
    END IF;
    
    IF NETWORK_SETTING_GROUP_ID_LIST_CNT = 0
        THEN NETWORK_SETTING_GROUP_ID_LIST_INPUT = SELECT DISTINCT NETWORK_SETTING_GROUP_ID AS ID FROM :LOCATION_RULE_DATA;
    END IF;
    
    IF LOC_DET_ID_LIST_CNT = 0
        THEN LOC_DET_ID_LIST_INPUT = SELECT DISTINCT LOCATION_DETERMIN_ID AS ID FROM :LOCATION_RULE_DATA;
    END IF;
    
    IF SCHEDULE_TIME_TYPE_LIST_CNT = 0
        THEN SCHEDULE_TIME_TYPE_LIST_INPUT = SELECT DISTINCT SCHEDULE_TIME_TYPE AS ID FROM :LOCATION_RULE_DATA;
    END IF;
    
    IF OPTIMIZATION_LIST_CNT = 0
        THEN OPTIMIZATION_LIST_INPUT = SELECT DISTINCT OPTIMIZATION AS ID FROM :LOCATION_RULE_DATA;
    END IF;

    --If the input list contains NULL, we need to fetch records including NULL!!!!

    FILTERED_OUTPUT = SELECT MASTER_TBL.*
    FROM :LOCATION_RULE_DATA AS MASTER_TBL
    INNER JOIN :RULE_TYPE_LIST_INPUT AS RULE_TYPE_TBL
        ON IFNULL(MASTER_TBL.RULE_TYPE, 0) = IFNULL(RULE_TYPE_TBL.ID, 0)
    INNER JOIN :SD_PLAN_ID_LIST_INPUT AS SD_PLAN_TBL
        ON IFNULL(MASTER_TBL.SD_PLAN_ID, 0) = IFNULL(SD_PLAN_TBL.ID, 0)
    INNER JOIN :RESOURCE_FILTER_ID_LIST_INPUT AS RESOURCE_FILTER_TBL
        ON IFNULL(MASTER_TBL.RESOURCE_FILTER_ID, 0) = IFNULL(RESOURCE_FILTER_TBL.ID, 0)
    INNER JOIN :LOCATION_FILTER_ID_LIST_INPUT AS LOCATION_FILTER_TBL
        ON IFNULL(MASTER_TBL.LOCATION_FILTER_ID, 0) = IFNULL(LOCATION_FILTER_TBL.ID, 0)
    INNER JOIN :TIME_RANGE_LIST_INPUT AS TIME_RANGE_TBL
        ON IFNULL(MASTER_TBL.TIME_RANGE_UNIT,0) = IFNULL(TIME_RANGE_TBL.ID,0) 
    INNER JOIN :NETWORK_SETTING_GROUP_ID_LIST_INPUT AS COST_MODEL_TBL
        ON IFNULL(MASTER_TBL.NETWORK_SETTING_GROUP_ID, 0) = IFNULL(COST_MODEL_TBL.ID, 0)
    INNER JOIN :LOC_DET_ID_LIST_INPUT AS LOC_DET_TBL
        ON IFNULL(MASTER_TBL.LOCATION_DETERMIN_ID, 0) = IFNULL(LOC_DET_TBL.ID, 0)
    INNER JOIN :SCHEDULE_TIME_TYPE_LIST_INPUT AS SCHEDULE_TYPE_TBL
        ON IFNULL(MASTER_TBL.SCHEDULE_TIME_TYPE, 0) = IFNULL(SCHEDULE_TYPE_TBL.ID, 0)
    INNER JOIN :OPTIMIZATION_LIST_INPUT AS OPT_TBL
        ON IFNULL(MASTER_TBL.OPTIMIZATION, 0) = IFNULL(OPT_TBL.ID, 0)
    ;

    RULE_TYPE_LIST_OUTPUT = SELECT DISTINCT RULE_TYPE AS KEY, RULE_TYPE_DESC AS TEXT 
                            FROM :FILTERED_OUTPUT ORDER BY KEY;
                            
    SD_PLAN_ID_LIST_OUTPUT = SELECT DISTINCT SD_PLAN_ID AS KEY, SUPPLY_DEMAND_PLAN AS TEXT
                             FROM :FILTERED_OUTPUT ORDER BY KEY;
                             
    RESOURCE_FILTER_ID_LIST_OUTPUT = SELECT DISTINCT (CASE WHEN RESOURCE_FILTER_ID=0 THEN NULL 
                                                       WHEN RESOURCE_FILTER_ID IS NULL THEN NULL 
                                                       ELSE RESOURCE_FILTER_ID END) AS KEY, 
                                                     RESOURCE_FILTER_DESC AS TEXT 
                                     FROM :FILTERED_OUTPUT 
                                     ORDER BY RESOURCE_FILTER_DESC;
                                     
    LOCATION_FILTER_ID_LIST_OUTPUT = SELECT DISTINCT LOCATION_FILTER_ID AS KEY, LOCATION_FILTER_DESC AS TEXT 
                                     FROM :FILTERED_OUTPUT ORDER BY LOCATION_FILTER_DESC;
                             
    TIME_RANGE_UNIT_LIST_OUTPUT = SELECT DISTINCT TIME_RANGE_UNIT AS KEY, TIME_RANGE_UNIT_DESC AS TEXT 
                             FROM :FILTERED_OUTPUT ORDER BY TIME_RANGE_UNIT;
                        
    NETWORK_SETTING_GROUP_ID_LIST_OUTPUT = SELECT DISTINCT (CASE WHEN NETWORK_SETTING_GROUP_ID = 0 THEN NULL 
                                                             WHEN NETWORK_SETTING_GROUP_ID IS NULL THEN NULL
                                                             ELSE NETWORK_SETTING_GROUP_ID END) AS KEY, 
                                                           NETWORK_SETTING_GROUP AS TEXT
                                FROM :FILTERED_OUTPUT ORDER BY KEY;
                           
    LOC_DET_ID_LIST_OUTPUT = SELECT DISTINCT (CASE WHEN LOCATION_DETERMIN_ID = 0 THEN NULL 
                                               WHEN LOCATION_DETERMIN_ID IS NULL THEN NULL
                                               ELSE LOCATION_DETERMIN_ID END) AS KEY, 
                                             LOCATION_DETERMINATION_RULE AS TEXT
                             FROM :FILTERED_OUTPUT ORDER BY KEY;
                             
    SCHEDULE_TIME_TYPE_LIST_OUTPUT = SELECT DISTINCT SCHEDULE_TIME_TYPE AS KEY, 
                                                     SCHEDULE_TIME_TYPE_DESC AS TEXT
                                     FROM :FILTERED_OUTPUT ORDER BY KEY;
                                     
    OPTIMIZATION_LIST_OUTPUT = SELECT DISTINCT (CASE WHEN OPTIMIZATION=0 THEN NULL 
                                                 WHEN OPTIMIZATION IS NULL THEN NULL
                                                 ELSE OPTIMIZATION END) AS KEY, 
                                               (CASE WHEN OPTIMIZATION=0 THEN NULL 
                                                 WHEN OPTIMIZATION IS NULL THEN NULL
                                                 ELSE OPTIMIZATION_DESC END) AS TEXT
                               FROM :FILTERED_OUTPUT ORDER BY KEY;
END;