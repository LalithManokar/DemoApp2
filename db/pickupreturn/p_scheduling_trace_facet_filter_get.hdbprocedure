PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.pickupreturn::p_scheduling_trace_facet_filter_get" (
    IN FUZZYSEARCH_TEXT VARCHAR(500),
    IN PICKUP_OR_RETURN INTEGER,
    IN LOCATION_FILTER_ID BIGINT,
    IN STATUS_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
    IN SCHEDULING_TYPE_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
    IN OPTIMIZATION_SETTING_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
    IN PRE_LOCATION_ID_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_str_list",
    IN CUR_LOCATION_ID_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_str_list",
    IN USER_ID_LIST_INPUT "sap.tm.trp.db.pickupreturn::tt_id_list",
    IN RESOURCE_CATEGORY VARCHAR(50),
    OUT STATUS_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list",
    OUT SCHEDULING_TYPE_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list",
    OUT OPTIMIZATION_SETTING_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list",
    OUT PRE_LOCATION_ID_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_str_str_list",
    OUT CUR_LOCATION_ID_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_str_str_list",
    OUT USER_ID_LIST_OUTPUT "sap.tm.trp.db.pickupreturn::tt_facet_filter_id_str_list"
) 
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 
DEFAULT SCHEMA "SAP_TM_TRP"
READS SQL DATA 
AS
    STATUS_LIST_CNT INTEGER; 
    SCHEDULING_TYPE_LIST_CNT INTEGER;
    PRE_LOCATION_ID_LIST_CNT INTEGER;
    CUR_LOCATION_ID_LIST_CNT INTEGER;
    USER_ID_LIST_CNT INTEGER;
    OPTIMIZATION_SETTING_LIST_CNT INTEGER;
BEGIN
    LOG_DATA = SELECT * FROM "sap.tm.trp.db.pickupreturn::v_location_rule_assignment_log"
        WHERE (
            LOWER(RULE_NAME) LIKE '%'||LOWER(:FUZZYSEARCH_TEXT)||'%'
            OR LOWER(RUN_ID) LIKE '%'||LOWER(:FUZZYSEARCH_TEXT)||'%'
            OR LOWER(TU_ID) LIKE '%'||LOWER(:FUZZYSEARCH_TEXT)||'%'
            OR LOWER(PRE_LOCATION_ID) LIKE '%'||LOWER(:FUZZYSEARCH_TEXT)||'%'
            OR LOWER(CUR_LOCATION_ID) LIKE '%'||LOWER(:FUZZYSEARCH_TEXT)||'%'
            OR LOWER(USER) LIKE '%'||LOWER(:FUZZYSEARCH_TEXT)||'%'
            OR LOWER(PRE_LOCATION_NAME) LIKE '%'||LOWER(:FUZZYSEARCH_TEXT)||'%'
            OR LOWER(CUR_LOCATION_NAME) LIKE '%'||LOWER(:FUZZYSEARCH_TEXT)||'%'
        )
        AND RULE_TYPE = :PICKUP_OR_RETURN
        AND RESOURCE_CATEGORY =:RESOURCE_CATEGORY
    ;
    IF LOCATION_FILTER_ID > 0
        THEN LOG_DATA = SELECT * FROM :LOG_DATA WHERE LOCATION_FILTER_ID = :LOCATION_FILTER_ID;
    END IF;
    
    SELECT COUNT(*) INTO STATUS_LIST_CNT FROM :STATUS_LIST_INPUT;
    SELECT COUNT(*) INTO SCHEDULING_TYPE_LIST_CNT FROM :SCHEDULING_TYPE_LIST_INPUT;
    SELECT COUNT(*) INTO PRE_LOCATION_ID_LIST_CNT FROM :PRE_LOCATION_ID_LIST_INPUT;
    SELECT COUNT(*) INTO CUR_LOCATION_ID_LIST_CNT FROM :CUR_LOCATION_ID_LIST_INPUT;
    SELECT COUNT(*) INTO USER_ID_LIST_CNT FROM :USER_ID_LIST_INPUT;
    SELECT COUNT(*) INTO OPTIMIZATION_SETTING_LIST_CNT FROM :OPTIMIZATION_SETTING_LIST_INPUT;

    IF :STATUS_LIST_CNT = 0
        THEN STATUS_LIST_INPUT = SELECT DISTINCT STATUS AS ID FROM :LOG_DATA;
    END IF;
    IF :SCHEDULING_TYPE_LIST_CNT = 0
        THEN SCHEDULING_TYPE_LIST_INPUT = SELECT DISTINCT SCHEDULE_TIME_TYPE AS ID FROM :LOG_DATA;
    END IF;
    IF :PRE_LOCATION_ID_LIST_CNT = 0
        THEN PRE_LOCATION_ID_LIST_INPUT = SELECT DISTINCT PRE_LOCATION_ID AS STR FROM :LOG_DATA;
    END IF;
    IF :CUR_LOCATION_ID_LIST_CNT = 0
        THEN CUR_LOCATION_ID_LIST_INPUT = SELECT DISTINCT CUR_LOCATION_ID AS STR FROM :LOG_DATA;
    END IF;
    IF :USER_ID_LIST_CNT = 0
        THEN USER_ID_LIST_INPUT = SELECT DISTINCT USER_ID AS ID FROM :LOG_DATA;
    END IF;
    IF :OPTIMIZATION_SETTING_LIST_CNT = 0
        THEN OPTIMIZATION_SETTING_LIST_INPUT = SELECT DISTINCT OP_SETTING_TYPE AS ID FROM :LOG_DATA;
    END IF;

    FILTERED_OUTPUT = SELECT DISTINCT MASTER_TBL.* 
        FROM :LOG_DATA AS MASTER_TBL
        INNER JOIN :STATUS_LIST_INPUT AS STATUS_TBL
            ON IFNULL(MASTER_TBL.STATUS,0) = IFNULL(STATUS_TBL.ID,0)
        INNER JOIN :SCHEDULING_TYPE_LIST_INPUT AS SCHEDULING_TBL
            ON IFNULL(MASTER_TBL.SCHEDULE_TIME_TYPE,0) = IFNULL(SCHEDULING_TBL.ID,0)
        INNER JOIN :OPTIMIZATION_SETTING_LIST_INPUT AS OPTIMIZATION_TBL
            ON IFNULL(MASTER_TBL.OP_SETTING_TYPE,0) = IFNULL(OPTIMIZATION_TBL.ID,0)
        INNER JOIN :PRE_LOCATION_ID_LIST_INPUT AS PRE_LOCATION_ID_TBL
            ON IFNULL(MASTER_TBL.PRE_LOCATION_ID, '') = IFNULL(PRE_LOCATION_ID_TBL.STR, '')
        INNER JOIN :CUR_LOCATION_ID_LIST_INPUT AS CUR_LOCATION_ID_TBL
            ON IFNULL(MASTER_TBL.CUR_LOCATION_ID, '') = IFNULL(CUR_LOCATION_ID_TBL.STR, '')
        INNER JOIN :USER_ID_LIST_INPUT AS USER_ID_TBL
            ON IFNULL(MASTER_TBL.USER_ID,0) = IFNULL(USER_ID_TBL.ID,0)
    ;
    
    STATUS_LIST_OUTPUT = SELECT DISTINCT STATUS AS KEY, 
                                STATUS AS TEXT
                         FROM :FILTERED_OUTPUT ORDER BY KEY;
                         
    SCHEDULING_TYPE_LIST_OUTPUT = SELECT DISTINCT SCHEDULE_TIME_TYPE AS KEY,
                                         SCHEDULE_TIME_TYPE AS TEXT
                             FROM :FILTERED_OUTPUT ORDER BY KEY;
                             
    PRE_LOCATION_ID_LIST_OUTPUT = SELECT DISTINCT IFNULL (PRE_LOCATION_ID,'') AS KEY,
                                         IFNULL (PRE_LOCATION_NAME,'') AS TEXT
                                         FROM :FILTERED_OUTPUT ORDER BY KEY;
                                         
    CUR_LOCATION_ID_LIST_OUTPUT = SELECT DISTINCT IFNULL (CUR_LOCATION_ID,'') AS KEY, 
                                         IFNULL (CUR_LOCATION_NAME,'') AS TEXT
                                  FROM :FILTERED_OUTPUT ORDER BY KEY;
                                  
    USER_ID_LIST_OUTPUT = SELECT DISTINCT IFNULL (USER_ID,0) AS KEY,
                                 IFNULL (USER,'') AS TEXT
                          FROM :FILTERED_OUTPUT ORDER BY KEY;
                          
    OPTIMIZATION_SETTING_LIST_OUTPUT = SELECT DISTINCT OP_SETTING_TYPE AS KEY,
                                         OP_SETTING_TYPE AS TEXT
                             FROM :FILTERED_OUTPUT ORDER BY KEY;

END;
