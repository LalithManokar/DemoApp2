PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.pickupreturn::p_location_rule_create" (
    IN RULE_NAME  VARCHAR(200),
    IN DESP VARCHAR(500),
    IN RULE_TYPE INTEGER,-- comment="1:pick up  2:return"
    IN TIME_RANGE INTEGER,-- comment="Transfer to seconds"
    IN TIME_RANGE_UINT INTEGER, -- comment="1:hours 2:days 3:weeks"
    IN EQUIP_FILTER_ID  BIGINT,
    IN LOCATION_FILTER_ID BIGINT,
    IN SD_PLAN_ID BIGINT,
    IN NETWORK_SETTING_GROUP_ID BIGINT,
    IN SCHEDULE_TIME_TYPE INTEGER, -- comment="0:manual 1:automatic"
    IN EXECUTE_INTERVAL INTEGER,
    IN EXECUTE_TIME_UINT VARCHAR(50),
    IN EXECUTE_DAY INTEGER,
    IN START_DATETIME VARCHAR(50),
    IN END_DATETIME VARCHAR(50),
    IN OP_SETTING_TYPE INTEGER, --comment="1:location 2:Opt 3:location+Opt"
    IN LOCATION_DETERMIN_ID BIGINT,
    IN OPTIMIZATION INTEGER, --comment="1:cost based 2:Nothing based 3:cost+balancing"
    IN ALLOWED_USAGE VARCHAR(3),
    IN FILTER_EXECUTION SMALLINT,
    IN EXCLUSIVE_RULE_ID BIGINT,
    IN TIME_WINDOW_SECONDS BIGINT,  --unit is seconds
    IN RANK_NUMBER INTEGER,
    IN RESOURCE_CATEGORY VARCHAR(20),
    IN SEL_DATE VARCHAR(200),
    IN KEEP_EXECUTION_RUNS BIGINT,
    IN EXECUTE_WORKING_HOUR VARCHAR(1),
    IN START_WORKING_HOUR_TIME TIMESTAMP,
    IN END_WORKING_HOUR_TIME TIMESTAMP,
    IN TIMEZONES VARCHAR(40),
    OUT RULE_ID BIGINT,
    OUT STATUS INTEGER,  --0 error  1 success
    OUT MESSAGE VARCHAR(200)
   )
	 LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER
    DEFAULT SCHEMA "SAP_TM_TRP"
    AS
BEGIN

    DECLARE V_USER_ID BIGINT;
    DECLARE V_USERNAME VARCHAR(200);
    DECLARE V_SPRAS VARCHAR(10);
    DECLARE V_TIMESTAMP_START  DATETIME  := CURRENT_UTCTIMESTAMP;
    DECLARE V_TIME_RANGE INT;
    DECLARE NAME_COUNT INTEGER;
    --DECLARE PIPELINE_MODEL_COUNT INTEGER;
    DECLARE V_STATUS INTEGER; --0 error  1 success
    DECLARE V_MESSAGE VARCHAR(200);

    SELECT IFNULL(MAX(USERNAME), '') INTO V_USERNAME
    FROM "sap.tm.trp.db.systemmanagement.user::cv_get_username";

    CALL "sap.tm.trp.db.systemmanagement.user::p_get_current_user_id"(V_USER_ID);

    SELECT "sap.tm.trp.db.pickupreturn::s_location_rule".NEXTVAL INTO RULE_ID FROM DUMMY;
    SELECT IFNULL ( MAX (SPRAS),'') INTO V_SPRAS
    FROM "sap.tm.trp.db.semantic.common::v_lang_code";

    IF :TIME_RANGE_UINT=1 THEN
      V_TIME_RANGE:=:TIME_RANGE*3600;
  	ELSEIF :TIME_RANGE_UINT=2 THEN
  	    V_TIME_RANGE:=:TIME_RANGE*3600*24;
    ELSE
  	    V_TIME_RANGE:=:TIME_RANGE*3600*24*7;
    END IF;

    SELECT COUNT(*) INTO NAME_COUNT
    FROM "sap.tm.trp.db.pickupreturn::t_location_assignment_rule"
    WHERE RULE_NAME = :RULE_NAME;

     --Must have both supply and demand data flag
    /*
    SELECT COUNT(*) INTO PIPELINE_MODEL_COUNT
    FROM "sap.tm.trp.db.pipeline::t_plan_model" AS A
    INNER JOIN "sap.tm.trp.db.pipeline::v_pipeline_has_supply_demand" AS B
    ON A.PIPELINE_MODEL_ID = B.PIPELINE_MODEL_ID
    WHERE B.HAS_SUPPLY_DEMAND = 0 AND A.ID = :SD_PLAN_ID;*/
    CALL "sap.tm.trp.db.pickupreturn::p_check_supply_demand_flag"(:SD_PLAN_ID, V_STATUS, V_MESSAGE);
    IF :SCHEDULE_TIME_TYPE = 1 AND :OPTIMIZATION = 2 AND :OP_SETTING_TYPE <> 1 THEN
        STATUS := 0;
        MESSAGE := 'MSG_ERROR_SCHEDULE_OPTIMIZATION_CONFLICT';
    ELSEIF V_STATUS = 0 THEN
        STATUS := 0;
        MESSAGE := :V_MESSAGE;
    ELSE
      INSERT INTO "sap.tm.trp.db.pickupreturn::t_location_assignment_rule"
		            (  ID,
		               CODE,
		               RULE_NAME,
		               RULE_TYPE,
		               TIME_RANGE,
		               TIME_RANGE_UINT,
		               EQUIP_FILTER_ID,
		               LOCATION_FILTER_ID,
		               SD_PLAN_ID,
		               COST_MODEL_ID,
		               SCHEDULE_TIME_TYPE,
		               EXECUTE_INTERVAL,
		               EXECUTE_TIME_UINT,
		               EXECUTE_DAY,
		               START_DATETIME,
		               END_DATETIME,
		               OP_SETTING_TYPE,
		               LOCATION_DETERMIN_ID,
		               OPTIMIZATION,
		               CREATE_BY,
		               CREATE_ON,
		               MODIFIED_BY,
		               MODIFIED_ON,
		               ALLOWED_USAGE,
		               STATUS,
		               FILTER_EXECUTION,
		               EXCLUSIVE_RULE_ID,
		               NETWORK_SETTING_GROUP_ID,
		               TIME_WINDOW_SECONDS,
		               RANK_NUMBER,
		               RESOURCE_CATEGORY,
		               SELECTION_DATE,
		               KEEP_EXECUTION_RUNS,
		               EXECUTE_WORKING_HOUR,
		               START_WORKING_HOUR_TIME,
		               END_WORKING_HOUR_TIME,
		               TIMEZONES
		            )
		     SELECT :RULE_ID,
		            :RULE_NAME,
		            :RULE_NAME,
		            :RULE_TYPE,
		            :V_TIME_RANGE,
		            :TIME_RANGE_UINT,
		            :EQUIP_FILTER_ID,
		            :LOCATION_FILTER_ID,
		            :SD_PLAN_ID,
		            0,
		            :SCHEDULE_TIME_TYPE,
		            :EXECUTE_INTERVAL,
		            :EXECUTE_TIME_UINT,
		            :EXECUTE_DAY,
		            :START_DATETIME,
		            :END_DATETIME,
		            :OP_SETTING_TYPE,
		            :LOCATION_DETERMIN_ID,
		            :OPTIMIZATION,
		            :V_USER_ID,
		            :V_TIMESTAMP_START,
		            :V_USER_ID,
		            :V_TIMESTAMP_START,
		            :ALLOWED_USAGE,
		            0,
		            :FILTER_EXECUTION,
		            :EXCLUSIVE_RULE_ID,
		            :NETWORK_SETTING_GROUP_ID,
		            :TIME_WINDOW_SECONDS,
		            :RANK_NUMBER,
		            :RESOURCE_CATEGORY,
		            :SEL_DATE,
		            :KEEP_EXECUTION_RUNS,
		            :EXECUTE_WORKING_HOUR,
		            :START_WORKING_HOUR_TIME,
		            :END_WORKING_HOUR_TIME,
		            :TIMEZONES
		       FROM DUMMY;

		    INSERT INTO "sap.tm.trp.db.pickupreturn::t_location_rule_t"(ID, SPRAS, DESC)
		    VALUES (:RULE_ID, :V_SPRAS, :DESP);

		    STATUS := 1;
		    MESSAGE :='MSG_SUCCESS_STATUS';
		END IF ;
END;