PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.hrf.ruleManage::p_compose_ScoreOwners_alert_forUI" (
IN IN_EXECUTION_ID BIGINT, 
IN IN_FILTER_TYPE INTEGER,
IN IN_TBL "sap.tm.trp.db.hrf::tt_location_owners",
IN  IN_PLAN_MODEL_TYPE_ID INTEGER,
OUT OUTPUT_RECORDS INTEGER  
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "SAP_TM_TRP"
	AS
BEGIN
     --persistent/temporary plan
    IF (:IN_PLAN_MODEL_TYPE_ID = 1 or :IN_PLAN_MODEL_TYPE_ID = 2 or IN_PLAN_MODEL_TYPE_ID = 99)
        THEN  
          LOCATION_SQL = 
          SELECT 
          	   PLAN_EXECUTION_ID,
	           PLAN_MODEL_ID,    
	           PLAN_MODEL_TYPE_ID,                   
	           PLAN_MODEL_CATEGORY_ID,                 
	           FILTER_TYPE,
	           FILTER_GROUP_ID,
	           PIPELINE_MODEL_ID,
	           NODE_ID,
	           NODE_NAME,
	           NODE_VISIBLE,
	           NODE_OUTPUT_KEYS,
               METADATA_NODE_ID,
	           DATA_OBJECT_FORMAT,
	           LOCATION_TYPE,
	           LOCATION_ID,
	           LOCATION_NAME,
	           EQUIP_TYPE_TYPE,
	           EQUIP_TYPE_ID,
	           EQUIP_TYPE_NAME,
	           TIME_FILTER_DESC,
	           TIME_INTERVAL_ID,
	           SEQUENCE,
	           START_TIME,
	           TIME_STEP,
	           STOCK,
	           SUPPLY,
	           DEMAND,
	           BALANCE_SUPPLY_DEMAND,
	           BALANCE_STOCK_SUPPLY_DEMAND,
	           MIN_SAFETY_STOCK,
	           MAX_SAFETY_STOCK,
	           MAX_CAPACITY,
               UNIT,
               ROW_ID,
               MESSAGE,
               ALERT_REASON,
               ALERT_SCORE_IMP,
               ALERT_SCORE_EMER,
	           ALERT_SCORE_IMP_EMER,
	           ALERT_SCORE_NORMALIZING
           FROM "sap.tm.trp.db.hrf.supplyDemand::t_trp_hrf_SD_output_normalizedAlertScore" 
           WHERE PLAN_EXECUTION_ID = :IN_EXECUTION_ID;
           
   PLAN_MODEL_ALERT_FOR_UI_TBL  =  
           SELECT     
               T01.PLAN_EXECUTION_ID,
	           PLAN_MODEL_ID,    
	           PLAN_MODEL_TYPE_ID,                   
	           PLAN_MODEL_CATEGORY_ID,                 
	           FILTER_TYPE,
	           FILTER_GROUP_ID,
	           PIPELINE_MODEL_ID,
	           NODE_ID,
	           NODE_NAME,
	           NODE_VISIBLE,
	           NODE_OUTPUT_KEYS,
               METADATA_NODE_ID,
	           DATA_OBJECT_FORMAT,
	           LOCATION_TYPE,
	           T01.LOCATION_ID,
	           LOCATION_NAME,
	           EQUIP_TYPE_TYPE,
	           EQUIP_TYPE_ID,
	           EQUIP_TYPE_NAME,
	           TIME_FILTER_DESC,
	           TIME_INTERVAL_ID,
	           SEQUENCE,
	           START_TIME,
	           TIME_STEP,
	           STOCK,
	           SUPPLY,
	           DEMAND,
	           BALANCE_SUPPLY_DEMAND,
	           BALANCE_STOCK_SUPPLY_DEMAND,
	           MIN_SAFETY_STOCK,
	           MAX_SAFETY_STOCK,
	           MAX_CAPACITY,
               UNIT,
               ROW_ID,
               MESSAGE,
               ALERT_REASON,
               T01.ALERT_SCORE_NORMALIZING AS ALERT_SCORE,
               T02.OWNERS AS OWNER
       FROM :LOCATION_SQL AS T01
       LEFT OUTER JOIN  :IN_TBL AS T02
       ON (T01.LOCATION_ID = T02.LOCATION_ID);
       
  INSERT INTO "sap.tm.trp.db.hrf.supplyDemand::t_trp_hrf_SD_output_forUI"
       (       PLAN_EXECUTION_ID,
	           PLAN_MODEL_ID,    
	           PLAN_MODEL_TYPE_ID,                   
	           PLAN_MODEL_CATEGORY_ID,                 
	           FILTER_TYPE,
	           FILTER_GROUP_ID,
	           PIPELINE_MODEL_ID,
	           NODE_ID,
	           NODE_NAME,
	           NODE_VISIBLE,
	           NODE_OUTPUT_KEYS,
               METADATA_NODE_ID,
	           DATA_OBJECT_FORMAT,
	           LOCATION_TYPE,
	           LOCATION_ID,
	           LOCATION_NAME,
	           EQUIP_TYPE_TYPE,
	           EQUIP_TYPE_ID,
	           EQUIP_TYPE_NAME,
	           TIME_FILTER_DESC,
	           TIME_INTERVAL_ID,
	           SEQUENCE,
	           START_TIME,
	           TIME_STEP,
	           STOCK,
	           SUPPLY,
	           DEMAND,
	           BALANCE_SUPPLY_DEMAND,
	           BALANCE_STOCK_SUPPLY_DEMAND,
	           MIN_SAFETY_STOCK,
	           MAX_SAFETY_STOCK,
	           MAX_CAPACITY,
               UNIT,
               ROW_ID,
               MESSAGE,
               ALERT_REASON,
               ALERT_SCORE,
               OWNER,
        LOCATION_FILTER_TYPE)
     SELECT 
        PLAN_EXECUTION_ID,
	           PLAN_MODEL_ID,    
	           PLAN_MODEL_TYPE_ID,                   
	           PLAN_MODEL_CATEGORY_ID,                 
	           FILTER_TYPE,
	           FILTER_GROUP_ID,
	           PIPELINE_MODEL_ID,
	           NODE_ID,
	           NODE_NAME,
	           NODE_VISIBLE,
	           NODE_OUTPUT_KEYS,
               METADATA_NODE_ID,
	           DATA_OBJECT_FORMAT,
	           LOCATION_TYPE,
	           LOCATION_ID,
	           LOCATION_NAME,
	           EQUIP_TYPE_TYPE,
	           EQUIP_TYPE_ID,
	           EQUIP_TYPE_NAME,
	           TIME_FILTER_DESC,
	           TIME_INTERVAL_ID,
	           SEQUENCE,
	           START_TIME,
	           TIME_STEP,
	           STOCK,
	           SUPPLY,
	           DEMAND,
	           BALANCE_SUPPLY_DEMAND,
	           BALANCE_STOCK_SUPPLY_DEMAND,
	           MIN_SAFETY_STOCK,
	           MAX_SAFETY_STOCK,
	           MAX_CAPACITY,
               UNIT,
               ROW_ID,
               MESSAGE,
               ALERT_REASON,
               ALERT_SCORE,
               '',
        case 
        when FILTER_TYPE = 1 or FILTER_TYPE = 7
           then 1
        when FILTER_TYPE = 2 or FILTER_TYPE = 8
           then 3
        when FILTER_TYPE = 3 or FILTER_TYPE = 9
           then 5
        when FILTER_TYPE = 4 or FILTER_TYPE = 10
           then 2
        when FILTER_TYPE = 5 or FILTER_TYPE = 11
       	   then 4
        when FILTER_TYPE = 6 or FILTER_TYPE = 12
       	   then 6
        end as LOCATION_FILTER_TYPE 
     FROM :PLAN_MODEL_ALERT_FOR_UI_TBL T1
     where T1.PLAN_EXECUTION_ID = :IN_EXECUTION_ID;
     
     select count(*) into OUTPUT_RECORDS 
     from "sap.tm.trp.db.hrf.supplyDemand::t_trp_hrf_SD_output_forUI" t1
     where t1.PLAN_EXECUTION_ID = :IN_EXECUTION_ID;
     
  ELSEIF(:IN_PLAN_MODEL_TYPE_ID = 4) --persistent KPI plan
         THEN   
            LOCATION_SQL_KPI = 
          SELECT 
	           PLAN_EXECUTION_ID,
	           PLAN_MODEL_ID,    
	           PLAN_MODEL_TYPE_ID,                   
	           PLAN_MODEL_CATEGORY_ID,                 
	           FILTER_TYPE,
	           FILTER_GROUP_ID,
	           PIPELINE_MODEL_ID,
	           NODE_ID,
	           NODE_NAME,
	           NODE_VISIBLE,
	           NODE_OUTPUT_KEYS,
               METADATA_NODE_ID,
	           DATA_OBJECT_FORMAT,
	           LOCATION_TYPE,
	           LOCATION_ID,
	           LOCATION_NAME,
	           EQUIP_TYPE_TYPE,
	           EQUIP_TYPE_ID,
	           EQUIP_TYPE_NAME,
	           TIME_INTERVAL_ID,
	           TIME_FILTER_DESC,
	           SEQUENCE,
	           START_TIME,
	           TIME_STEP,
               RATE,
               QUANTITY,
               RESERV1,
               RESERV2,
               UNIT,
               ROW_ID,
               MESSAGE,
               ALERT_REASON,
               ALERT_SCORE_IMP,
               ALERT_SCORE_EMER,
	           ALERT_SCORE_IMP_EMER,
	           ALERT_SCORE_NORMALIZING
           FROM "sap.tm.trp.db.hrf.kpi::t_trp_hrf_KPI_cus_output_normalizedAlertScore"
           WHERE PLAN_EXECUTION_ID = :IN_EXECUTION_ID;
           
   PLAN_MODEL_ALERT_FOR_UI_TBL_KPI  =  
           SELECT     
               T01.PLAN_EXECUTION_ID,
	           PLAN_MODEL_ID,    
	           PLAN_MODEL_TYPE_ID,                   
	           PLAN_MODEL_CATEGORY_ID,                 
	           FILTER_TYPE,
	           FILTER_GROUP_ID,
	           PIPELINE_MODEL_ID,
	           NODE_ID,
	           NODE_NAME,
	           NODE_VISIBLE,
	           NODE_OUTPUT_KEYS,
               METADATA_NODE_ID,
	           DATA_OBJECT_FORMAT,
	           LOCATION_TYPE,
	           T01.LOCATION_ID,
	           LOCATION_NAME,
	           EQUIP_TYPE_TYPE,
	           EQUIP_TYPE_ID,
	           EQUIP_TYPE_NAME,
	           TIME_INTERVAL_ID,
	           TIME_FILTER_DESC,
	           SEQUENCE,
	           START_TIME,
	           TIME_STEP,
               RATE,
               QUANTITY,
               RESERV1,
               RESERV2,
               UNIT,
               ROW_ID,
               MESSAGE,
               ALERT_REASON,
               T01.ALERT_SCORE_NORMALIZING AS ALERT_SCORE,
               T02.OWNERS AS OWNER
       FROM :LOCATION_SQL_KPI AS T01
       LEFT OUTER JOIN  :IN_TBL AS T02
       ON (T01.LOCATION_ID = T02.LOCATION_ID);
       
  INSERT INTO "sap.tm.trp.db.hrf.kpi::t_trp_hrf_KPI_cus_output_forUI"
       (       PLAN_EXECUTION_ID,
	           PLAN_MODEL_ID,    
	           PLAN_MODEL_TYPE_ID,                   
	           PLAN_MODEL_CATEGORY_ID,                 
	           FILTER_TYPE,
	           FILTER_GROUP_ID,
	           PIPELINE_MODEL_ID,
	           NODE_ID,
	           NODE_NAME,
	           NODE_VISIBLE,
	           NODE_OUTPUT_KEYS,
               METADATA_NODE_ID,
	           DATA_OBJECT_FORMAT,
	           LOCATION_TYPE,
	           LOCATION_ID,
	           LOCATION_NAME,
	           EQUIP_TYPE_TYPE,
	           EQUIP_TYPE_ID,
	           EQUIP_TYPE_NAME,
	           TIME_INTERVAL_ID,
	           TIME_FILTER_DESC,
	           SEQUENCE,
	           START_TIME,
	           TIME_STEP,
               RATE,
               QUANTITY,
               RESERV1,
               RESERV2,
               UNIT,
               ROW_ID,
               MESSAGE,
               ALERT_REASON,
               ALERT_SCORE,
               OWNER,
        LOCATION_FILTER_TYPE)
     SELECT 
	           PLAN_EXECUTION_ID,
	           PLAN_MODEL_ID,    
	           PLAN_MODEL_TYPE_ID,                   
	           PLAN_MODEL_CATEGORY_ID,                 
	           FILTER_TYPE,
	           FILTER_GROUP_ID,
	           PIPELINE_MODEL_ID,
	           NODE_ID,
	           NODE_NAME,
	           NODE_VISIBLE,
	           NODE_OUTPUT_KEYS,
               METADATA_NODE_ID,
	           DATA_OBJECT_FORMAT,
	           LOCATION_TYPE,
	           LOCATION_ID,
	           LOCATION_NAME,
	           EQUIP_TYPE_TYPE,
	           EQUIP_TYPE_ID,
	           EQUIP_TYPE_NAME,
	           TIME_INTERVAL_ID,
	           TIME_FILTER_DESC,
	           SEQUENCE,
	           START_TIME,
	           TIME_STEP,
               RATE,
               QUANTITY,
               RESERV1,
               RESERV2,
               UNIT,
               ROW_ID,
               MESSAGE,
               ALERT_REASON,
               ALERT_SCORE,
               OWNER,
        case 
        when FILTER_TYPE = 1 or FILTER_TYPE = 7
           then 1
        when FILTER_TYPE = 2 or FILTER_TYPE = 8
           then 3
        when FILTER_TYPE = 3 or FILTER_TYPE = 9
           then 5
        when FILTER_TYPE = 4 or FILTER_TYPE = 10
           then 2
        when FILTER_TYPE = 5 or FILTER_TYPE = 11
       	   then 4
        when FILTER_TYPE = 6 or FILTER_TYPE = 12
       	   then 6
        end as LOCATION_FILTER_TYPE 
     FROM :PLAN_MODEL_ALERT_FOR_UI_TBL_KPI T1
     where T1.PLAN_EXECUTION_ID = :IN_EXECUTION_ID;
     
     select count(*) into OUTPUT_RECORDS 
     from "sap.tm.trp.db.hrf.kpi::t_trp_hrf_KPI_cus_output_forUI" t1
     where t1.PLAN_EXECUTION_ID = :IN_EXECUTION_ID; 
  ELSE
      select -1 into OUTPUT_RECORDS
		   from dummy;
    END IF;      
END;