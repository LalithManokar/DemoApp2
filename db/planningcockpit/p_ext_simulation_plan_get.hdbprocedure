PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.planningcockpit::p_ext_simulation_plan_get"(
    IN SIMULATION_PLAN_ID BIGINT,
    OUT SIMULATION_PLAN "sap.tm.trp.db.planningcockpit::tt_simulation_plan",
    OUT LOCATIONS "sap.tm.trp.db.planningcockpit::tt_loc_or_primaryloc",
    OUT TIME_RANGE "sap.tm.trp.db.planningcockpit::tt_time_range_for_plan"
)
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER
    DEFAULT SCHEMA "SAP_TM_TRP"
    AS
BEGIN
    DECLARE EXECUTION_ID BIGINT;
    DECLARE NODE_ID BIGINT;
            
    SIMULATION_PLAN = 
        SELECT a.ID, a.CODE, a.NAME, a.PLAN_STATUS, a.SD_PLAN_ID, b.CODE AS SD_PLAN_CODE, b.FILTER_GROUP_ID, a.EXCUTE_ID,
               a.NETWORK_SETTING_GROUP_ID, a.CREATED_BY, a.MODIFIED_BY, a.CREATED_ON, a.MODIFIED_ON, a.STATUS 
        FROM "sap.tm.trp.db.planningcockpit::t_simulation_plan" a
        INNER JOIN "sap.tm.trp.db.pipeline::t_plan_model" b ON (a.SD_PLAN_ID = b.ID)
        WHERE a.ID = :SIMULATION_PLAN_ID;  
    
    CALL "sap.tm.trp.db.planningcockpit::p_get_loc_primaryloc_by_simplanId"(:SIMULATION_PLAN_ID, filter_locations); 
             
    LOCATIONS = SELECT * FROM :filter_locations;
    
    SELECT IFNULL(MAX(EXCUTE_ID),0) INTO EXECUTION_ID 
    FROM :SIMULATION_PLAN;
    
    CALL "sap.tm.trp.db.pipeline::p_get_default_node_by_executionid" (:EXECUTION_ID, NODE_ID);

    TIME_RANGE = SELECT DISTINCT START_TIME, END_TIME 
         FROM "sap.tm.trp.db.pipeline::t_pipeline_output_dataset"
         WHERE PLAN_EXECUTION_ID = :EXECUTION_ID AND NODE_ID = :NODE_ID
         ORDER BY START_TIME ASC;    
     
END;
