<?xml version="1.0" encoding="UTF-8"?>
<Calculation:scenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Calculation="http://www.sap.com/ndb/BiModelCalculation.ecore" schemaVersion="2.3" id="cv_get_voyages_by_location" applyPrivilegeType="ANALYTIC_PRIVILEGE" checkAnalyticPrivileges="true" defaultClient="$$client$$" defaultLanguage="$$language$$" hierarchiesSQLEnabled="false" translationRelevant="true" visibility="reportingEnabled" calculationScenarioType="SCRIPT_BASED" dataCategory="CUBE" enforceSqlExecution="false" executionSemantic="UNDEFINED" scriptParametersCaseSensitive="true">
  <descriptions defaultDescription="cv_get_voyages_by_location"/>
  <localVariables>
    <variable id="SIM_PLAN_ID" parameter="true">
      <descriptions defaultDescription="SIM_PLAN_ID"/>
      <variableProperties datatype="BIGINT" defaultValue="" mandatory="true">
        <valueDomain type="empty"/>
        <selection multiLine="false" type="SingleValue"/>
      </variableProperties>
    </variable>
    <variable id="SCENARIO_ID" parameter="true">
      <descriptions defaultDescription="SCENARIO_ID"/>
      <variableProperties datatype="BIGINT" mandatory="true">
        <valueDomain type="empty"/>
        <selection multiLine="false" type="SingleValue"/>
        <defaultRange/>
      </variableProperties>
    </variable>
    <variable id="LOCATION_ID" parameter="true">
      <descriptions defaultDescription="LOCATION_ID"/>
      <variableProperties datatype="NVARCHAR" length="22" mandatory="true">
        <valueDomain type="empty"/>
        <selection multiLine="false" type="SingleValue"/>
        <defaultRange/>
      </variableProperties>
    </variable>
    <variable id="TIME_RANGE" parameter="true">
      <descriptions defaultDescription="TIME_RANGE"/>
      <variableProperties datatype="INTEGER" mandatory="true">
        <valueDomain type="empty"/>
        <selection multiLine="false" type="SingleValue"/>
        <defaultRange/>
      </variableProperties>
    </variable>
  </localVariables>
  <variableMappings/>
  <informationModelLayout relativeWidthScenario="27"/>
  <dataSources/>
  <calculationViews>
    <calculationView xsi:type="Calculation:SqlScriptView" id="Script_View">
      <descriptions/>
      <viewAttributes>
        <viewAttribute datatype="NVARCHAR" id="TRIP_ID" length="50"/>
        <viewAttribute datatype="VARCHAR" id="VOYAGE" length="40"/>
        <viewAttribute datatype="VARCHAR" id="SCHEDULE" length="40"/>
        <viewAttribute datatype="VARCHAR" id="VEHICLE" length="50"/>
        <viewAttribute datatype="VARCHAR" id="VEHICLE_TYPE" length="10"/>
        <viewAttribute datatype="VARCHAR" id="SOURCE_LOCATION" length="50"/>
        <viewAttribute datatype="TIMESTAMP" id="PLAN_DEPARTURE_TIME"/>
        <viewAttribute datatype="VARCHAR" id="DESTINATION_LOCATION" length="50"/>
        <viewAttribute datatype="TIMESTAMP" id="PLAN_ARRIVAL_TIME"/>
      </viewAttributes>
      <calculatedViewAttributes/>
      <localVariable>#SIM_PLAN_ID</localVariable>
      <localVariable>#SCENARIO_ID</localVariable>
      <localVariable>#LOCATION_ID</localVariable>
      <localVariable>#TIME_RANGE</localVariable>
      <definition>/********* Begin Procedure Script ************/ 
 BEGIN 
   DECLARE DATE_OFFSET INTEGER;	            
   DECLARE CUR_TIME TIMESTAMP;
   DECLARE END_TIMESTAMP TIMESTAMP;
   DECLARE DATESET_ID BIGINT;
   DECLARE LOCATION_NAME NVARCHAR(50);
   DECLARE SEA_MOT VARCHAR(10) := '03';   
   
   SELECT IFNULL(MAX(NAME),'') INTO LOCATION_NAME 
   FROM &quot;sap.tm.trp.db.semantic.location::v_all_location&quot; WHERE ID = :LOCATION_ID;
   
   SELECT ADD_DAYS(CURRENT_UTCTIMESTAMP,IFNULL(MAX(DATE_OFFSET),0)) INTO CUR_TIME
   FROM &quot;sap.tm.trp.db.stock::t_start_time_for_user&quot;
   WHERE USER = (SELECT USERNAME FROM &quot;sap.tm.trp.db.systemmanagement.user::cv_get_username&quot;);
   
   -- within 3 days
   IF :TIME_RANGE = 1 THEN
      END_TIMESTAMP = ADD_DAYS(:CUR_TIME,3);
   -- within 1 week 
   ELSEIF :TIME_RANGE = 2 THEN 
      END_TIMESTAMP = ADD_DAYS(:CUR_TIME,7);
   -- within 1 month
   ELSEIF :TIME_RANGE = 3 THEN 
      END_TIMESTAMP = ADD_MONTHS(:CUR_TIME,1);
   END IF;
 
   original_trips = 
     SELECT t4.DB_KEY AS TRIP_ID, t4.VOYAGE, t5.SCHEDULE,
            t4.VESSEL AS VEHICLE, 'VESSEL' AS VEHICLE_TYPE,
            t2.LOCATION_NAME AS SOURCE_LOCATION, t2.DEPARTURE_UTC AS PLAN_DEPARTURE_TIME,
            t3.LOCATION_NAME AS DESTINATION_LOCATION, t3.ARRIVAL_UTC AS PLAN_ARRIVAL_TIME
     FROM 
     (SELECT ta.PARENT_KEY,MIN(tb.LOC_SEQ) AS FIRST_SEQ, MAX(tb.LOC_SEQ) AS END_SEQ
      FROM 
      (SELECT PARENT_KEY, LOCATION_ID,
       CASE WHEN ARRIVAL_UTC IS NULL THEN DEPARTURE_UTC ELSE ARRIVAL_UTC END AS ARRIVAL_UTC 
       FROM &quot;sap.tm.trp.db.semantic.schedule::v_departure_location&quot;
      ) ta
      INNER JOIN &quot;sap.tm.trp.db.semantic.schedule::v_departure_location&quot; tb ON(ta.PARENT_KEY = tb.PARENT_KEY)
      WHERE ta.LOCATION_ID = :LOCATION_ID 
      AND (ta.ARRIVAL_UTC BETWEEN :CUR_TIME AND :END_TIMESTAMP)
      GROUP BY ta.PARENT_KEY
     ) t1
     INNER JOIN &quot;sap.tm.trp.db.semantic.schedule::v_departure_location&quot; t2 
           ON (t1.PARENT_KEY = t2.PARENT_KEY AND t1.FIRST_SEQ = t2.LOC_SEQ)
     INNER JOIN &quot;sap.tm.trp.db.semantic.schedule::v_departure_location&quot; t3 
           ON (t1.PARENT_KEY = t3.PARENT_KEY AND t1.END_SEQ = t3.LOC_SEQ)
     INNER JOIN &quot;sap.tm.trp.db.semantic.schedule::v_departure&quot; t4 ON (t1.PARENT_KEY = t4.DB_KEY)
     INNER JOIN &quot;sap.tm.trp.db.semantic.schedule::v_schedule&quot; t5 ON (t4.PARENT_KEY = t5.DB_KEY AND T5.MOT = :SEA_MOT);
   
   -- Get dataset id
   CALL &quot;sap.tm.trp.db.planningcockpit::p_get_dataset_id_by_simulation_scenario_id&quot;(:SIM_PLAN_ID,:SCENARIO_ID,DATESET_ID);
   
   -- Get all the basic path ids(merged view)
   CALL &quot;SAP_TM_ROUTING&quot;.&quot;sap.tm.trp.routing.db.dataset::p_query_basic_path&quot;(:DATESET_ID,'M','','','',paths,path_connections);
   
   -- manual created trips
   manual_trips = SELECT TO_NVARCHAR(t2.ID) AS TRIP_ID, TO_NVARCHAR(t2.ID) AS VOYAGE, TO_NVARCHAR(t2.PATH_ID) AS SCHEDULE,
                  NULL AS VEHICLE, NULL AS VEHICLE_TYPE, t2.FROM_LOCATION AS SOURCE_LOCATION, t2.DEPARTURE_TIME AS PLAN_DEPARTURE_TIME,
                  t2.TO_LOCATION AS DESTINATION_LOCATION, t2.ARRIVAL_TIME AS PLAN_ARRIVAL_TIME
                  FROM :paths t1 
                  INNER JOIN &quot;sap.tm.trp.routing.db.dataset::t_trip&quot; t2 ON (t2.PATH_ID = t1.ID and t1.SOURCE = 'M')                  
                  INNER JOIN 
                  ( SELECT TRIP_ID, LOCATION, IFNULL(ARRIVAL_TIME, DEPARTURE_TIME) AS ARRIVAL_TIME
                    FROM &quot;sap.tm.trp.routing.db.dataset::t_trip_sequence&quot;
                    WHERE LOCATION = :LOCATION_NAME
                  ) t3 ON (t2.ID = t3.TRIP_ID)
                  WHERE (t3.ARRIVAL_TIME BETWEEN :CUR_TIME AND :END_TIMESTAMP);
                          
   -- union the two parts                       
   var_out = SELECT TO_NVARCHAR(TRIP_ID) AS TRIP_ID, VOYAGE, SCHEDULE, VEHICLE, VEHICLE_TYPE,
             SOURCE_LOCATION, PLAN_DEPARTURE_TIME, DESTINATION_LOCATION, PLAN_ARRIVAL_TIME
             FROM :original_trips
             
             UNION ALL
             
             SELECT TRIP_ID, VOYAGE, SCHEDULE, VEHICLE, VEHICLE_TYPE,
             SOURCE_LOCATION, PLAN_DEPARTURE_TIME, DESTINATION_LOCATION, PLAN_ARRIVAL_TIME
             FROM :manual_trips;
            
            
END /********* End Procedure Script ************/</definition>
    </calculationView>
  </calculationViews>
  <logicalModel id="Script_View">
    <descriptions/>
    <attributes>
      <attribute id="TRIP_ID" order="1">
        <descriptions defaultDescription="TRIP_ID"/>
        <keyMapping columnObjectName="Script_View" columnName="TRIP_ID"/>
      </attribute>
      <attribute id="VOYAGE" order="2">
        <descriptions defaultDescription="VOYAGE"/>
        <keyMapping columnObjectName="Script_View" columnName="VOYAGE"/>
      </attribute>
      <attribute id="SCHEDULE" order="3">
        <descriptions defaultDescription="SCHEDULE"/>
        <keyMapping columnObjectName="Script_View" columnName="SCHEDULE"/>
      </attribute>
      <attribute id="VEHICLE" order="4">
        <descriptions defaultDescription="VEHICLE"/>
        <keyMapping columnObjectName="Script_View" columnName="VEHICLE"/>
      </attribute>
      <attribute id="VEHICLE_TYPE" order="5">
        <descriptions defaultDescription="VEHICLE_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="VEHICLE_TYPE"/>
      </attribute>
      <attribute id="SOURCE_LOCATION" order="6">
        <descriptions defaultDescription="SOURCE_LOCATION"/>
        <keyMapping columnObjectName="Script_View" columnName="SOURCE_LOCATION"/>
      </attribute>
      <attribute id="DESTINATION_LOCATION" order="8">
        <descriptions defaultDescription="DESTINATION_LOCATION"/>
        <keyMapping columnObjectName="Script_View" columnName="DESTINATION_LOCATION"/>
      </attribute>
    </attributes>
    <calculatedAttributes/>
    <privateDataFoundation>
      <tableProxies/>
      <joins/>
      <layout>
        <shapes/>
      </layout>
    </privateDataFoundation>
    <baseMeasures>
      <measure id="PLAN_DEPARTURE_TIME" order="7" aggregationType="min" measureType="simple">
        <descriptions defaultDescription="PLAN_DEPARTURE_TIME"/>
        <measureMapping columnObjectName="Script_View" columnName="PLAN_DEPARTURE_TIME"/>
      </measure>
      <measure id="PLAN_ARRIVAL_TIME" order="9" aggregationType="min" measureType="simple">
        <descriptions defaultDescription="PLAN_ARRIVAL_TIME"/>
        <measureMapping columnObjectName="Script_View" columnName="PLAN_ARRIVAL_TIME"/>
      </measure>
    </baseMeasures>
    <calculatedMeasures/>
    <restrictedMeasures/>
    <localDimensions/>
  </logicalModel>
  <layout>
    <shapes>
      <shape modelObjectName="Output" modelObjectNameSpace="MeasureGroup">
        <upperLeftCorner x="40" y="85"/>
      </shape>
    </shapes>
  </layout>
</Calculation:scenario>