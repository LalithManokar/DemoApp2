PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.stock::p_stock_alert_map_of_the_resource" (
    IN EQUIPMENT_FILTER_ID BIGINT,
    IN LOCATION_FILTER_ID BIGINT,
    IN XMIN DOUBLE,
    IN XMAX DOUBLE,
    IN YMIN DOUBLE,
    IN YMAX DOUBLE,
    IN HIERARCHY_LEVEL INT,
    IN IN_RESOURCE_TYPE_ID NVARCHAR(20),
    OUT out_stock_alert_map "sap.tm.trp.db.stock::tt_stock_alert_map_info",
    OUT TOO_MUCH_LOCATION_FLAG SMALLINT,
    OUT GIS_TYPE VARCHAR(10),
    OUT OUT_LOCATIONS_XPOS_YPOS_INVALID  "sap.tm.trp.db.pipeline::tt_location_info_list" 
    ) 
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER
    DEFAULT SCHEMA "SAP_TM_TRP"
    
AS
EQUIP_FLAG INT;
IN_POLYGON CLOB;
SQL_STR CLOB;
BEGIN

    DECLARE I_COUNT INTEGER := 0;
    DECLARE LV_RESOURCE_CATEGORY NVARCHAR(20);

	CALL "sap.tm.trp.db.stock::p_get_the_current_stock_and_min_max_safety" (
    :EQUIPMENT_FILTER_ID,
    :LOCATION_FILTER_ID,
    :XMIN,
    :XMAX,
    :YMIN,
    :YMAX,
    :HIERARCHY_LEVEL,
    :IN_RESOURCE_TYPE_ID,
    TOO_MUCH_LOCATION_FLAG,
    GIS_TYPE,
    TOTAL_GEO,
    OUT_GEO_POLYGON_INFO_SQL,
    SQL_LOCATION_EQUIPMENT_STORAGE_INFO,
    SQL_CALL_ALERT,
    OUT_LOCATIONS_XPOS_YPOS_INVALID,
    LV_RESOURCE_CATEGORY
    );
    
    
                     
    SELECT COUNT(1) INTO I_COUNT FROM :SQL_CALL_ALERT; 
                 
                 
    IF :I_COUNT >0 THEN 
   
       	CALL "sap.tm.trp.db.hrf.resourceStock::p_get_stock_alert_for_map"(:SQL_CALL_ALERT, :LV_RESOURCE_CATEGORY, OUT_ALERT_SQL);

		out_stock_alert_map =
			SELECT T1.GEO_ID AS LOCATION_ID,T1.GEO_NAME AS LOCATION_NAME,T3.XPOS AS LATITUDE,T3.YPOS AS LONGITUDE,T3.BOUNDARY,
		        IFNULL(T2.ALERT_NUM,0) AS ALERT_NUM,T2.ALERT_SCORE
		    FROM :TOTAL_GEO T1
		    INNER JOIN :OUT_GEO_POLYGON_INFO_SQL T3 ON (T1.GEO_ID = T3.LOCATION_ID)
		    LEFT OUTER JOIN :OUT_ALERT_SQL T2 ON (T1.GEO_ID = T2.LOCATION_ID); 
		                          
	
	ELSE	   
		
		out_stock_alert_map =
			SELECT T1.GEO_ID AS LOCATION_ID,T1.GEO_NAME AS LOCATION_NAME,T3.XPOS AS LATITUDE,T3.YPOS AS LONGITUDE,T3.BOUNDARY,0 AS ALERT_NUM,NULL AS ALERT_SCORE
		    FROM :SQL_LOCATION_EQUIPMENT_STORAGE_INFO T1
		    INNER JOIN :OUT_GEO_POLYGON_INFO_SQL T3 ON (T1.GEO_ID = T3.LOCATION_ID);
			
	END IF;

END;




