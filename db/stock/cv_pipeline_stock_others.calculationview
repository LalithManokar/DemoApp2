<?xml version="1.0" encoding="UTF-8"?>
<Calculation:scenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Calculation="http://www.sap.com/ndb/BiModelCalculation.ecore" schemaVersion="2.3" id="cv_pipeline_stock_others" applyPrivilegeType="ANALYTIC_PRIVILEGE" checkAnalyticPrivileges="true" defaultClient="crossClient" defaultLanguage="$$language$$" hierarchiesSQLEnabled="false" translationRelevant="true" visibility="internal" calculationScenarioType="SCRIPT_BASED" dataCategory="DEFAULT" enforceSqlExecution="false" executionSemantic="UNDEFINED" scriptParametersCaseSensitive="true">
  <descriptions defaultDescription="cv_pipeline_stock"/>
  <localVariables/>
  <variableMappings/>
  <informationModelLayout relativeWidthScenario="27"/>
  <dataSources/>
  <calculationViews>
    <calculationView xsi:type="Calculation:SqlScriptView" id="Script_View">
      <descriptions/>
      <viewAttributes>
        <viewAttribute datatype="NVARCHAR" id="NODE_ID" length="32"/>
        <viewAttribute datatype="NVARCHAR" id="GEO_ID" length="22"/>
        <viewAttribute datatype="NVARCHAR" id="GEO_NAME" length="100"/>
        <viewAttribute datatype="INTEGER" id="GEO_FILTER_TYPE"/>
        <viewAttribute datatype="NVARCHAR" id="EQUIP_TYPE" length="22"/>
        <viewAttribute datatype="NVARCHAR" id="EQUIP_NAME" length="100"/>
        <viewAttribute datatype="INTEGER" id="EQUIP_FILTER_TYPE"/>
        <viewAttribute datatype="BIGINT" id="TIME_INTERVAL_ID"/>
        <viewAttribute datatype="BIGINT" id="SEQUENCE"/>
        <viewAttribute datatype="TIMESTAMP" id="START_TIME"/>
        <viewAttribute datatype="TIMESTAMP" id="END_TIME"/>
        <viewAttribute datatype="BIGINT" id="INTER_SECONDS"/>
        <viewAttribute datatype="NVARCHAR" id="OUTPUT_KEY" length="20"/>
        <viewAttribute datatype="INTEGER" id="OUTPUT_VALUE"/>
        <viewAttribute datatype="NVARCHAR" id="UNIT" length="10"/>
      </viewAttributes>
      <calculatedViewAttributes/>
      <definition>
 
 BEGIN 
    DECLARE Filter_Calflag BIGINT; 
    DECLARE Unit VARCHAR(50);
    DECLARE First_Time_Interval INTEGER;
    DECLARE First_Sequence INTEGER;
    DECLARE First_Start_Time TIMESTAMP;
    DECLARE First_End_Time TIMESTAMP;
    DECLARE First_Inter_Seconds INTEGER;
    DECLARE ExtQueryAttrGrpId BIGINT;
    DECLARE Resource_Category VARCHAR(20);    
    DECLARE FILTER_CALCULATED_OK INTEGER := 1;
    DECLARE RESOURCE_COUNT INTEGER := 0;
    --DECLARE EXIT HANDLER FOR SQLEXCEPTION
    --SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM DUMMY;

     -- Get all the needed information:filter info, date offset, unit 
     CALL &quot;sap.tm.trp.db.pipeline::p_prepare_info_for_providers_generic&quot;(shift_filtered_dates,filtered_locations,
          filtered_equiptypes, Filter_Calflag, Unit, ExtQueryAttrGrpId,Resource_Category);
     
     -- If the filered information are not calculated correctly, then return 
     -- If the filered information are not calculated correctly, then return 
     IF :Filter_Calflag &lt;> :FILTER_CALCULATED_OK THEN 
        RETURN;
     END IF; 

     -- get the first time interval infor
     SELECT TOP 1 START_TIMESTAMP, END_TIMESTAMP, TIME_INTERVAL_ID, SEQUENCE, INTER_SECONDS
     INTO First_Start_Time, First_End_Time, First_Time_Interval, First_Sequence, First_Inter_Seconds
     FROM :shift_filtered_dates ORDER BY SEQUENCE ASC;  
     

    -- Inlining selecting the resource with extra attribute group
    IF :ExtQueryAttrGrpId > 0 THEN
      ATTR_NODE_ID_LIST = SELECT NODE_ID 
                          FROM &quot;sap.tm.trp.db.filter::t_attribute_group_item&quot; 
                          WHERE GROUP_ID = :ExtQueryAttrGrpId AND LOGIC_OPERATOR IS NULL ORDER BY SEQUENCE;
      CALL &quot;sap.tm.trp.db.stock::p_get_resource_by_attribute_group&quot;(:ExtQueryAttrGrpId, :ATTR_NODE_ID_LIST, ATTR_GROUP_FILTER_RESULT);
      SELECT COUNT(*) INTO RESOURCE_COUNT FROM :ATTR_GROUP_FILTER_RESULT;
    END IF;

    IF RESOURCE_COUNT > 0 THEN
      resource_out = SELECT T1.RESOURCE_ID, D.GEO_GROUP_ID,E.EQUIP_GROUP_ID 
                     FROM &quot;sap.tm.trp.db.semantic.resource::v_stock_resource_last_status&quot; T1
                     INNER JOIN  &quot;sap.tm.trp.db.semantic.resource::v_resource_category&quot; t6 
                     ON (t1.RESOURCE_CATEGORY = t6.MAPPING_CODE AND t6.CODE = :Resource_Category)                       
                     INNER JOIN :filtered_equiptypes AS E ON (E.EQUIP_CODE = T1.RESOURCE_TYPE)
                     INNER JOIN :filtered_locations AS D ON (D.LOCATION_ID = T1.LOCATION_ID)
                     INNER JOIN :ATTR_GROUP_FILTER_RESULT AS EXT_TBL ON (EXT_TBL.RESID = T1.RESOURCE_ID)
                     WHERE T1.STOCK_STATUS_CODE = 'OTR'; 
    ELSE
      resource_out = SELECT T1.RESOURCE_ID, D.GEO_GROUP_ID,E.EQUIP_GROUP_ID 
                     FROM &quot;sap.tm.trp.db.semantic.resource::v_stock_resource_last_status&quot; T1
                     INNER JOIN  &quot;sap.tm.trp.db.semantic.resource::v_resource_category&quot; t6 
                     ON (t1.RESOURCE_CATEGORY = t6.MAPPING_CODE AND t6.CODE = :Resource_Category)  
                     INNER JOIN :filtered_equiptypes AS E ON (E.EQUIP_CODE = T1.RESOURCE_TYPE)                                          
                     INNER JOIN :filtered_locations AS D ON (D.LOCATION_ID = T1.LOCATION_ID)
                     WHERE T1.STOCK_STATUS_CODE = 'OTR';
    END IF;
    
/*
Calculate stock group by location, equipment type and status
*/
    stock_out = SELECT GEO_GROUP_ID,
                       EQUIP_GROUP_ID,
                       COUNT(1) AS OUTPUT_VALUE
                FROM :resource_out
                GROUP BY GEO_GROUP_ID,EQUIP_GROUP_ID;

/*
Loaction and equipment group
*/
    car_out =  SELECT DISTINCT A.GEO_GROUP_ID, A.GEO_NAME, A.GEO_FILTER_TYPE, B.EQUIP_GROUP_ID, B.EQUIP_NAME, B.EQUIP_FILTER_TYPE
               FROM :filtered_locations A, :filtered_equiptypes B;

/*
Output stock by location and equipment
*/
    var_out = SELECT 'STOCK_OTHERS' AS NODE_ID,
                     A.GEO_GROUP_ID AS GEO_ID, 
                     A.GEO_NAME,
                     A.GEO_FILTER_TYPE,
                     A.EQUIP_GROUP_ID AS EQUIP_TYPE,
                     A.EQUIP_NAME,
                     A.EQUIP_FILTER_TYPE,
                     :FIRST_TIME_INTERVAL AS TIME_INTERVAL_ID,
                     :FIRST_SEQUENCE AS SEQUENCE,
                     :FIRST_START_TIME AS START_TIME,
                     :FIRST_END_TIME AS END_TIME,
                     :FIRST_INTER_SECONDS AS INTER_SECONDS,
                     'STOCK' AS OUTPUT_KEY,
                     IFNULL(B.OUTPUT_VALUE,0) AS OUTPUT_VALUE,
                     :UNIT AS UNIT
              FROM :car_out A 
              LEFT OUTER JOIN :stock_out B ON 
              (A.GEO_GROUP_ID = B.GEO_GROUP_ID and A.EQUIP_GROUP_ID = B.EQUIP_GROUP_ID);

 END </definition>
    </calculationView>
  </calculationViews>
  <logicalModel id="Script_View">
    <descriptions/>
    <attributes>
      <attribute id="NODE_ID" order="1">
        <descriptions defaultDescription="DATA_DESC"/>
        <keyMapping columnObjectName="Script_View" columnName="NODE_ID"/>
      </attribute>
      <attribute id="GEO_ID" order="2">
        <descriptions defaultDescription="GEO_ID"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_ID"/>
      </attribute>
      <attribute id="GEO_NAME" hidden="false" order="3">
        <descriptions defaultDescription="GEO_NAME"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_NAME"/>
      </attribute>
      <attribute id="GEO_FILTER_TYPE" hidden="false" order="4">
        <descriptions defaultDescription="GEO_FILTER_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_FILTER_TYPE"/>
      </attribute>
      <attribute id="EQUIP_TYPE" hidden="false" order="5">
        <descriptions defaultDescription="EQUIP_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_TYPE"/>
      </attribute>
      <attribute id="EQUIP_NAME" hidden="false" order="6">
        <descriptions defaultDescription="EQUIP_NAME"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_NAME"/>
      </attribute>
      <attribute id="EQUIP_FILTER_TYPE" hidden="false" order="7">
        <descriptions defaultDescription="EQUIP_FILTER_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_FILTER_TYPE"/>
      </attribute>
      <attribute id="TIME_INTERVAL_ID" order="8">
        <descriptions defaultDescription="TIME_INTERVAL_ID"/>
        <keyMapping columnObjectName="Script_View" columnName="TIME_INTERVAL_ID"/>
      </attribute>
      <attribute id="SEQUENCE" hidden="false" order="9">
        <descriptions defaultDescription="SEQUENCE"/>
        <keyMapping columnObjectName="Script_View" columnName="SEQUENCE"/>
      </attribute>
      <attribute id="START_TIME" hidden="false" order="10">
        <descriptions defaultDescription="START_TIME"/>
        <keyMapping columnObjectName="Script_View" columnName="START_TIME"/>
      </attribute>
      <attribute id="END_TIME" hidden="false" order="11">
        <descriptions defaultDescription="END_TIME"/>
        <keyMapping columnObjectName="Script_View" columnName="END_TIME"/>
      </attribute>
      <attribute id="INTER_SECONDS" hidden="false" order="12">
        <descriptions defaultDescription="INTER_SECONDS"/>
        <keyMapping columnObjectName="Script_View" columnName="INTER_SECONDS"/>
      </attribute>
      <attribute id="OUTPUT_KEY" order="13">
        <descriptions defaultDescription="OUTPUT_KEY"/>
        <keyMapping columnObjectName="Script_View" columnName="OUTPUT_KEY"/>
      </attribute>
      <attribute id="OUTPUT_VALUE" order="14">
        <descriptions defaultDescription="OUTPUT_VALUE"/>
        <keyMapping columnObjectName="Script_View" columnName="OUTPUT_VALUE"/>
      </attribute>
      <attribute id="UNIT" order="15">
        <descriptions defaultDescription="UNIT"/>
        <keyMapping columnObjectName="Script_View" columnName="UNIT"/>
      </attribute>
    </attributes>
    <calculatedAttributes/>
    <privateDataFoundation>
      <tableProxies/>
      <joins/>
      <layout>
        <shapes/>
      </layout>
    </privateDataFoundation>
    <baseMeasures/>
    <calculatedMeasures/>
    <restrictedMeasures/>
    <localDimensions/>
  </logicalModel>
  <layout>
    <shapes>
      <shape modelObjectName="Output" modelObjectNameSpace="MeasureGroup">
        <upperLeftCorner x="40" y="85"/>
      </shape>
    </shapes>
  </layout>
</Calculation:scenario>