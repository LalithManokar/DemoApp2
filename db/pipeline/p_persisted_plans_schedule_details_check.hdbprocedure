PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.pipeline::p_persisted_plans_schedule_details_check" (
IN IN_PLAN_MODEL_ID "sap.tm.trp.db.pipeline::tt_plan_id_list",
OUT  schedule_inconsistent_error_flag SMALLINT
 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "SAP_TM_TRP"
	READS SQL DATA AS
BEGIN
/*********************************************************** 
	check whether persisted plans have same schedule details
 **********************************************************/
 DECLARE I_COUNT INTEGER :=0 ;
 DECLARE V_CNT_RECURRENCE_TYPE INTEGER :=0;
 DECLARE V_CNT_RECURRENCE_INTERVAL INTEGER :=0;
 DECLARE V_CNT_RECURRENCE_DAY INTEGER :=0;
 DECLARE V_CNT_START_TIME INTEGER :=0;
 DECLARE V_CNT_EXPIRY_TIME INTEGER :=0;
 --DECLARE V_CNT_EXECUTE_WORKING_HOUR INTEGER :=0;
 --DECLARE V_CNT_START_WORKING_HOUR_TIME INTEGER :=0;
 --DECLARE V_CNT_END_WORKING_HOUR_TIME INTEGER :=0;
 DECLARE V_CNT_USAGE INTEGER :=0;
 DECLARE V_CNT_USAGE_CODE INTEGER :=0;
 DECLARE V_FLAG SMALLINT :=0;
 
 --default, no error
 schedule_inconsistent_error_flag :=0;

 WITH_INCONSISTENT_DETAILS = 
  SELECT COUNT(DISTINCT RECURRENCE_TYPE) AS CNT_RECURRENCE_TYPE,
         COUNT(DISTINCT RECURRENCE_INTERVAL) AS CNT_RECURRENCE_INTERVAL,
         COUNT(DISTINCT RECURRENCE_DAY) AS CNT_RECURRENCE_DAY,
         COUNT(DISTINCT START_TIME) AS CNT_START_TIME,
         COUNT(DISTINCT EXPIRY_TIME) AS CNT_EXPIRY_TIME,
        --COUNT(DISTINCT EXECUTE_WORKING_HOUR) AS CNT_EXECUTE_WORKING_HOUR,
        --COUNT(DISTINCT START_WORKING_HOUR_TIME) AS CNT_START_WORKING_HOUR_TIME,
        --COUNT(DISTINCT END_WORKING_HOUR_TIME) AS CNT_END_WORKING_HOUR_TIME,
         COUNT(DISTINCT USAGE) AS CNT_USAGE,
         COUNT(DISTINCT USAGE_CODE) AS CNT_USAGE_CODE
  FROM (
        SELECT T1.ID, 
        T2.RECURRENCE_TYPE, 
        T2.RECURRENCE_INTERVAL,
        T2.RECURRENCE_DAY,
        TO_VARCHAR(T2.START_TIME,'YYYY-MM-DD') AS START_TIME,
        TO_VARCHAR(T2.EXPIRY_TIME,'YYYY-MM-DD') AS EXPIRY_TIME,
        --T2.EXECUTE_WORKING_HOUR,
        --IFNULL(TO_VARCHAR (T2.START_WORKING_HOUR_TIME,'HH24:MI'),'00:00')  AS START_WORKING_HOUR_TIME, 
        --IFNULL(TO_VARCHAR (T2.END_WORKING_HOUR_TIME,'HH24:MI'),'00:00') AS END_WORKING_HOUR_TIME,
        T3.USAGE,
        T3.USAGE_CODE
  FROM :IN_PLAN_MODEL_ID T1
  LEFT OUTER JOIN  "sap.tm.trp.db.pipeline::v_schedule_details" T2 ON T2.ID = T1.ID
  LEFT OUTER JOIN  "sap.tm.trp.db.pipeline::t_plan_model" T3 ON T1.ID = T3.ID 
  ) AS A 
  HAVING ( COUNT(DISTINCT RECURRENCE_TYPE) >= 2 
	         OR COUNT(DISTINCT RECURRENCE_INTERVAL) >=2
	         OR COUNT(DISTINCT RECURRENCE_DAY) >=2
	         OR COUNT(DISTINCT START_TIME) >=2
	         OR COUNT(DISTINCT EXPIRY_TIME) >=2 
	         --OR COUNT(DISTINCT EXECUTE_WORKING_HOUR) >=2
	         --OR COUNT(DISTINCT START_WORKING_HOUR_TIME) >=2
	         --OR COUNT(DISTINCT END_WORKING_HOUR_TIME) >= 2
	         OR COUNT(DISTINCT USAGE) >= 2
	         OR COUNT(DISTINCT USAGE_CODE) >= 2
         );

 
  SELECT COUNT(1) INTO I_COUNT FROM :WITH_INCONSISTENT_DETAILS;
  IF I_COUNT > 0 THEN
    SELECT CNT_RECURRENCE_TYPE,CNT_RECURRENCE_INTERVAL,
         CNT_RECURRENCE_DAY, CNT_START_TIME,
         CNT_EXPIRY_TIME, --CNT_EXECUTE_WORKING_HOUR,
         --CNT_START_WORKING_HOUR_TIME, CNT_END_WORKING_HOUR_TIME,
         CNT_USAGE, CNT_USAGE_CODE
         INTO V_CNT_RECURRENCE_TYPE,V_CNT_RECURRENCE_INTERVAL,
         V_CNT_RECURRENCE_DAY, V_CNT_START_TIME,
         V_CNT_EXPIRY_TIME, --V_CNT_EXECUTE_WORKING_HOUR,
        -- V_CNT_START_WORKING_HOUR_TIME, V_CNT_END_WORKING_HOUR_TIME,
         V_CNT_USAGE, V_CNT_USAGE_CODE         
    FROM :WITH_INCONSISTENT_DETAILS ;  
    
 SELECT FLAG INTO V_FLAG FROM(
  SELECT  
	  CASE WHEN V_CNT_RECURRENCE_TYPE >= 2 THEN  1
	       WHEN V_CNT_RECURRENCE_INTERVAL >= 2 THEN  2
	       WHEN V_CNT_RECURRENCE_DAY >= 2 THEN 3
	       WHEN V_CNT_START_TIME >= 2 THEN 4
	       WHEN V_CNT_EXPIRY_TIME >=2 THEN 5
	      -- WHEN V_CNT_EXECUTE_WORKING_HOUR >=2 THEN 6
	      -- WHEN V_CNT_START_WORKING_HOUR_TIME >=2 THEN 7
	      -- WHEN V_CNT_END_WORKING_HOUR_TIME >=2 THEN 8
	       WHEN V_CNT_USAGE >=2 THEN 9
	       WHEN V_CNT_USAGE_CODE >=2 THEN 10       
	  END AS FLAG 
  FROM DUMMY );
  
  schedule_inconsistent_error_flag := :V_FLAG;
 END IF;
END;
