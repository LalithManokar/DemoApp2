PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.pipeline::p_prepare_for_schedule_plan" (
IN PLAN_ID BIGINT,
OUT CONNECTIONID VARCHAR(22),
OUT SCHEMA_NAME VARCHAR(32),
OUT OBJECT_NAME VARCHAR(500),
OUT CATEGORY_ID INTEGER,
OUT LOCATION_FILTER_TYPE INTEGER,
OUT FILTER_GROUP_ID BIGINT,
OUT PIPELINE_MODEL_ID BIGINT,
OUT PLAN_MODEL_TYPE_ID INTEGER,
OUT ALERT_RULE_GROUP_ID BIGINT,
OUT USAGE VARCHAR(1)
)
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER
    DEFAULT SCHEMA SAP_TM_TRP
    --READS SQL DATA
AS
BEGIN

    DECLARE LOCATION_FILTER_ID BIGINT;
    DECLARE ATTRIBUTE_GROUP_ID BIGINT;
    DECLARE INSTANT_ENABLED CHAR(1);

    --GET FILTER_GROUP_ID, TYPE_ID, PIPELINE_MODEL_ID , LOCATION_FILTER_ID
    SELECT T1.FILTER_GROUP_ID, T1.PIPELINE_MODEL_ID, IFNULL(T1.ATTRIBUTE_GROUP_ID, -1), T2.LOCATION_FILTER_ID, T1.PLAN_MODEL_TYPE_ID, T1.ALERT_RULE_GROUP_ID, T1.USAGE, T3.INSTANT_ENABLED
    INTO FILTER_GROUP_ID, PIPELINE_MODEL_ID, ATTRIBUTE_GROUP_ID, LOCATION_FILTER_ID, PLAN_MODEL_TYPE_ID, ALERT_RULE_GROUP_ID, USAGE, INSTANT_ENABLED
    FROM "sap.tm.trp.db.pipeline::t_plan_model" AS T1
    LEFT OUTER JOIN "sap.tm.trp.db.filter::t_filter_location_filter" AS T2 ON T1.FILTER_GROUP_ID = T2.FILTER_GROUP_ID
    LEFT OUTER JOIN "sap.tm.trp.db.pipeline::t_pipeline_model" AS T3 ON T3.ID = T1.PIPELINE_MODEL_ID
    WHERE T1.ID = :PLAN_ID;	
	
	-- GET LOCATION_FILTER_TYPE
    SELECT LOCATION_TYPE INTO LOCATION_FILTER_TYPE
    FROM "sap.tm.trp.db.filter::t_location_filter"
    WHERE ID = :LOCATION_FILTER_ID;
	
	IF INSTANT_ENABLED = 'X' THEN
		--prepare the metadata
		CALL "sap.tm.trp.db.pipeline::p_prepare_for_plan_metadata"(:PIPELINE_MODEL_ID,:CONNECTIONID,:SCHEMA_NAME,:OBJECT_NAME,:CATEGORY_ID);
		--prepare the temporary table data
		CALL "sap.tm.trp.db.supplydemand.instant::p_prepare_for_instant_execution"(PLAN_ID,'');
	ELSE
	    --PREPARE FOR PLAN MODEL
	    CALL "sap.tm.trp.db.pipeline::p_prepare_for_plan_model_base"(:FILTER_GROUP_ID, :PIPELINE_MODEL_ID, :ATTRIBUTE_GROUP_ID, CONNECTIONID, SCHEMA_NAME, OBJECT_NAME, CATEGORY_ID);
    END IF ; 
END;

