PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.pipeline.operator.instant.lean::p_all_stock_sources" (
IN BASIC_DATASET "sap.tm.trp.db.supplydemand.instant::tt_sd_output",
OUT sum "sap.tm.trp.db.pipeline.operator::tt_pipeline_output_datasets") 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "SAP_TM_TRP"
	READS SQL DATA AS
BEGIN

-- This procedure includes all basic and its corresponding overdue operator/pipeline node having same GEO/EQUIP/INTERVAL information.
-- All operator/pipeline nodes has been clubed in single procedure in order to have a lean model for better performance. 
sum = 
	SELECT 'STOCK' AS NODE_ID,GEO_ID,GEO_NAME,GEO_FILTER_TYPE,EQUIP_TYPE,EQUIP_NAME,EQUIP_FILTER_TYPE,TIME_INTERVAL_ID,SEQUENCE,
	  START_TIME,END_TIME,INTER_SECONDS, 'STOCK' AS OUTPUT_KEY,SUM(OUTPUT_VALUE) AS OUTPUT_VALUE,UNIT FROM 
	  (
		SELECT NODE_ID,GEO_ID,GEO_NAME,GEO_FILTER_TYPE, EQUIP_TYPE,EQUIP_NAME,EQUIP_FILTER_TYPE,
           TIME_INTERVAL_ID,SEQUENCE,START_TIME,END_TIME,INTER_SECONDS,
           'STOCK' AS OUTPUT_KEY, IFNULL(OUTPUT_VALUE,0) AS OUTPUT_VALUE,UNIT
    	    FROM :BASIC_DATASET
			WHERE NODE_ID = 'STOCK_DAMAGED'
		UNION
		SELECT NODE_ID,GEO_ID,GEO_NAME,GEO_FILTER_TYPE, EQUIP_TYPE,EQUIP_NAME,EQUIP_FILTER_TYPE,
           TIME_INTERVAL_ID,SEQUENCE,START_TIME,END_TIME,INTER_SECONDS,
           'STOCK' AS OUTPUT_KEY, IFNULL(OUTPUT_VALUE,0) AS OUTPUT_VALUE,UNIT
            FROM :BASIC_DATASET
			WHERE NODE_ID = 'STOCK_EMPTY_AND_AVAILABLE'
		UNION
		SELECT NODE_ID,GEO_ID,GEO_NAME,GEO_FILTER_TYPE, EQUIP_TYPE,EQUIP_NAME,EQUIP_FILTER_TYPE,
           TIME_INTERVAL_ID,SEQUENCE,START_TIME,END_TIME,INTER_SECONDS,
           'STOCK' AS OUTPUT_KEY, IFNULL(OUTPUT_VALUE,0) AS OUTPUT_VALUE,UNIT
			FROM :BASIC_DATASET
			WHERE NODE_ID = 'STOCK_OTHERS'
		UNION
		SELECT NODE_ID,GEO_ID,GEO_NAME,GEO_FILTER_TYPE, EQUIP_TYPE,EQUIP_NAME,EQUIP_FILTER_TYPE,
           TIME_INTERVAL_ID,SEQUENCE,START_TIME,END_TIME,INTER_SECONDS,
           'STOCK' AS OUTPUT_KEY, IFNULL(OUTPUT_VALUE,0) AS OUTPUT_VALUE,UNIT
		    FROM :BASIC_DATASET
			WHERE NODE_ID = 'STOCK_OUT_OF_FLEET'
		UNION
		SELECT NODE_ID,GEO_ID,GEO_NAME,GEO_FILTER_TYPE, EQUIP_TYPE,EQUIP_NAME,EQUIP_FILTER_TYPE,
           TIME_INTERVAL_ID,SEQUENCE,START_TIME,END_TIME,INTER_SECONDS,
           'STOCK' AS OUTPUT_KEY, IFNULL(OUTPUT_VALUE,0) AS OUTPUT_VALUE,UNIT
   			FROM :BASIC_DATASET
			WHERE NODE_ID = 'STOCK_RESERVED'
		UNION
		SELECT NODE_ID,GEO_ID,GEO_NAME,GEO_FILTER_TYPE, EQUIP_TYPE,EQUIP_NAME,EQUIP_FILTER_TYPE,
           TIME_INTERVAL_ID,SEQUENCE,START_TIME,END_TIME,INTER_SECONDS,
           'STOCK' AS OUTPUT_KEY, IFNULL(OUTPUT_VALUE,0) AS OUTPUT_VALUE,UNIT
    		FROM :BASIC_DATASET
			WHERE NODE_ID = 'STOCK_SUBLEASED'
	  ) GROUP BY GEO_ID,GEO_NAME,GEO_FILTER_TYPE,EQUIP_TYPE,EQUIP_NAME,EQUIP_FILTER_TYPE,TIME_INTERVAL_ID,SEQUENCE,
	  START_TIME,END_TIME,INTER_SECONDS,UNIT;
				
END;
