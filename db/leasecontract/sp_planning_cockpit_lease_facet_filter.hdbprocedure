PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.leasecontract::sp_planning_cockpit_lease_facet_filter" (
	IN FUZZYSEARCH_TEXT VARCHAR(500),
	IN HIRE_TYPE INTEGER,
	IN LOCATION NVARCHAR(50), 
	IN DATE TIMESTAMP, 
	IN RESOURCE_TYPE NVARCHAR(50),
	IN DEMAND_QUANTITY INTEGER ,
	IN SCENARIO_ID BIGINT ,
    IN LESSOR_LIST_INPUT "sap.tm.trp.db.planningcockpit::tt_str_list",
    IN LEASE_CONTRACT_TYPE_LIST_INPUT "sap.tm.trp.db.planningcockpit::tt_str_list",
    OUT FILTERED_OUTPUT "sap.tm.trp.db.planningcockpit::tt_planningcockpit_lease_facet_filter_output") 
	
	LANGUAGE SQLSCRIPT 
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "SAP_TM_TRP"
	READS SQL DATA AS
	
    LESSOR_LIST_CNT INTEGER;
    LEASE_CONTRACT_TYPE_LIST_CNT INTEGER;
  
 BEGIN 

	DECLARE UNIT VARCHAR(3);
    DECLARE RESOURCE_CATEGORY VARCHAR(50);
	
    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    SELECT ::SQL_ERROR_CODE, ::SQL_ERROR_MESSAGE FROM DUMMY;

    SELECT IFNULL(t2.RESOURCE_CATEGORY,'') INTO RESOURCE_CATEGORY
    FROM "sap.tm.trp.db.planningcockpit::t_scenario" t1
    INNER JOIN "sap.tm.trp.db.planningcockpit::t_simulation_plan" t2 ON (t1.REL_SM_PLAN_ID = t2.ID)
    WHERE T1.ID = :SCENARIO_ID;  
    
	LEASE_DATA=SELECT * FROM "_SYS_BIC"."sap.tm.trp.db.leasecontract/cv_lease_contract_availability" 
	(PLACEHOLDER."$$LOCATION$$" => :LOCATION, 
	PLACEHOLDER."$$DATE$$" => :DATE,
	PLACEHOLDER."$$RESOURCE_TYPE$$" => :RESOURCE_TYPE,
	PLACEHOLDER."$$DEMAND_QUANTITY$$" => :DEMAND_QUANTITY,
	PLACEHOLDER."$$SCENARIO_ID$$" => :SCENARIO_ID,
	PLACEHOLDER."$$HIRE_TYPE$$" => :HIRE_TYPE,
	PLACEHOLDER."$$RESOURCE_CATEGORY$$" => :RESOURCE_CATEGORY)
	        WHERE
	        LOWER(LEASE_CONTRACT_REFERENCE) LIKE '%'||LOWER(:FUZZYSEARCH_TEXT)||'%' OR
	        LOWER(LESSOR) LIKE '%'||LOWER(:FUZZYSEARCH_TEXT)||'%' OR
	        LOWER(LEASE_CONTRACT_TYPE) LIKE '%'||LOWER(:FUZZYSEARCH_TEXT)||'%' 
	    ;			
    
	SELECT COUNT(*) INTO LESSOR_LIST_CNT FROM :LESSOR_LIST_INPUT;
	SELECT COUNT(*) INTO LEASE_CONTRACT_TYPE_LIST_CNT FROM :LEASE_CONTRACT_TYPE_LIST_INPUT;
    
    IF :LESSOR_LIST_CNT = 0
        THEN LESSOR_LIST_INPUT = SELECT DISTINCT LESSOR AS STR FROM :LEASE_DATA;
    END IF;
    IF :LEASE_CONTRACT_TYPE_LIST_CNT = 0
        THEN LEASE_CONTRACT_TYPE_LIST_INPUT = SELECT DISTINCT LEASE_CONTRACT_TYPE AS STR FROM :LEASE_DATA;
    END IF;


    FILTERED_OUTPUT = SELECT DISTINCT
        --MASTER_TBL.*
        MASTER_TBL.LESSOR,
        MASTER_TBL.LEASE_CONTRACT_TYPE
        FROM :LEASE_DATA AS MASTER_TBL
        INNER JOIN :LESSOR_LIST_INPUT AS LESSOR_TBL
            ON MASTER_TBL.LESSOR = LESSOR_TBL.STR              
        INNER JOIN :LEASE_CONTRACT_TYPE_LIST_INPUT AS LEASE_CONTRACT_TYPE_TBL
            ON MASTER_TBL.LEASE_CONTRACT_TYPE = LEASE_CONTRACT_TYPE_TBL.STR
                
    ;

END
 