<?xml version="1.0" encoding="UTF-8"?>
<Calculation:scenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Calculation="http://www.sap.com/ndb/BiModelCalculation.ecore" schemaVersion="2.3" id="cv_lease_contract_overview" applyPrivilegeType="ANALYTIC_PRIVILEGE" checkAnalyticPrivileges="true" defaultClient="crossClient" defaultLanguage="$$language$$" hierarchiesSQLEnabled="false" translationRelevant="true" visibility="internal" calculationScenarioType="SCRIPT_BASED" dataCategory="DEFAULT" enforceSqlExecution="false" executionSemantic="UNDEFINED" scriptParametersCaseSensitive="true">
  <descriptions defaultDescription="cv_lease_contract_"/>
  <defaultSchema schemaName="SAP_TM_TRP"/>
  <localVariables>
    <variable id="LEASE_CONTRACT_ID" parameter="true">
      <descriptions defaultDescription="LEASE_CONTRACT_ID"/>
      <variableProperties datatype="BIGINT" mandatory="true">
        <valueDomain type="empty"/>
        <selection multiLine="false" type="SingleValue"/>
      </variableProperties>
    </variable>
  </localVariables>
  <variableMappings/>
  <informationModelLayout relativeWidthScenario="27"/>
  <dataSources/>
  <calculationViews>
    <calculationView xsi:type="Calculation:SqlScriptView" id="Script_View">
      <descriptions/>
      <viewAttributes>
        <viewAttribute datatype="NVARCHAR" id="LEASE_CONTRACT_REFERENCE" length="100"/>
        <viewAttribute datatype="TIMESTAMP" id="START_TIME"/>
        <viewAttribute datatype="TIMESTAMP" id="END_TIME"/>
        <viewAttribute datatype="NVARCHAR" id="LESSOR" length="100"/>
        <viewAttribute datatype="NVARCHAR" id="CONTRACT_TYPE" length="100"/>
        <viewAttribute datatype="INTEGER" id="MAX_QUOTA"/>
        <viewAttribute datatype="VARCHAR" id="UNIT" length="3"/>
        <viewAttribute datatype="NVARCHAR" id="CURRENCY" length="3"/>
        <viewAttribute datatype="INTEGER" id="ON_HIRE_VOLUME_TRACKING"/>
        <viewAttribute datatype="INTEGER" id="OFF_HIRE_VOLUME"/>
        <viewAttribute datatype="INTEGER" id="ACTUAL_ON_HIRE_VOLUME"/>
        <viewAttribute datatype="DOUBLE" id="ACTUAL_ON_HIRE_RATE"/>
      </viewAttributes>
      <calculatedViewAttributes/>
      <localVariable>#LEASE_CONTRACT_ID</localVariable>
      <definition>BEGIN
	DECLARE CURRENCY NVARCHAR(3);
	DECLARE LEASE_CONTRACT_REFERENCE NVARCHAR(100);
	DECLARE V_COUNT INTEGER;
    DECLARE AUTH SMALLINT;
 	DECLARE CUSTOMCONDITION CONDITION FOR SQL_ERROR_CODE 10001;/* Custom Error Code = 10001*
	/*User Defined exception handler */
	
	DECLARE EXIT HANDLER FOR CUSTOMCONDITION RESIGNAL ;
	
	CALL &quot;sap.tm.trp.db.leasecontract::p_check_lease_authorization&quot;(:AUTH);	
	IF AUTH = 0 THEN
		/* Signaling Custom error and setting the Custom Error Message */
		SIGNAL CUSTOMCONDITION SET MESSAGE_TEXT = 'USER IS NOT AUTHORIZED TO ACCESS LEASE VIEW';
	END IF; 

  --Global Currency. 
  --TO DO: Need to discuss about logic with Jagan. 
  --Table is: &quot;sap.tm.trp.db.costmodel::t_currency&quot;
  --Conclusion: Do not look for Global Currency. Use the local currency only.
  DIMENSIONS_P= SELECT LC.ID AS LEASE_CONTRACT_ID,
	                   LC.START_TIME,
	                   LC.END_TIME,
	                   LS.NAME AS LESSOR,
	                   CT.TYPE AS CONTRACT_TYPE,
	                   LC.MAX_HIRE_QUANTITY AS MAX_QUOTA,
	                   LC.UNIT
				FROM &quot;sap.tm.trp.db.leasecontract::t_lease_contract&quot; LC
				INNER JOIN &quot;sap.tm.trp.db.leasecontract::t_lessor&quot; LS ON LS.ID=LC.LESSOR_ID
		        INNER JOIN &quot;sap.tm.trp.db.leasecontract::t_lease_contract_type&quot; CT ON LC.LEASE_TYPE=CT.ID
				WHERE LC.ID=:LEASE_CONTRACT_ID;

  DIMENSIONS = SELECT D.LEASE_CONTRACT_ID,
	                  D.START_TIME,
	                  D.END_TIME,
	                  D.LESSOR,
	                  D.CONTRACT_TYPE,
	                  D.MAX_QUOTA,
	                  IFNULL(D.UNIT,C.UNIT_CODE) AS UNIT
	           FROM :DIMENSIONS_P D, &quot;sap.tm.trp.db.systemmanagement::v_container_unit&quot; C;	   

  HIRE_QUANTITY = SELECT RESOURCE_NAME,LEASE_CONTRACT_REFERENCE,HIRE_TYPE,
                         RANK() OVER (PARTITION BY LEASE_CONTRACT_REFERENCE,RESOURCE_ID ORDER BY EVENT_TIME DESC) AS HIRE_SEQ
                         FROM &quot;sap.tm.trp.db.semantic.event::v_lease_resource_history&quot;;
					   
/*					   
  --Measures need a join to the contract table to track non leased contracts						   
  ON_HIRE_VOLUME_TRACKING = SELECT LC.ID AS LEASE_CONTRACT_ID,
 	                               SUM(CASE HQ.HIRE_TYPE WHEN 1 THEN 1 ELSE 0 END ) AS ACTUAL_ON_HIRE_VOLUME,
 	                               SUM(CASE HQT.HIRE_TYPE WHEN 1 THEN 1 ELSE 0 END ) AS ON_HIRE_VOLUME_TRACKING
                            FROM &quot;sap.tm.trp.db.leasecontract::t_lease_contract&quot; LC
                            LEFT JOIN :HIRE_QUANTITY HQ
                            ON (HQ.LEASE_CONTRACT_REFERENCE=LC.LEASE_CONTRACT_REFERENCE
                                AND HQ.HIRE_SEQ = 1)
                            LEFT JOIN :HIRE_QUANTITY HQT
                            ON (HQT.LEASE_CONTRACT_REFERENCE=LC.LEASE_CONTRACT_REFERENCE)
                            WHERE LC.ID=:LEASE_CONTRACT_ID 
                            GROUP BY LC.ID;
*/
   CURRENT_ON_HIRE = SELECT LC.ID AS LEASE_CONTRACT_ID,
 	                               COUNT(DISTINCT HQ.RESOURCE_NAME) AS ACTUAL_ON_HIRE_VOLUME
                            FROM &quot;sap.tm.trp.db.leasecontract::t_lease_contract&quot; LC
                            LEFT JOIN :HIRE_QUANTITY HQ
                            ON (HQ.LEASE_CONTRACT_REFERENCE=LC.LEASE_CONTRACT_REFERENCE
                                AND HQ.HIRE_SEQ = 1 AND HQ.HIRE_TYPE = 1)
                            WHERE LC.ID=:LEASE_CONTRACT_ID 
                            GROUP BY LC.ID;
   
   ON_HIRE_TRACKING = SELECT LC.ID AS LEASE_CONTRACT_ID,
 	                         SUM(CASE HQT.HIRE_TYPE WHEN 1 THEN 1 ELSE 0 END ) AS ON_HIRE_VOLUME_TRACKING
                            FROM &quot;sap.tm.trp.db.leasecontract::t_lease_contract&quot; LC
                            LEFT JOIN :HIRE_QUANTITY HQT
                            ON (HQT.LEASE_CONTRACT_REFERENCE=LC.LEASE_CONTRACT_REFERENCE AND HQT.HIRE_TYPE =1)
                            WHERE LC.ID=:LEASE_CONTRACT_ID 
                            GROUP BY LC.ID;
                            
   ON_HIRE_VOLUME_TRACKING = SELECT LC.ID AS LEASE_CONTRACT_ID,
 	                               CON.ACTUAL_ON_HIRE_VOLUME,
 	                               ONT.ON_HIRE_VOLUME_TRACKING
                            FROM &quot;sap.tm.trp.db.leasecontract::t_lease_contract&quot; LC
                            LEFT JOIN :CURRENT_ON_HIRE CON ON (LC.ID = CON.LEASE_CONTRACT_ID)
                            LEFT JOIN :ON_HIRE_TRACKING ONT ON (LC.ID = ONT.LEASE_CONTRACT_ID)
                            WHERE LC.ID=:LEASE_CONTRACT_ID; 
  			   
  OFF_HIRE_VOLUME = SELECT LC.ID AS LEASE_CONTRACT_ID,
 	                       SUM(CASE EH.HIRE_TYPE WHEN 2 THEN 1 ELSE 0 END ) AS OFF_HIRE_VOLUME
                    FROM &quot;sap.tm.trp.db.leasecontract::t_lease_contract&quot; LC
                    LEFT JOIN :HIRE_QUANTITY EH
                    ON (EH.LEASE_CONTRACT_REFERENCE=LC.LEASE_CONTRACT_REFERENCE
                        AND EH.HIRE_SEQ = 1)
                    WHERE LC.ID=:LEASE_CONTRACT_ID 
                    GROUP BY LC.ID;
 			   
  RESULT1 = SELECT T1.LEASE_CONTRACT_ID,
				   T1.START_TIME,
				   T1.END_TIME,
				   T1.LESSOR,
				   T1.CONTRACT_TYPE,
				   CASE WHEN T1.MAX_QUOTA IS NULL THEN 0 ELSE T1.MAX_QUOTA END AS MAX_QUOTA,
				   T1.UNIT,
				   CASE WHEN T2.ACTUAL_ON_HIRE_VOLUME IS NULL THEN 0 
				        ELSE T2.ACTUAL_ON_HIRE_VOLUME END AS ACTUAL_ON_HIRE_VOLUME,
				   CASE WHEN T2.ON_HIRE_VOLUME_TRACKING IS NULL THEN 0 
				        ELSE T2.ON_HIRE_VOLUME_TRACKING END AS ON_HIRE_VOLUME_TRACKING,
				   CASE WHEN T3.OFF_HIRE_VOLUME IS NULL THEN 0 ELSE T3.OFF_HIRE_VOLUME END AS OFF_HIRE_VOLUME
				   FROM :DIMENSIONS T1 
				   LEFT JOIN :ON_HIRE_VOLUME_TRACKING T2 ON (T1.LEASE_CONTRACT_ID =T2.LEASE_CONTRACT_ID)
				   LEFT JOIN :OFF_HIRE_VOLUME T3 ON (T1.LEASE_CONTRACT_ID =T3.LEASE_CONTRACT_ID);
		   
		   
  RESULT2 = SELECT LEASE_CONTRACT_ID,
				   START_TIME,
				   END_TIME,
				   LESSOR,
				   CONTRACT_TYPE,
				   MAX_QUOTA,
				   UNIT,
				   ON_HIRE_VOLUME_TRACKING,
				   OFF_HIRE_VOLUME,
				   ACTUAL_ON_HIRE_VOLUME,
				   (IFNULL(ACTUAL_ON_HIRE_VOLUME,0)/(case when max_quota = 0 or max_quota is null then 1 else max_quota END))*100 AS ACTUAL_ON_HIRE_RATE
            FROM :RESULT1;

  var_out = SELECT IFNULL(LC.LEASE_CONTRACT_REFERENCE,'') AS LEASE_CONTRACT_REFERENCE,
				   T1.START_TIME,
				   T1.END_TIME,
				   T1.LESSOR,
				   T1.CONTRACT_TYPE,
				   T1.MAX_QUOTA,
				   T1.UNIT,
				   IFNULL(LC.CURRENCY_CODE,'EUR') AS CURRENCY,
				   T1.ON_HIRE_VOLUME_TRACKING,
				   T1.OFF_HIRE_VOLUME,
				   T1.ACTUAL_ON_HIRE_VOLUME,
				   T1.ACTUAL_ON_HIRE_RATE
			FROM :RESULT2 T1
			LEFT JOIN &quot;sap.tm.trp.db.leasecontract::t_lease_contract&quot; LC
			ON LC.ID=:LEASE_CONTRACT_ID;
	
END </definition>
    </calculationView>
  </calculationViews>
  <logicalModel id="Script_View">
    <descriptions/>
    <attributes>
      <attribute id="LEASE_CONTRACT_REFERENCE" order="1">
        <descriptions defaultDescription="LEASE_CONTRACT_REFERENCE"/>
        <keyMapping columnObjectName="Script_View" columnName="LEASE_CONTRACT_REFERENCE"/>
      </attribute>
      <attribute id="START_TIME" order="2">
        <descriptions defaultDescription="START_TIME"/>
        <keyMapping columnObjectName="Script_View" columnName="START_TIME"/>
      </attribute>
      <attribute id="END_TIME" order="3">
        <descriptions defaultDescription="END_TIME"/>
        <keyMapping columnObjectName="Script_View" columnName="END_TIME"/>
      </attribute>
      <attribute id="LESSOR" order="4">
        <descriptions defaultDescription="LESSOR"/>
        <keyMapping columnObjectName="Script_View" columnName="LESSOR"/>
      </attribute>
      <attribute id="CONTRACT_TYPE" order="5">
        <descriptions defaultDescription="CONTRACT_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="CONTRACT_TYPE"/>
      </attribute>
      <attribute id="UNIT" order="7">
        <descriptions defaultDescription="UNIT"/>
        <keyMapping columnObjectName="Script_View" columnName="UNIT"/>
      </attribute>
      <attribute id="CURRENCY" order="8">
        <descriptions defaultDescription="CURRENCY"/>
        <keyMapping columnObjectName="Script_View" columnName="CURRENCY"/>
      </attribute>
    </attributes>
    <calculatedAttributes/>
    <privateDataFoundation>
      <tableProxies/>
      <joins/>
      <layout>
        <shapes/>
      </layout>
    </privateDataFoundation>
    <baseMeasures>
      <measure id="MAX_QUOTA" order="6" aggregationType="sum" measureType="simple">
        <descriptions defaultDescription="MAX_QUOTA"/>
        <measureMapping columnObjectName="Script_View" columnName="MAX_QUOTA"/>
      </measure>
      <measure id="ON_HIRE_VOLUME_TRACKING" order="9" aggregationType="sum" measureType="simple">
        <descriptions defaultDescription="ON_HIRE_VOLUME_TRACKING"/>
        <measureMapping columnObjectName="Script_View" columnName="ON_HIRE_VOLUME_TRACKING"/>
      </measure>
      <measure id="OFF_HIRE_VOLUME" order="10" aggregationType="sum" measureType="simple">
        <descriptions defaultDescription="OFF_HIRE_VOLUME"/>
        <measureMapping columnObjectName="Script_View" columnName="OFF_HIRE_VOLUME"/>
      </measure>
      <measure id="ACTUAL_ON_HIRE_VOLUME" order="11" aggregationType="sum" measureType="simple">
        <descriptions defaultDescription="ACTUAL_ON_HIRE_VOLUME"/>
        <measureMapping columnObjectName="Script_View" columnName="ACTUAL_ON_HIRE_VOLUME"/>
      </measure>
      <measure id="ACTUAL_ON_HIRE_RATE" order="12" aggregationType="sum" measureType="simple">
        <descriptions defaultDescription="ACTUAL_ON_HIRE_RATE"/>
        <measureMapping columnObjectName="Script_View" columnName="ACTUAL_ON_HIRE_RATE"/>
      </measure>
    </baseMeasures>
    <calculatedMeasures/>
    <restrictedMeasures/>
    <localDimensions/>
  </logicalModel>
  <layout>
    <shapes>
      <shape modelObjectName="Output" modelObjectNameSpace="MeasureGroup">
        <upperLeftCorner x="40" y="85"/>
      </shape>
    </shapes>
  </layout>
</Calculation:scenario>