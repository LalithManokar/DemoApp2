PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.leasecontract::sp_lease_contract_availability_for_ld_terms" 
(
 IN HIER_TERMS_LD "sap.tm.trp.db.leasecontract::tt_lease_contract_hire_terms_expanded",
 IN SCENARIO_USED_QUOTA_TABLE "sap.tm.trp.db.leasecontract::tt_lease_contract_used_quota",
 IN HIRE_TYPE INTEGER, 
 IN LOCATION NVARCHAR(50), 
 IN DATE TIMESTAMP, 
 IN RESOURCE_TYPE NVARCHAR(50),
 IN DEMAND_QUANTITY_IN INTEGER,
 IN SCENARIO_ID BIGINT,
 IN HIRE_CONDITION_CHECK TINYINT,
 OUT VAR_OUT "sap.tm.trp.db.leasecontract::tt_lease_contract_available_terms"	
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA SAP_TM_TRP
	READS SQL DATA AS
BEGIN
 


  DECLARE RECORD_COUNT BIGINT;
  DECLARE MAX_INTEGER INTEGER;
  
  SELECT COUNT(*) INTO RECORD_COUNT FROM :HIER_TERMS_LD;
  
IF :RECORD_COUNT >0 THEN
  SELECT 2147483647 INTO MAX_INTEGER
  FROM DUMMY;
  
  --DISTINCT TERMS SATISFYING THE CONDITIONS
	HIER_TERMS_BY_FILTERS=
	SELECT DISTINCT ID,
	LEASE_CONTRACT_ID,
	LEASE_CONTRACT_REFERENCE,
	LESSOR,
	LEASE_CONTRACT_TYPE,
	START_TIME,
	END_TIME,
	LOCATION_GROUP_NAME,
	EQUIPMENT_GROUP_NAME,
	TERM_MAX_HIRE_QUANTITY,
	TERM_MIN_HIRE_QUANTITY,
	CONSOLIDATED_MIN_HIRE_QUANTITY,
	COND_MAX_HIRE_QUANTITY_EL,
	COND_MAX_HIRE_QUANTITY_L,
	COND_MAX_HIRE_QUANTITY_E,
	COND_EL_ID,
	COND_E_ID,
	COND_L_ID,
	CONTRACT_MAX_HIRE_QUANTITY,
	CONTRACT_MIN_HIRE_QUANTITY,
	HIRE_FEE,	
	CURRENCY,
	UNIT,
	RESOURCE_CATEGORY
	FROM :HIER_TERMS_LD;
	
	--------STAGE1.A: MAX QUANTITY CHECK---------------------------------------------------
	--STAGE1.A : CALCULATE THE HIRED VOLUME FOR ELD TERMS-----------------------------------------------------------------
	--CALCULATE THE HIRED VOLUME FROM EVENT HISTORY TABLE
	TERM_LD_QUANTITY= 
		SELECT HT.ID,
		  COUNT(LH.EVENT_GUID) AS HIRE_VOLUME_EVENT_HISTORY
		FROM
			:HIER_TERMS_LD HT LEFT OUTER JOIN
	                (SELECT LH.*, LCT.ID AS LEASE_CONTRACT_ID
	                 FROM "sap.tm.trp.db.semantic.event::v_lease_resource_history" LH 
	                 INNER JOIN "sap.tm.trp.db.leasecontract::t_lease_contract" LCT 
	                   			ON LH.LEASE_CONTRACT_REFERENCE = LCT.LEASE_CONTRACT_REFERENCE	
	                 WHERE LH.HIRE_TYPE= :HIRE_TYPE 
	                 ) LH 
		  ON LH.RESOURCE_TYPE = HT.EQUIPMENT_CODE		
		  AND LH.LEASE_CONTRACT_ID = HT.LEASE_CONTRACT_ID
		  AND LH.EVENT_TIME BETWEEN HT.START_TIME AND HT.END_TIME
		GROUP BY 
			HT.ID;
	
	--GET THE USED QUOTA FOR THE TERMS FROM THE SCENARIO TABLE BY THE CURRENT SCENARIO ID
	LD_HIRE_VOLUME_SCENARIO_BY_SCENARIO_ID = 
	SELECT HT.ID,
		SUM(SUQ.USED_QUOTA) AS HIRE_VOLUME_SCENARIO
		FROM :HIER_TERMS_LD HT
		LEFT OUTER JOIN :SCENARIO_USED_QUOTA_TABLE SUQ
		ON HT.LEASE_CONTRACT_ID=SUQ.LEASE_CONTRACT_ID AND		   
		   HT.LOCATION_GUID = SUQ.LOCATION_ID AND
		    SUQ.HIRE_TIME BETWEEN HT.START_TIME AND HT.END_TIME
		WHERE SUQ.SCENARIO_ID=:SCENARIO_ID AND SUQ.FINALIZE_FLAG=0
		GROUP BY HT.ID;
	
	--GET THE USED QUOTA FOR THE TERMS FROM THE SCENARIO TABLE FOR THE OTHER SCENARIOS
	LD_HIRE_VOLUME_SCENARIO = 
	SELECT HT.ID,
		SUM(SUQ.USED_QUOTA) AS HIRE_VOLUME_SCENARIO
		FROM :HIER_TERMS_LD HT
		LEFT OUTER JOIN :SCENARIO_USED_QUOTA_TABLE SUQ
		ON HT.LEASE_CONTRACT_ID=SUQ.LEASE_CONTRACT_ID AND		   
		   HT.LOCATION_GUID = SUQ.LOCATION_ID AND
		    SUQ.HIRE_TIME BETWEEN HT.START_TIME AND HT.END_TIME
		WHERE SUQ.SCENARIO_ID<>:SCENARIO_ID AND SUQ.FINALIZE_FLAG=1
		GROUP BY HT.ID;		
	 
	 --GET THE USED QUOTA FROM THE SCENARIO HISTORY
	SCENARIO_LD_QUANTITY = 
	SELECT T1.ID,
			IFNULL(T1.HIRE_VOLUME_SCENARIO,0)+IFNULL(T2.HIRE_VOLUME_SCENARIO,0) AS HIRE_VOLUME_SCENARIO
	FROM 
	:LD_HIRE_VOLUME_SCENARIO_BY_SCENARIO_ID T1
	FULL OUTER JOIN :LD_HIRE_VOLUME_SCENARIO T2 ON T1.ID=T2.ID;		
	
	
	--GET THE REQUIRED TERMS AT THE TERM LEVEL
	ED_WITH_USED_QUOTA =
	SELECT HT.*,
	IFNULL(TELD.HIRE_VOLUME_EVENT_HISTORY,0) AS HIRE_VOLUME_EVENT_HISTORY,
	IFNULL(SELD.HIRE_VOLUME_SCENARIO,0) AS HIRE_VOLUME_SCENARIO,
	IFNULL(TELD.HIRE_VOLUME_EVENT_HISTORY,0)+IFNULL(SELD.HIRE_VOLUME_SCENARIO,0) AS USED_QUOTA_LD
	FROM 
	:HIER_TERMS_BY_FILTERS HT
	INNER JOIN :TERM_LD_QUANTITY TELD ON HT.ID = TELD.ID
	LEFT OUTER JOIN :SCENARIO_LD_QUANTITY SELD ON HT.ID=SELD.ID;
	
	--TERMS WITH THE TERM LEVEL MAX HIRE QUANTITY(NOT EXPANDED)
	STAGE1_HIER_TERMS_WITH_MAX_QUANTITY = 
	SELECT *
	FROM :ED_WITH_USED_QUOTA
	WHERE TERM_MAX_HIRE_QUANTITY > 0;
	
	--TERMS WITHOUT THE TERM LEVEL MAX HIRE QUANTITY(NOT EXPANDED)
	STAGE1_HIER_TERMS_WITHOUT_MAX_QUANTITY=
	 	SELECT ID,
			LEASE_CONTRACT_ID,
			LEASE_CONTRACT_REFERENCE,
			LESSOR,
			LEASE_CONTRACT_TYPE,
			START_TIME,
			END_TIME,
			LOCATION_GROUP_NAME,
			EQUIPMENT_GROUP_NAME,
			TERM_MAX_HIRE_QUANTITY,
			TERM_MIN_HIRE_QUANTITY,
			CONSOLIDATED_MIN_HIRE_QUANTITY,
			COND_MAX_HIRE_QUANTITY_EL,
			COND_MAX_HIRE_QUANTITY_L,
			COND_MAX_HIRE_QUANTITY_E,
			COND_EL_ID,
			COND_E_ID,
			COND_L_ID,
			CONTRACT_MAX_HIRE_QUANTITY,
			CONTRACT_MIN_HIRE_QUANTITY,
			HIRE_FEE,	
			CURRENCY,
			UNIT,
			RESOURCE_CATEGORY,
			USED_QUOTA_LD,
	 		NULL AS AVAIL_LD 
	 	FROM :ED_WITH_USED_QUOTA 
	 	WHERE TERM_MAX_HIRE_QUANTITY=0;	
	
	--------STAGE1 C: AVAILABILITY CALC---------------------------------------------------
	/*
	 In this stage the following is done
	 1. Calculate the availability(AVAIL_ELD)
	 2. Validate the min hire condition violation for the availability
	 3. Validate the max hire condition considering the input demand quantity
	*/
		STAGE1_CALC_HIER_TERMS_AVAIL = 
		SELECT ID,
	   		LEASE_CONTRACT_ID,
	   		LEASE_CONTRACT_REFERENCE,
		    LESSOR,
		    LEASE_CONTRACT_TYPE,
			START_TIME,
			END_TIME,
			LOCATION_GROUP_NAME,
			EQUIPMENT_GROUP_NAME,
			TERM_MAX_HIRE_QUANTITY,
			TERM_MIN_HIRE_QUANTITY,
			CONSOLIDATED_MIN_HIRE_QUANTITY,
			COND_MAX_HIRE_QUANTITY_EL,
			COND_MAX_HIRE_QUANTITY_L,
			COND_MAX_HIRE_QUANTITY_E,
			COND_EL_ID,
			COND_E_ID,
			COND_L_ID,
			CONTRACT_MAX_HIRE_QUANTITY,
			CONTRACT_MIN_HIRE_QUANTITY,
			HIRE_FEE,	
			CURRENCY,
			UNIT,
			RESOURCE_CATEGORY,
			USED_QUOTA_LD,
			CASE WHEN TERM_MAX_HIRE_QUANTITY-(HIRE_VOLUME_EVENT_HISTORY+HIRE_VOLUME_SCENARIO+:DEMAND_QUANTITY_IN)<0 THEN 
				0 -- THIS TAKES CARE OF THE N CONDITION WHEN THE MAX QUANTITY IS EXCEEEDED
			ELSE
				CASE WHEN CONSOLIDATED_MIN_HIRE_QUANTITY IS NOT NULL
					 	  AND TERM_MAX_HIRE_QUANTITY-(HIRE_VOLUME_EVENT_HISTORY+HIRE_VOLUME_SCENARIO)<CONSOLIDATED_MIN_HIRE_QUANTITY THEN
					 	  0
				ELSE
					TERM_MAX_HIRE_QUANTITY-(HIRE_VOLUME_EVENT_HISTORY+HIRE_VOLUME_SCENARIO)
				END		 	  
			END AS 	AVAIL_LD 
	FROM :ED_WITH_USED_QUOTA;
	
	--TERMS WITHOUT AVAILABILITY
	---RESULT FOR UNION
	STAGE1_HIRE_TERMS_WITHOUT_AVAIL=
	SELECT * 
	FROM :STAGE1_CALC_HIER_TERMS_AVAIL 
	WHERE AVAIL_LD=0;
	
	--TERMS FOR WHICH THE MAX QUANTITY HIRE TERMS> HIRED VOLUME(ELD) IS  SATISFIED
	STAGE1_HIRE_TERMS_WITH_AVAIL = 
	SELECT *
	FROM :STAGE1_CALC_HIER_TERMS_AVAIL
	WHERE AVAIL_LD>0;
	
	
	--UNION : THIS IS THE INPUT INTO THE NEXT EL CHECK CASE
	LD_UNION_HIRE_TERMS_WITHOUT_MAX_QUANTITY_WITH_AVAIL=
		SELECT * FROM :STAGE1_HIER_TERMS_WITHOUT_MAX_QUANTITY UNION
		SELECT * FROM :STAGE1_HIRE_TERMS_WITH_AVAIL;
----------------DO THE REST ONLY IF AVAILABILTY CHECK IS REQUIRED--------------------------------------------------------
IF :HIRE_CONDITION_CHECK=0 THEN
	RESULT_UNION = 
		SELECT ID,
			LEASE_CONTRACT_ID,
			LEASE_CONTRACT_REFERENCE,
			LESSOR,
			LEASE_CONTRACT_TYPE,
			START_TIME,
			END_TIME,
			LOCATION_GROUP_NAME,
			EQUIPMENT_GROUP_NAME,
			TERM_MAX_HIRE_QUANTITY,
			TERM_MIN_HIRE_QUANTITY,
			CONSOLIDATED_MIN_HIRE_QUANTITY,
			COND_MAX_HIRE_QUANTITY_EL,
			COND_MAX_HIRE_QUANTITY_L,
			COND_MAX_HIRE_QUANTITY_E,
			COND_EL_ID,
			COND_E_ID,
			COND_L_ID,
			CONTRACT_MAX_HIRE_QUANTITY,
			CONTRACT_MIN_HIRE_QUANTITY,
			HIRE_FEE,
			CURRENCY,
			UNIT,
			RESOURCE_CATEGORY,
			USED_QUOTA_LD,		
			AVAIL_LD,
			--THESE FOUR HAS TO BE INCLUDED AS WE USE THE SAME VARIABLE IN THE ELSE.THIS AVOID STRUCTURE MISTMATCH ERROR			
			NULL AS AVAIL_L,
			NULL AS AVAIL_LC		
		FROM :STAGE1_HIRE_TERMS_WITHOUT_AVAIL
			UNION
		SELECT ID,
			LEASE_CONTRACT_ID,
			LEASE_CONTRACT_REFERENCE,
			LESSOR,
			LEASE_CONTRACT_TYPE,
			START_TIME,
			END_TIME,
			LOCATION_GROUP_NAME,
			EQUIPMENT_GROUP_NAME,
			TERM_MAX_HIRE_QUANTITY,
			TERM_MIN_HIRE_QUANTITY,
			CONSOLIDATED_MIN_HIRE_QUANTITY,
			COND_MAX_HIRE_QUANTITY_EL,
			COND_MAX_HIRE_QUANTITY_L,
			COND_MAX_HIRE_QUANTITY_E,
			COND_EL_ID,
			COND_E_ID,
			COND_L_ID,
			CONTRACT_MAX_HIRE_QUANTITY,
			CONTRACT_MIN_HIRE_QUANTITY,
			HIRE_FEE,
			CURRENCY,
			UNIT,
			RESOURCE_CATEGORY,
			USED_QUOTA_LD,		
			IFNULL(AVAIL_LD,1) AS AVAIL_LD, -- IF NULL CONDITION IS ADDED HERE TO MAKE AVAIALABLE THOSE TERMS WHICH DO NOT HAVE MAX QUANTITY
			NULL AS AVAIL_L,
			NULL AS AVAIL_LC
		FROM :LD_UNION_HIRE_TERMS_WITHOUT_MAX_QUANTITY_WITH_AVAIL;
		
	---CALCULATE THE ACTUAL AVAILABILTY
		RESULT_ACTUAL = 
			SELECT ID,
				LEASE_CONTRACT_ID,
				LEASE_CONTRACT_REFERENCE,
				LESSOR,
				LEASE_CONTRACT_TYPE,
				START_TIME,
				END_TIME,
				LOCATION_GROUP_NAME,
				EQUIPMENT_GROUP_NAME,
				TERM_MAX_HIRE_QUANTITY,
				CONTRACT_MAX_HIRE_QUANTITY,
				HIRE_FEE,
				CURRENCY,
				UNIT,
				RESOURCE_CATEGORY,
				USED_QUOTA_LD AS USED_QUOTA,
				AVAIL_LD AS ACTUAL_AVAILABLE_QUANTITY,			  
				:DEMAND_QUANTITY_IN*IFNULL(HIRE_FEE,0) AS DEMAND_QUANTITY_HIRE_COST
				FROM :RESULT_UNION;				
	ELSE
---------------------------------------------------------------STAGE2-----------------------------------------------------
	
	--------STAGE2.A: MAX QUANTITY CHECK HIRE CONDITION AT L LEVEL----------------------------------------------------------
	--TERMS WITHOUT CONDITION (L LEVEL) MAX_HIRE
		STAGE2_HIER_TERMS_WITHOUT_CONDITION_MAX_HIRE=
		SELECT HT.*,
			   NULL AS AVAIL_L
		FROM :LD_UNION_HIRE_TERMS_WITHOUT_MAX_QUANTITY_WITH_AVAIL HT
		WHERE COND_MAX_HIRE_QUANTITY_L=0;
		
		--TERMS WITH CONDITION (L LEVEL) MAX HIRE
		STAGE2_HIER_TERMS_WITH_CONDITION_MAX_HIRE = 
			SELECT HT.*			   	 
			FROM :LD_UNION_HIRE_TERMS_WITHOUT_MAX_QUANTITY_WITH_AVAIL HT		
			WHERE HT.COND_MAX_HIRE_QUANTITY_L>0;
		
		STAGE2_HIER_TERMS_WITH_CONDITION_MAX_HIRE_EXPANDED = 
		SELECT HT.*,
			   INPUT.USED_QUOTA_LD,	
			   INPUT.AVAIL_LD
		FROM :STAGE2_HIER_TERMS_WITH_CONDITION_MAX_HIRE INPUT
		INNER JOIN :HIER_TERMS_LD HT 
				ON HT.ID = INPUT.ID;
			
		TERMS_L_QUANTITY=
		SELECT HT.ID,
				SUM(HIRE_VOLUME_EVENT_HISTORY) AS HIRE_VOLUME_EVENT_HISTORY
			FROM :STAGE2_HIER_TERMS_WITH_CONDITION_MAX_HIRE_EXPANDED HT
			LEFT OUTER JOIN
				(SELECT LEASE_CONTRACT_ID,				
						LOCATION_ID,
						COUNT(EVENT_GUID) AS HIRE_VOLUME_EVENT_HISTORY
				 FROM (SELECT LH.*, LCT.ID AS LEASE_CONTRACT_ID
		               FROM "sap.tm.trp.db.semantic.event::v_lease_resource_history" LH
		               INNER JOIN "sap.tm.trp.db.leasecontract::t_lease_contract" LCT 
		                	ON LH.LEASE_CONTRACT_REFERENCE = LCT.LEASE_CONTRACT_REFERENCE
		               WHERE LH.HIRE_TYPE= :HIRE_TYPE 
		               ) LH
		          GROUP BY LH.LEASE_CONTRACT_ID,                   
		                   LH.LOCATION_ID
		           )LH
		      ON HT.LEASE_CONTRACT_ID=LH.LEASE_CONTRACT_ID
		      AND LH.LOCATION_ID  = HT.LOCATION_GUID
		      GROUP BY HT.ID;
		      
		      	
		L_HIRE_VOLUME_SCENARIO_BY_SCENARIO_ID = 
			SELECT HT.ID,
				   SUM(SUQ.HIRE_VOLUME_SCENARIO) AS HIRE_VOLUME_SCENARIO
			FROM :STAGE2_HIER_TERMS_WITH_CONDITION_MAX_HIRE_EXPANDED HT
			LEFT OUTER JOIN (SELECT SUQ.LEASE_CONTRACT_ID,					 	 	
							 	 	SUQ.LOCATION_ID,
						 	 	 	SUM(SUQ.USED_QUOTA) AS HIRE_VOLUME_SCENARIO
							FROM :SCENARIO_USED_QUOTA_TABLE SUQ
							WHERE SUQ.SCENARIO_ID=:SCENARIO_ID AND SUQ.FINALIZE_FLAG=0
							GROUP BY SUQ.LEASE_CONTRACT_ID,					 		 
							 		 SUQ.LOCATION_ID
				)SUQ			 
			ON HT.LEASE_CONTRACT_ID=SUQ.LEASE_CONTRACT_ID AND
			   HT.LOCATION_GUID = SUQ.LOCATION_ID
			GROUP BY HT.ID;   
		
		--GET THE USED QUOTA FOR THE TERMS FROM THE SCENARIO TABLE FOR THE OTHER SCENARIOS
		L_HIRE_VOLUME_SCENARIO =
			SELECT HT.ID,
				   SUM(SUQ.HIRE_VOLUME_SCENARIO) AS HIRE_VOLUME_SCENARIO
			FROM :STAGE2_HIER_TERMS_WITH_CONDITION_MAX_HIRE_EXPANDED HT
			LEFT OUTER JOIN (SELECT SUQ.LEASE_CONTRACT_ID,					 	 	
							 	 	SUQ.LOCATION_ID,
						 	 	 	SUM(SUQ.USED_QUOTA) AS HIRE_VOLUME_SCENARIO
							FROM :SCENARIO_USED_QUOTA_TABLE SUQ
							WHERE SUQ.SCENARIO_ID<>:SCENARIO_ID AND SUQ.FINALIZE_FLAG=1
							GROUP BY SUQ.LEASE_CONTRACT_ID,					 		 
							 		 SUQ.LOCATION_ID
				)SUQ			 
			ON HT.LEASE_CONTRACT_ID=SUQ.LEASE_CONTRACT_ID AND	   
			   HT.LOCATION_GUID = SUQ.LOCATION_ID
			GROUP BY HT.ID;
			
		--GET THE USED QUOTA FROM THE SCENARIO HISTORY
		SCENARIO_L_QUANTITY = 
		SELECT T1.ID,
				IFNULL(T1.HIRE_VOLUME_SCENARIO,0)+IFNULL(T2.HIRE_VOLUME_SCENARIO,0) AS HIRE_VOLUME_SCENARIO
		FROM 
		:L_HIRE_VOLUME_SCENARIO_BY_SCENARIO_ID T1
		FULL OUTER JOIN	:L_HIRE_VOLUME_SCENARIO T2 ON T1.ID=T2.ID;		
		
		L_WITH_USED_QUOTA=
		SELECT HT.*,
			IFNULL(TELD.HIRE_VOLUME_EVENT_HISTORY,0) AS HIRE_VOLUME_EVENT_HISTORY,
			IFNULL(SELD.HIRE_VOLUME_SCENARIO,0) AS HIRE_VOLUME_SCENARIO,
			IFNULL(TELD.HIRE_VOLUME_EVENT_HISTORY,0)+IFNULL(SELD.HIRE_VOLUME_SCENARIO,0) AS USED_QUOTA
		FROM :STAGE2_HIER_TERMS_WITH_CONDITION_MAX_HIRE HT
		INNER JOIN :TERMS_L_QUANTITY TELD ON HT.ID = TELD.ID
		LEFT OUTER JOIN :SCENARIO_L_QUANTITY SELD ON HT.ID=SELD.ID;
		
		--NEW STEP: TO CALCULATE THE USED_QUOTA_AT THE L CONDITION LEVEL
		STAGE2_USED_QUOTA_CONDITION_L_LEVEL=
		SELECT HT.COND_L_ID,
			SUM(HT.USED_QUOTA) AS USED_QUOTA_L
		FROM :L_WITH_USED_QUOTA HT
		GROUP BY HT.COND_L_ID;
		
		--------STAGE2 C: AVAILABILITY CALC---------------------------------------------------
		STAGE2_CALC_HIER_TERMS_AVAIL = 
		SELECT ID,
		   		LEASE_CONTRACT_ID,
		   		LEASE_CONTRACT_REFERENCE,
			    LESSOR,
			    LEASE_CONTRACT_TYPE,
				START_TIME,
				END_TIME,
				LOCATION_GROUP_NAME,
				EQUIPMENT_GROUP_NAME,
				TERM_MAX_HIRE_QUANTITY,
				TERM_MIN_HIRE_QUANTITY,
				CONSOLIDATED_MIN_HIRE_QUANTITY,
				COND_MAX_HIRE_QUANTITY_EL,
				COND_MAX_HIRE_QUANTITY_L,
				COND_MAX_HIRE_QUANTITY_E,
				COND_EL_ID,
				COND_E_ID,
				T1.COND_L_ID,
				CONTRACT_MAX_HIRE_QUANTITY,
				CONTRACT_MIN_HIRE_QUANTITY,
				HIRE_FEE,	
				CURRENCY,
				UNIT,
				RESOURCE_CATEGORY,
				USED_QUOTA_LD,
				AVAIL_LD,				
				CASE WHEN COND_MAX_HIRE_QUANTITY_L-(USED_QUOTA_L+:DEMAND_QUANTITY_IN)<0 THEN 
					0 -- THIS TAKES CARE OF THE N CONDITION WHEN THE MAX QUANTITY IS EXCEEEDED
				ELSE
					CASE WHEN CONSOLIDATED_MIN_HIRE_QUANTITY IS NOT NULL
						 	  AND COND_MAX_HIRE_QUANTITY_L-(USED_QUOTA_L)<CONSOLIDATED_MIN_HIRE_QUANTITY THEN
						 	  0
					ELSE
						COND_MAX_HIRE_QUANTITY_L-(USED_QUOTA_L)
					END		 	  
				END AS 	AVAIL_L 
		FROM :L_WITH_USED_QUOTA T1
		INNER JOIN :STAGE2_USED_QUOTA_CONDITION_L_LEVEL T2
			ON T1.COND_L_ID = T2.COND_L_ID;
			
	--TERMS WITHOUT AVAILABILITY
	---RESULT FOR UNION
	STAGE2_HIRE_TERMS_WITHOUT_AVAIL=
	SELECT * 
	FROM :STAGE2_CALC_HIER_TERMS_AVAIL 
	WHERE AVAIL_L=0;
	
	--TERMS FOR WHICH THE MAX QUANTITY HIRE TERMS> HIRED VOLUME(ELD) IS  SATISFIED
	STAGE2_HIRE_TERMS_WITH_AVAIL = 
	SELECT *
	FROM :STAGE2_CALC_HIER_TERMS_AVAIL
	WHERE AVAIL_L>0;
	
	
	--UNION : THIS IS THE INPUT INTO THE NEXT EL CHECK CASE
	L_UNION_HIRE_TERMS_WITHOUT_MAX_QUANTITY_WITH_AVAIL=
		SELECT * FROM :STAGE2_HIER_TERMS_WITHOUT_CONDITION_MAX_HIRE UNION
		SELECT * FROM :STAGE2_HIRE_TERMS_WITH_AVAIL;
	
----------------------STAGE3 : MAX QUANTITY LEASE CONTRACT LEVEL------------------------------------------------------------------	
		--TERMS WITHOUT CONDITION (CONTRACT LEVEL) MAX_HIRE
		STAGE3_HIER_TERMS_WITHOUT_CONTRACT_MAX_HIRE=
		SELECT HT.*,
			   NULL AS AVAIL_LC
		FROM :L_UNION_HIRE_TERMS_WITHOUT_MAX_QUANTITY_WITH_AVAIL HT
		WHERE CONTRACT_MAX_HIRE_QUANTITY=0;	
		
		--TERMS WITH CONDITION (CONTRACT LEVEL) MAX HIRE
		STAGE3_HIER_TERMS_WITH_CONTRACT_MAX_HIRE = 
			SELECT HT.*			   	 
			FROM :L_UNION_HIRE_TERMS_WITHOUT_MAX_QUANTITY_WITH_AVAIL HT		
			WHERE HT.CONTRACT_MAX_HIRE_QUANTITY>0;
		
		----------STAGE3 B : CALCULATE THE HIRED VOLUME
		TERMS_LC_QUANTITY =
		SELECT HT.ID,
			   LH.HIRE_VOLUME_EVENT_HISTORY
		FROM :STAGE3_HIER_TERMS_WITH_CONTRACT_MAX_HIRE HT
			LEFT OUTER JOIN 
				(SELECT LEASE_CONTRACT_ID,
						COUNT(EVENT_GUID) AS HIRE_VOLUME_EVENT_HISTORY	
		         FROM (SELECT LH.*,
		                	  LCT.ID AS LEASE_CONTRACT_ID
		               FROM "sap.tm.trp.db.semantic.event::v_lease_resource_history" LH
		               	INNER JOIN "sap.tm.trp.db.leasecontract::t_lease_contract" LCT 
		                	ON LH.LEASE_CONTRACT_REFERENCE = LCT.LEASE_CONTRACT_REFERENCE		                
		                 WHERE LH.HIRE_TYPE= :HIRE_TYPE 
		               ) LH
		          GROUP BY LH.LEASE_CONTRACT_ID       
		          ) LH
		ON LH.LEASE_CONTRACT_ID = HT.LEASE_CONTRACT_ID;
		
		--SELECT 'TERMS_LC_QUANTITY' AS SELECTNAME ,T1.* FROM :TERMS_LC_QUANTITY T1;
		
		--GET THE USED QUOTA FOR THE TERMS FROM THE SCENARIO TABLE BY THE CURRENT SCENARIO ID
		LC_HIRE_VOLUME_SCENARIO_BY_SCENARIO_ID = 
			SELECT HT.ID,
				   SUQ.HIRE_VOLUME_SCENARIO
				FROM :STAGE3_HIER_TERMS_WITH_CONTRACT_MAX_HIRE HT
				LEFT OUTER JOIN 
				(
					SELECT SUQ.LEASE_CONTRACT_ID,
						   SUM(SUQ.USED_QUOTA) AS HIRE_VOLUME_SCENARIO
					FROM :SCENARIO_USED_QUOTA_TABLE SUQ
					WHERE SUQ.SCENARIO_ID=:SCENARIO_ID AND SUQ.FINALIZE_FLAG=0
					GROUP BY SUQ.LEASE_CONTRACT_ID
					
				)SUQ	
				ON HT.LEASE_CONTRACT_ID=SUQ.LEASE_CONTRACT_ID;
			
		--GET THE USED QUOTA FOR THE TERMS FROM THE SCENARIO TABLE FOR THE OTHER SCENARIOS
		LC_HIRE_VOLUME_SCENARIO = 
		SELECT HT.ID,
			SUQ.HIRE_VOLUME_SCENARIO
			FROM :STAGE3_HIER_TERMS_WITH_CONTRACT_MAX_HIRE HT
			LEFT OUTER JOIN 
			(
					SELECT SUQ.LEASE_CONTRACT_ID,
						   SUM(SUQ.USED_QUOTA) AS HIRE_VOLUME_SCENARIO
					FROM :SCENARIO_USED_QUOTA_TABLE SUQ
					WHERE SUQ.SCENARIO_ID<>:SCENARIO_ID AND SUQ.FINALIZE_FLAG=1
					GROUP BY SUQ.LEASE_CONTRACT_ID
					
			)SUQ
			ON HT.LEASE_CONTRACT_ID=SUQ.LEASE_CONTRACT_ID;
			
			    	   
		--GET THE USED QUOTA FROM THE SCENARIO HISTORY
		SCENARIO_LC_QUANTITY = 
		SELECT T1.ID,
				IFNULL(T1.HIRE_VOLUME_SCENARIO,0)+IFNULL(T2.HIRE_VOLUME_SCENARIO,0) AS HIRE_VOLUME_SCENARIO
		FROM 
		:LC_HIRE_VOLUME_SCENARIO_BY_SCENARIO_ID T1
		FULL OUTER JOIN	:LC_HIRE_VOLUME_SCENARIO T2 ON T1.ID=T2.ID;
		
		LC_WITH_USED_QUOTA=
		SELECT HT.*,
			IFNULL(TELD.HIRE_VOLUME_EVENT_HISTORY,0) AS HIRE_VOLUME_EVENT_HISTORY,
			IFNULL(SELD.HIRE_VOLUME_SCENARIO,0) AS HIRE_VOLUME_SCENARIO
		FROM :STAGE3_HIER_TERMS_WITH_CONTRACT_MAX_HIRE HT
		INNER JOIN :TERMS_LC_QUANTITY TELD ON HT.ID = TELD.ID
		LEFT OUTER JOIN :SCENARIO_LC_QUANTITY SELD ON HT.ID=SELD.ID;	
		
		--------STAGE3 C: AVAILABILITY CALC---------------------------------------------------
		STAGE3_CALC_HIER_TERMS_AVAIL = 
		SELECT ID,
		   		LEASE_CONTRACT_ID,
		   		LEASE_CONTRACT_REFERENCE,
			    LESSOR,
			    LEASE_CONTRACT_TYPE,
				START_TIME,
				END_TIME,
				LOCATION_GROUP_NAME,
				EQUIPMENT_GROUP_NAME,
				TERM_MAX_HIRE_QUANTITY,
				TERM_MIN_HIRE_QUANTITY,
				CONSOLIDATED_MIN_HIRE_QUANTITY,
				COND_MAX_HIRE_QUANTITY_EL,
				COND_MAX_HIRE_QUANTITY_L,
				COND_MAX_HIRE_QUANTITY_E,
				COND_EL_ID,
				COND_E_ID,
				COND_L_ID,
				CONTRACT_MAX_HIRE_QUANTITY,
				CONTRACT_MIN_HIRE_QUANTITY,
				HIRE_FEE,	
				CURRENCY,
				UNIT,
				RESOURCE_CATEGORY,
				USED_QUOTA_LD,
				AVAIL_LD,				
				AVAIL_L,
				CASE WHEN CONTRACT_MAX_HIRE_QUANTITY-(HIRE_VOLUME_EVENT_HISTORY+HIRE_VOLUME_SCENARIO+:DEMAND_QUANTITY_IN)<0 THEN 
					0 -- THIS TAKES CARE OF THE N CONDITION WHEN THE MAX QUANTITY IS EXCEEEDED
				ELSE
					CASE WHEN CONSOLIDATED_MIN_HIRE_QUANTITY IS NOT NULL
						 	  AND CONTRACT_MAX_HIRE_QUANTITY-(HIRE_VOLUME_EVENT_HISTORY+HIRE_VOLUME_SCENARIO)<CONSOLIDATED_MIN_HIRE_QUANTITY THEN
						 	  0
					ELSE
						CONTRACT_MAX_HIRE_QUANTITY-(HIRE_VOLUME_EVENT_HISTORY+HIRE_VOLUME_SCENARIO)
					END		 	  
				END AS 	AVAIL_LC 
		FROM :LC_WITH_USED_QUOTA;
		
			--TERMS WITHOUT AVAILABILITY
		---RESULT FOR UNION
		STAGE3_HIRE_TERMS_WITHOUT_AVAIL=
		SELECT * 
		FROM :STAGE3_CALC_HIER_TERMS_AVAIL 
		WHERE AVAIL_LC=0;
		
		--TERMS FOR WHICH THE MAX QUANTITY HIRE TERMS> HIRED VOLUME(ELD) IS  SATISFIED
		STAGE3_HIRE_TERMS_WITH_AVAIL = 
		SELECT *
		FROM :STAGE3_CALC_HIER_TERMS_AVAIL
		WHERE AVAIL_LC>0;
		
		
		--UNION : THIS IS THE INPUT INTO THE NEXT EL CHECK CASE
		LC_UNION_HIRE_TERMS_WITHOUT_MAX_QUANTITY_WITH_AVAIL=
			SELECT * FROM :STAGE3_HIER_TERMS_WITHOUT_CONTRACT_MAX_HIRE UNION
			SELECT * FROM :STAGE3_HIRE_TERMS_WITH_AVAIL;  
			
		
		RESULT_UNION =
		SELECT ID,
			LEASE_CONTRACT_ID,
			LEASE_CONTRACT_REFERENCE,
			LESSOR,
			LEASE_CONTRACT_TYPE,
			START_TIME,
			END_TIME,
			LOCATION_GROUP_NAME,
			EQUIPMENT_GROUP_NAME,
			TERM_MAX_HIRE_QUANTITY,
			TERM_MIN_HIRE_QUANTITY,
			CONSOLIDATED_MIN_HIRE_QUANTITY,
			COND_MAX_HIRE_QUANTITY_EL,
			COND_MAX_HIRE_QUANTITY_L,
			COND_MAX_HIRE_QUANTITY_E,
			COND_EL_ID,
			COND_E_ID,
			COND_L_ID,
			CONTRACT_MAX_HIRE_QUANTITY,
			CONTRACT_MIN_HIRE_QUANTITY,
			HIRE_FEE,
			CURRENCY,
			UNIT,
			RESOURCE_CATEGORY,
			USED_QUOTA_LD,		
			AVAIL_LD,						
			NULL AS AVAIL_L,
			NULL AS AVAIL_LC		
		FROM :STAGE1_HIRE_TERMS_WITHOUT_AVAIL
			UNION
		SELECT ID,
			LEASE_CONTRACT_ID,
			LEASE_CONTRACT_REFERENCE,
			LESSOR,
			LEASE_CONTRACT_TYPE,
			START_TIME,
			END_TIME,
			LOCATION_GROUP_NAME,
			EQUIPMENT_GROUP_NAME,
			TERM_MAX_HIRE_QUANTITY,
			TERM_MIN_HIRE_QUANTITY,
			CONSOLIDATED_MIN_HIRE_QUANTITY,
			COND_MAX_HIRE_QUANTITY_EL,
			COND_MAX_HIRE_QUANTITY_L,
			COND_MAX_HIRE_QUANTITY_E,
			COND_EL_ID,
			COND_E_ID,
			COND_L_ID,
			CONTRACT_MAX_HIRE_QUANTITY,
			CONTRACT_MIN_HIRE_QUANTITY,
			HIRE_FEE,
			CURRENCY,
			UNIT,
			RESOURCE_CATEGORY,
			USED_QUOTA_LD,		
			AVAIL_LD,						
			AVAIL_L,
			NULL AS AVAIL_LC		
		FROM :STAGE2_HIRE_TERMS_WITHOUT_AVAIL	
				UNION
		SELECT ID,
			LEASE_CONTRACT_ID,
			LEASE_CONTRACT_REFERENCE,
			LESSOR,
			LEASE_CONTRACT_TYPE,
			START_TIME,
			END_TIME,
			LOCATION_GROUP_NAME,
			EQUIPMENT_GROUP_NAME,
			TERM_MAX_HIRE_QUANTITY,
			TERM_MIN_HIRE_QUANTITY,
			CONSOLIDATED_MIN_HIRE_QUANTITY,
			COND_MAX_HIRE_QUANTITY_EL,
			COND_MAX_HIRE_QUANTITY_L,
			COND_MAX_HIRE_QUANTITY_E,
			COND_EL_ID,
			COND_E_ID,
			COND_L_ID,
			CONTRACT_MAX_HIRE_QUANTITY,
			CONTRACT_MIN_HIRE_QUANTITY,
			HIRE_FEE,
			CURRENCY,
			UNIT,
			RESOURCE_CATEGORY,
			USED_QUOTA_LD,		
			AVAIL_LD,						
			AVAIL_L,
			AVAIL_LC		
		FROM :STAGE3_HIRE_TERMS_WITHOUT_AVAIL
			UNION		
		SELECT ID,
			LEASE_CONTRACT_ID,
			LEASE_CONTRACT_REFERENCE,
			LESSOR,
			LEASE_CONTRACT_TYPE,
			START_TIME,
			END_TIME,
			LOCATION_GROUP_NAME,
			EQUIPMENT_GROUP_NAME,
			TERM_MAX_HIRE_QUANTITY,
			TERM_MIN_HIRE_QUANTITY,
			CONSOLIDATED_MIN_HIRE_QUANTITY,
			COND_MAX_HIRE_QUANTITY_EL,
			COND_MAX_HIRE_QUANTITY_L,
			COND_MAX_HIRE_QUANTITY_E,
			COND_EL_ID,
			COND_E_ID,
			COND_L_ID,
			CONTRACT_MAX_HIRE_QUANTITY,
			CONTRACT_MIN_HIRE_QUANTITY,
			HIRE_FEE,
			CURRENCY,
			UNIT,
			RESOURCE_CATEGORY,
			USED_QUOTA_LD,		
			AVAIL_LD,						
			AVAIL_L,
			AVAIL_LC
		FROM :LC_UNION_HIRE_TERMS_WITHOUT_MAX_QUANTITY_WITH_AVAIL;
		
	---CALCULATE THE ACTUAL AVAILABILTY
		RESULT_ACTUAL = 
			SELECT ID,
				LEASE_CONTRACT_ID,
				LEASE_CONTRACT_REFERENCE,
				LESSOR,
				LEASE_CONTRACT_TYPE,
				START_TIME,
				END_TIME,
				LOCATION_GROUP_NAME,
				EQUIPMENT_GROUP_NAME,
				TERM_MAX_HIRE_QUANTITY,
				CONTRACT_MAX_HIRE_QUANTITY,
				HIRE_FEE,
				CURRENCY,
				UNIT,
				RESOURCE_CATEGORY,		
				USED_QUOTA_LD AS USED_QUOTA,
				LEAST(IFNULL(AVAIL_LD,:MAX_INTEGER),				  
					  IFNULL(AVAIL_L,:MAX_INTEGER),	
					  IFNULL(AVAIL_LC,:MAX_INTEGER))
					AS 	ACTUAL_AVAILABLE_QUANTITY,			  
				:DEMAND_QUANTITY_IN*IFNULL(HIRE_FEE,0) AS DEMAND_QUANTITY_HIRE_COST
				FROM :RESULT_UNION;							
	
	END IF;
	
	VAR_OUT= 
			SELECT ID,
				LEASE_CONTRACT_ID,
				LEASE_CONTRACT_REFERENCE,
				LESSOR,
				LEASE_CONTRACT_TYPE,
				START_TIME,
				END_TIME,
				TERM_MAX_HIRE_QUANTITY AS MAX_HIRE_QUOTA,
				USED_QUOTA,
				ACTUAL_AVAILABLE_QUANTITY,
				HIRE_FEE,
				DEMAND_QUANTITY_HIRE_COST,
				CURRENCY,
				UNIT,
				RESOURCE_CATEGORY
				FROM :RESULT_ACTUAL;		
	
ELSE  
 VAR_OUT= 
		SELECT 1 AS ID,
			1 AS LEASE_CONTRACT_ID,
			'A' AS LEASE_CONTRACT_REFERENCE,
			'A' AS LESSOR,
			'A' AS LEASE_CONTRACT_TYPE,
			NOW() AS START_TIME,
			NOW()END_TIME,
			1 AS MAX_HIRE_QUOTA,
			1 AS USED_QUOTA,
			1 AS ACTUAL_AVAILABLE_QUANTITY,
			1 AS HIRE_FEE,
			1 AS DEMAND_QUANTITY_HIRE_COST,
			'' AS CURRENCY,
			'' AS UNIT,
			'' AS RESOURCE_CATEGORY
			FROM DUMMY WHERE 1=2; 
END IF;
END;
