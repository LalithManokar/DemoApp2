<?xml version="1.0" encoding="UTF-8"?>
<Calculation:scenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Calculation="http://www.sap.com/ndb/BiModelCalculation.ecore" schemaVersion="2.3" id="cv_equip_on_hire" applyPrivilegeType="ANALYTIC_PRIVILEGE" checkAnalyticPrivileges="true" defaultClient="crossClient" defaultLanguage="$$language$$" hierarchiesSQLEnabled="false" translationRelevant="true" visibility="internal" calculationScenarioType="SCRIPT_BASED" dataCategory="DEFAULT" enforceSqlExecution="false" executionSemantic="UNDEFINED" scriptParametersCaseSensitive="true">
  <descriptions defaultDescription="cv_order_demand_with_filters"/>
  <localVariables/>
  <variableMappings/>
  <informationModelLayout relativeWidthScenario="27"/>
  <dataSources/>
  <calculationViews>
    <calculationView xsi:type="Calculation:SqlScriptView" id="Script_View">
      <descriptions/>
      <viewAttributes>
        <viewAttribute datatype="NVARCHAR" id="NODE_ID" length="32"/>
        <viewAttribute datatype="NVARCHAR" id="GEO_ID" length="22"/>
        <viewAttribute datatype="NVARCHAR" id="GEO_NAME" length="100"/>
        <viewAttribute datatype="INTEGER" id="GEO_FILTER_TYPE"/>
        <viewAttribute datatype="NVARCHAR" id="EQUIP_TYPE" length="22"/>
        <viewAttribute datatype="NVARCHAR" id="EQUIP_NAME" length="100"/>
        <viewAttribute datatype="INTEGER" id="EQUIP_FILTER_TYPE"/>
        <viewAttribute datatype="BIGINT" id="TIME_INTERVAL_ID"/>
        <viewAttribute datatype="BIGINT" id="SEQUENCE"/>
        <viewAttribute datatype="TIMESTAMP" id="START_TIME"/>
        <viewAttribute datatype="TIMESTAMP" id="END_TIME"/>
        <viewAttribute datatype="BIGINT" id="INTER_SECONDS"/>
        <viewAttribute datatype="NVARCHAR" id="OUTPUT_KEY" length="20"/>
        <viewAttribute datatype="INTEGER" id="OUTPUT_VALUE"/>
        <viewAttribute datatype="NVARCHAR" id="UNIT" length="10"/>
      </viewAttributes>
      <calculatedViewAttributes/>
      <definition> 
  
 BEGIN 

     DECLARE Filter_Calflag BIGINT;   
     DECLARE Unit VARCHAR(3); 
     DECLARE ExtQueryAttrGrpId BIGINT;
     DECLARE ext_query_str VARCHAR(2000);
     DECLARE FILTER_CALCULATED_OK INTEGER := 1;
     DECLARE RESOURCE_CATEGORY VARCHAR(20);
     
     -- Get all the needed information:filter info, date offset, unit 
     CALL &quot;sap.tm.trp.db.pipeline::p_prepare_info_for_providers_generic&quot;(shift_filtered_dates,filtered_locations,
          filtered_equiptypes, Filter_Calflag, Unit, ExtQueryAttrGrpId,RESOURCE_CATEGORY);
     
     -- If the filered information are not calculated correctly, then return 
     IF :Filter_Calflag &lt;> :FILTER_CALCULATED_OK THEN 
        RETURN;
     END IF;   
              
                           
     -- DEPOT MANAGER, return LOCATION_ID | EQUIP_TYPE | TIME_INTERVAL_ID | OUTPUT_KEY | OUTPUT_VALUE | UNIT
     -- REGION PLANNER, return REGION_ID | EQUIP_TYPE | TIME_INTERVAL_ID | OUTPUT_KEY | OUTPUT_VALUE | UNIT 
     tmp_out = SELECT t2.RESOURCE_ID, b.GEO_GROUP_ID , c.EQUIP_GROUP_ID, d.TIME_INTERVAL_ID 
              FROM &quot;sap.tm.trp.db.semantic.resource::v_resource_master&quot; AS t2
              INNER JOIN &quot;sap.tm.trp.db.semantic.resource::v_resource_category&quot; TRC
              ON TRC.MAPPING_CODE = T2.EQUITYPE AND TRC.CODE = :RESOURCE_CATEGORY              
              INNER JOIN :filtered_locations b on (b.LOCATION_ID = t2.ON_HIRE_LOC)
              INNER JOIN :filtered_equiptypes c on (c.EQUIP_CODE = t2.RESOURCE_TYPE_CODE)
              CROSS JOIN :shift_filtered_dates d 
              WHERE TO_TIMESTAMP(t2.ON_HIRE_DT) >= d.START_TIMESTAMP
               AND TO_TIMESTAMP(t2.ON_HIRE_DT) &lt; d.END_TIMESTAMP;      

     -- Inlining selecting the resource with extra attribute group
     IF :ExtQueryAttrGrpId > 0 THEN
         ATTR_NODE_ID_LIST = SELECT NODE_ID FROM &quot;sap.tm.trp.db.filter::t_attribute_group_item&quot; 
         WHERE GROUP_ID = :ExtQueryAttrGrpId AND LOGIC_OPERATOR IS NULL ORDER BY SEQUENCE;
         
         CALL &quot;sap.tm.trp.db.stock::p_get_resource_by_attribute_group&quot;(:ExtQueryAttrGrpId, :ATTR_NODE_ID_LIST, ATTR_GROUP_FILTER_RESULT);
         
         tmp_out = SELECT MASTER_TBL.* FROM :tmp_out AS MASTER_TBL
             INNER JOIN :ATTR_GROUP_FILTER_RESULT AS EXT_TBL ON (EXT_TBL.RESID = MASTER_TBL.RESOURCE_ID);
     END IF;
     
     -- do aggregation  
      sd_out = SELECT GEO_GROUP_ID, EQUIP_GROUP_ID, TIME_INTERVAL_ID, COUNT(1) AS QUANTITY
               FROM :tmp_out GROUP BY GEO_GROUP_ID, EQUIP_GROUP_ID, TIME_INTERVAL_ID;
      
      -- we append the sd values as 0 when there is no data from TOR (all selected locations/selected types)                
      car_out =  SELECT DISTINCT a.GEO_GROUP_ID, a.GEO_NAME, a.GEO_FILTER_TYPE, b.EQUIP_GROUP_ID, b.EQUIP_NAME, b.EQUIP_FILTER_TYPE,
                 c.TIME_INTERVAL_ID, c.SEQUENCE, c.START_TIMESTAMP AS START_TIME, c.END_TIMESTAMP AS END_TIME, c.INTER_SECONDS
                 FROM :filtered_locations a , :filtered_equiptypes b, :shift_filtered_dates c;                 
          
      var_out  = SELECT 'ON_HIRE' AS NODE_ID, a.GEO_GROUP_ID AS GEO_ID, a.GEO_NAME, a.GEO_FILTER_TYPE, a.EQUIP_GROUP_ID AS EQUIP_TYPE,  
                 a.EQUIP_NAME, a.EQUIP_FILTER_TYPE, a.TIME_INTERVAL_ID, a.SEQUENCE, a.START_TIME, a.END_TIME,
                 a.INTER_SECONDS, 'SUPPLY' AS OUTPUT_KEY, IFNULL(b.QUANTITY,0) AS OUTPUT_VALUE, :Unit AS UNIT
                 FROM :car_out a 
                 LEFT OUTER JOIN :sd_out b 
                 ON (a.GEO_GROUP_ID = b.GEO_GROUP_ID AND a.EQUIP_GROUP_ID = b.EQUIP_GROUP_ID AND a.TIME_INTERVAL_ID = b.TIME_INTERVAL_ID);
                     
END </definition>
    </calculationView>
  </calculationViews>
  <logicalModel id="Script_View">
    <descriptions/>
    <attributes>
      <attribute id="NODE_ID" order="1">
        <descriptions defaultDescription="DATA_DESC"/>
        <keyMapping columnObjectName="Script_View" columnName="NODE_ID"/>
      </attribute>
      <attribute id="GEO_ID" order="2">
        <descriptions defaultDescription="GEO_ID"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_ID"/>
      </attribute>
      <attribute id="GEO_NAME" order="3">
        <descriptions defaultDescription="GEO_NAME"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_NAME"/>
      </attribute>
      <attribute id="GEO_FILTER_TYPE" order="4">
        <descriptions defaultDescription="GEO_FILTER_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_FILTER_TYPE"/>
      </attribute>
      <attribute id="EQUIP_TYPE" order="5">
        <descriptions defaultDescription="EQUIP_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_TYPE"/>
      </attribute>
      <attribute id="EQUIP_NAME" order="6">
        <descriptions defaultDescription="EQUIP_NAME"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_NAME"/>
      </attribute>
      <attribute id="EQUIP_FILTER_TYPE" order="7">
        <descriptions defaultDescription="EQUIP_FILTER_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_FILTER_TYPE"/>
      </attribute>
      <attribute id="TIME_INTERVAL_ID" order="8">
        <descriptions defaultDescription="SEQUENCE"/>
        <keyMapping columnObjectName="Script_View" columnName="TIME_INTERVAL_ID"/>
      </attribute>
      <attribute id="SEQUENCE" order="9">
        <descriptions defaultDescription="SEQUENCE"/>
        <keyMapping columnObjectName="Script_View" columnName="SEQUENCE"/>
      </attribute>
      <attribute id="START_TIME" order="10">
        <descriptions defaultDescription="START_TIME"/>
        <keyMapping columnObjectName="Script_View" columnName="START_TIME"/>
      </attribute>
      <attribute id="END_TIME" order="11">
        <descriptions defaultDescription="END_TIME"/>
        <keyMapping columnObjectName="Script_View" columnName="END_TIME"/>
      </attribute>
      <attribute id="INTER_SECONDS" order="12">
        <descriptions defaultDescription="INTER_SECONDS"/>
        <keyMapping columnObjectName="Script_View" columnName="INTER_SECONDS"/>
      </attribute>
      <attribute id="OUTPUT_KEY" order="13">
        <descriptions defaultDescription="QUANTITY"/>
        <keyMapping columnObjectName="Script_View" columnName="OUTPUT_KEY"/>
      </attribute>
      <attribute id="OUTPUT_VALUE" order="14">
        <descriptions defaultDescription="OUTPUT_VALUE"/>
        <keyMapping columnObjectName="Script_View" columnName="OUTPUT_VALUE"/>
      </attribute>
      <attribute id="UNIT" order="15">
        <descriptions defaultDescription="UNIT"/>
        <keyMapping columnObjectName="Script_View" columnName="UNIT"/>
      </attribute>
    </attributes>
    <calculatedAttributes/>
    <privateDataFoundation>
      <tableProxies/>
      <joins/>
      <layout>
        <shapes/>
      </layout>
    </privateDataFoundation>
    <baseMeasures/>
    <calculatedMeasures/>
    <restrictedMeasures/>
    <localDimensions/>
  </logicalModel>
  <layout>
    <shapes>
      <shape modelObjectName="Output" modelObjectNameSpace="MeasureGroup">
        <upperLeftCorner x="40" y="85"/>
      </shape>
    </shapes>
  </layout>
</Calculation:scenario>