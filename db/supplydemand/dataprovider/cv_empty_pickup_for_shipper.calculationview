<?xml version="1.0" encoding="UTF-8"?>
<Calculation:scenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Calculation="http://www.sap.com/ndb/BiModelCalculation.ecore" schemaVersion="2.3" id="cv_empty_pickup_for_shipper" applyPrivilegeType="ANALYTIC_PRIVILEGE" checkAnalyticPrivileges="true" defaultClient="$$client$$" defaultLanguage="$$language$$" hierarchiesSQLEnabled="false" translationRelevant="true" visibility="internal" calculationScenarioType="SCRIPT_BASED" dataCategory="DEFAULT" enforceSqlExecution="false" executionSemantic="UNDEFINED" scriptParametersCaseSensitive="true">
  <descriptions defaultDescription="cv_empty_pickup_for_shipper"/>
  <localVariables/>
  <variableMappings/>
  <informationModelLayout relativeWidthScenario="27"/>
  <dataSources/>
  <calculationViews>
    <calculationView xsi:type="Calculation:SqlScriptView" id="Script_View">
      <descriptions/>
      <viewAttributes>
        <viewAttribute datatype="NVARCHAR" id="NODE_ID" length="32"/>
        <viewAttribute datatype="NVARCHAR" id="GEO_ID" length="22"/>
        <viewAttribute datatype="NVARCHAR" id="GEO_NAME" length="100"/>
        <viewAttribute datatype="INTEGER" id="GEO_FILTER_TYPE"/>
        <viewAttribute datatype="NVARCHAR" id="EQUIP_TYPE" length="22"/>
        <viewAttribute datatype="NVARCHAR" id="EQUIP_NAME" length="100"/>
        <viewAttribute datatype="INTEGER" id="EQUIP_FILTER_TYPE"/>
        <viewAttribute datatype="BIGINT" id="TIME_INTERVAL_ID"/>
        <viewAttribute datatype="BIGINT" id="SEQUENCE"/>
        <viewAttribute datatype="TIMESTAMP" id="START_TIME"/>
        <viewAttribute datatype="TIMESTAMP" id="END_TIME"/>
        <viewAttribute datatype="BIGINT" id="INTER_SECONDS"/>
        <viewAttribute datatype="NVARCHAR" id="OUTPUT_KEY" length="22"/>
        <viewAttribute datatype="INTEGER" id="OUTPUT_VALUE"/>
        <viewAttribute datatype="NVARCHAR" id="UNIT" length="10"/>
      </viewAttributes>
      <calculatedViewAttributes/>
      <definition>  
 BEGIN 

     DECLARE Filter_Calflag BIGINT;   
     DECLARE Unit VARCHAR(3); 
     DECLARE ExtQueryAttrGrpId BIGINT;
     DECLARE ext_query_str VARCHAR(2000);  
     DECLARE FILTER_CALCULATED_OK INTEGER := 1;
     DECLARE MIN_TIME TIMESTAMP;
     DECLARE MAX_TIME TIMESTAMP;
     
     DECLARE RESOURCE_CATEGORY VARCHAR(20);
     DECLARE VAL_ITEM_CAT VARCHAR(50);
   --  DECLARE VAL_MOT_CAT  VARCHAR(50);

      DECLARE FLG_ACTIVE INT;  --if need this node result  according to t_tu_category setting
     
     -- Get all the needed information:filter info, date offset, unit 
     CALL &quot;sap.tm.trp.db.pipeline::p_prepare_info_for_providers_generic&quot;(shift_filtered_dates,filtered_locations,
          filtered_equiptypes, Filter_Calflag, Unit, ExtQueryAttrGrpId,RESOURCE_CATEGORY); 
     
     -- If the filered information are not calculated correctly, then return 
     IF :Filter_Calflag &lt;> :FILTER_CALCULATED_OK THEN 
        RETURN;
     END IF;   
     
     
   --  SELECT COUNT(*)  into FLG_ACTIVE from &quot;sap.tm.trp.db.systemmanagement::t_tu_category&quot; a
   --     Where  a.tu_type='MA' and a.active=1;   
        
   --    IF :FLG_ACTIVE = 0 THEN 
    --    RETURN;
   --  END IF; 
     
     
     SELECT  &quot;VALUE&quot;  INTO  VAL_ITEM_CAT from &quot;sap.tm.trp.db.systemmanagement::t_config_cust&quot; where code =:RESOURCE_CATEGORY and KEY = 'ITEM_CAT';
   --  select  VALUE  into VAL_MOT_CAT  from &quot;sap.tm.trp.db.systemmanagement::t_config_cust&quot; where code=:RESOURCE_CATEGORY and KEY='MOT_CAT';
     
     SELECT MIN(START_TIMESTAMP),MAX(END_TIMESTAMP) INTO MIN_TIME, MAX_TIME FROM :shift_filtered_dates;
     
     
     tmp_id =    SELECT t1.DB_KEY AS TU_KEY
                   FROM &quot;sap.tm.trp.db.semantic.order::v_transportation_unit&quot; t1
             INNER JOIN  &quot;sap.tm.trp.db.semantic.order::v_transportation_unit_item&quot; t2 ON (t2.TU_KEY = t1.DB_KEY)
             INNER JOIN &quot;sap.tm.trp.db.semantic.order::v_customer_order&quot; t4 on (t2.REF_TRQ_ROOT_KEY = t4.DB_KEY)             
                  WHERE t1.TOR_CAT = 'TU'
                    AND t2.ITEM_CAT = 'PRD'                    
                    AND t4.TRQ_CAT in ('01','02');
                    
     tmp_stop_info =  
     
                       select A.DB_KEY AS TOR_ITEM_ID, 
                              C.EQUIP_GROUP_ID, 
                              D.SEL_TIME, 
                              A.QUA_PCS_VAL , 
                              A.ITEM_CAT,
                              D.DEPARTURED,
                              RANK() over (PARTITION BY B.TU_KEY ORDER BY E.SEQUENCE ASC) AS START_SEQ,
                              D.LOCATION_ID
                     FROM &quot;sap.tm.trp.db.semantic.order::v_transportation_unit_item&quot; A
               INNER JOIN  &quot;sap.tm.trp.db.semantic.resource::v_resource_category&quot; t6
               ON (A.RESOURCE_CATEGORY = t6.MAPPING_CODE AND t6.CODE = :RESOURCE_CATEGORY)
               INNER JOIN :tmp_id B on A.TU_KEY = B.TU_KEY      
               INNER JOIN :filtered_equiptypes C on (C.EQUIP_CODE = A.RESOURCE_TYPE)
               INNER JOIN &quot;sap.tm.trp.db.semantic.order::v_transportation_unit_stop&quot; D on (D.TU_KEY = A.TU_KEY) 
               INNER JOIN &quot;sap.tm.trp.db.semantic.order::v_transportation_unit_stage&quot; E ON (D.DB_KEY = E.FROM_STOP_KEY)
                    WHERE A.ITEM_CAT =  :VAL_ITEM_CAT
                    --  AND E.MOT_CAT = :VAL_MOT_CAT 
                    --  AND E.PLAN_STATUS ='X'
                      ;
                      
     -- DEPOT MANAGER, return LOCATION_ID | EQUIP_TYPE | TIME_INTERVAL_ID | OUTPUT_KEY | OUTPUT_VALUE | UNIT ..
     -- REGION PLANNER, return REGION_ID | EQUIP_TYPE | TIME_INTERVAL_ID | OUTPUT_KEY | OUTPUT_VALUE | UNIT ..                 
                                 
                      
        tmp_out =
            SELECT  a.TOR_ITEM_ID, a.GEO_GROUP_ID, a.EQUIP_GROUP_ID , d.TIME_INTERVAL_ID, a.QUA_PCS_VAL        
              FROM        
                    (select  A.TOR_ITEM_ID, 
                             B.GEO_GROUP_ID, 
                             A.EQUIP_GROUP_ID, 
                             A.SEL_TIME, 
                             A.QUA_PCS_VAL              
                      from   :tmp_stop_info A
                inner join   :filtered_locations B on (A.LOCATION_ID = B.LOCATION_ID)   
                     where   A.START_SEQ=1 
                       and   A.DEPARTURED = 0
                       and   A.SEL_TIME BETWEEN :MIN_TIME AND :MAX_TIME) a
                       
          CROSS JOIN :shift_filtered_dates d
               WHERE a.SEL_TIME >= d.START_TIMESTAMP 
                 AND a.SEL_TIME &lt; d.END_TIMESTAMP;                                  
                                     
            
      
      -- Apply attribute group filter                       
      IF :ExtQueryAttrGrpId > 0 THEN
          ATTR_NODE_ID_LIST = SELECT NODE_ID FROM &quot;sap.tm.trp.db.filter::t_attribute_group_item&quot; 
                              WHERE GROUP_ID = :ExtQueryAttrGrpId AND LOGIC_OPERATOR IS NULL ORDER BY SEQUENCE;
                              
          CALL &quot;sap.tm.trp.db.filter::p_attribute_group_filter_generate_dynamic&quot;(
              :ExtQueryAttrGrpId, 
              :ATTR_NODE_ID_LIST, 
              ext_query_str
          );
          
          IF :ext_query_str != '' THEN
              EXT_TBL = APPLY_FILTER(&quot;sap.tm.trp.db.semantic.order::v_transportation_unit_item_attributes&quot;, :ext_query_str);
              tmp_out = SELECT MASTER_TBL.* FROM :tmp_out AS MASTER_TBL 
                  INNER JOIN :EXT_TBL AS EXT_TBL ON (EXT_TBL.DB_KEY = MASTER_TBL.TOR_ITEM_ID);
          END IF;
      END IF;
      
      -- aggregation 
      sd_out =  SELECT GEO_GROUP_ID , EQUIP_GROUP_ID , TIME_INTERVAL_ID, SUM(QUA_PCS_VAL) AS QUANTITY  
                FROM :tmp_out
                GROUP BY GEO_GROUP_ID, EQUIP_GROUP_ID, TIME_INTERVAL_ID;              
                
      -- we append the sd values as 0 when there is no data from TOR (all selected locations/selected types)                
      car_out =  SELECT DISTINCT a.GEO_GROUP_ID, a.GEO_NAME, a.GEO_FILTER_TYPE, b.EQUIP_GROUP_ID, b.EQUIP_NAME, b.EQUIP_FILTER_TYPE,
                 c.TIME_INTERVAL_ID, c.SEQUENCE, c.START_TIMESTAMP AS START_TIME, c.END_TIMESTAMP AS END_TIME, c.INTER_SECONDS
                 FROM :filtered_locations a , :filtered_equiptypes b, :shift_filtered_dates c;                  
          
      var_out  = SELECT 'MAIN_CARGO_IN_FROM_ERP' AS NODE_ID, a.GEO_GROUP_ID AS GEO_ID, a.GEO_NAME, a.GEO_FILTER_TYPE, a.EQUIP_GROUP_ID AS EQUIP_TYPE,  
                 a.EQUIP_NAME, a.EQUIP_FILTER_TYPE, a.TIME_INTERVAL_ID, a.SEQUENCE, a.START_TIME, a.END_TIME,
                 a.INTER_SECONDS, 'DEMAND' AS OUTPUT_KEY, IFNULL(b.QUANTITY,0) AS OUTPUT_VALUE, :Unit AS UNIT
                 FROM :car_out a 
                 LEFT OUTER JOIN :sd_out b 
                 ON (a.GEO_GROUP_ID = b.GEO_GROUP_ID AND a.EQUIP_GROUP_ID = b.EQUIP_GROUP_ID AND a.TIME_INTERVAL_ID = b.TIME_INTERVAL_ID);
                     
END </definition>
    </calculationView>
  </calculationViews>
  <logicalModel id="Script_View">
    <descriptions/>
    <attributes>
      <attribute id="NODE_ID" order="1">
        <descriptions defaultDescription="NODE_ID"/>
        <keyMapping columnObjectName="Script_View" columnName="NODE_ID"/>
      </attribute>
      <attribute id="GEO_ID" order="2">
        <descriptions defaultDescription="GEO_ID"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_ID"/>
      </attribute>
      <attribute id="GEO_NAME" order="3">
        <descriptions defaultDescription="GEO_NAME"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_NAME"/>
      </attribute>
      <attribute id="GEO_FILTER_TYPE" order="4">
        <descriptions defaultDescription="GEO_FILTER_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_FILTER_TYPE"/>
      </attribute>
      <attribute id="EQUIP_TYPE" order="5">
        <descriptions defaultDescription="EQUIP_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_TYPE"/>
      </attribute>
      <attribute id="EQUIP_NAME" order="6">
        <descriptions defaultDescription="EQUIP_NAME"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_NAME"/>
      </attribute>
      <attribute id="EQUIP_FILTER_TYPE" order="7">
        <descriptions defaultDescription="EQUIP_FILTER_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_FILTER_TYPE"/>
      </attribute>
      <attribute id="TIME_INTERVAL_ID" order="8">
        <descriptions defaultDescription="TIME_INTERVAL_ID"/>
        <keyMapping columnObjectName="Script_View" columnName="TIME_INTERVAL_ID"/>
      </attribute>
      <attribute id="SEQUENCE" order="9">
        <descriptions defaultDescription="SEQUENCE"/>
        <keyMapping columnObjectName="Script_View" columnName="SEQUENCE"/>
      </attribute>
      <attribute id="START_TIME" order="10">
        <descriptions defaultDescription="START_TIME"/>
        <keyMapping columnObjectName="Script_View" columnName="START_TIME"/>
      </attribute>
      <attribute id="END_TIME" order="11">
        <descriptions defaultDescription="END_TIME"/>
        <keyMapping columnObjectName="Script_View" columnName="END_TIME"/>
      </attribute>
      <attribute id="INTER_SECONDS" order="12">
        <descriptions defaultDescription="INTER_SECONDS"/>
        <keyMapping columnObjectName="Script_View" columnName="INTER_SECONDS"/>
      </attribute>
      <attribute id="OUTPUT_KEY" order="13">
        <descriptions defaultDescription="OUTPUT_KEY"/>
        <keyMapping columnObjectName="Script_View" columnName="OUTPUT_KEY"/>
      </attribute>
      <attribute id="OUTPUT_VALUE" order="14">
        <descriptions defaultDescription="OUTPUT_VALUE"/>
        <keyMapping columnObjectName="Script_View" columnName="OUTPUT_VALUE"/>
      </attribute>
      <attribute id="UNIT" order="15">
        <descriptions defaultDescription="UNIT"/>
        <keyMapping columnObjectName="Script_View" columnName="UNIT"/>
      </attribute>
    </attributes>
    <calculatedAttributes/>
    <privateDataFoundation>
      <tableProxies/>
      <joins/>
      <layout>
        <shapes/>
      </layout>
    </privateDataFoundation>
    <baseMeasures/>
    <calculatedMeasures/>
    <restrictedMeasures/>
    <localDimensions/>
  </logicalModel>
  <layout>
    <shapes>
      <shape modelObjectName="Output" modelObjectNameSpace="MeasureGroup">
        <upperLeftCorner x="40" y="85"/>
      </shape>
    </shapes>
  </layout>
</Calculation:scenario>