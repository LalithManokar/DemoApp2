PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.supplydemand::p_get_execution_result_by_executionid_for_kpi_plan" ( 
	IN IN_EXECUTION_ID BIGINT,
	IN IN_NODE_ID BIGINT,
	OUT OUT_PUT "sap.tm.trp.db.supplydemand::tt_get_execution_result_by_executionid_output"
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "SAP_TM_TRP"
	READS SQL DATA AS
BEGIN

 	DECLARE  ADDREGAT_METHOD_KEY VARCHAR(30) := 'AGGREGATIONMETHOD';
    DECLARE  ADDREGAT_METHOD_SUM_VALUE VARCHAR(30) := 'SUM';
    DECLARE  ADDREGAT_METHOD_MEAN_VALUE VARCHAR(30) := 'MEAN';
    
	 
	SQL1 = SELECT * FROM "sap.tm.trp.db.supplydemand::cv_get_execution_result_by_executionid_base_new"(
	placeholder."$$IN_EXECUTION_ID$$"=>:IN_EXECUTION_ID,placeholder."$$IN_NODE_ID$$"=>:IN_NODE_ID);
         
	OUT_PUT = SELECT T4.LOCATION_ID AS GEO_ID,T4.LOCATION_NAME AS GEO_NAME,
				T4.OUTPUT_KEY,CASE WHEN UCASE(T12.VALUE) = :ADDREGAT_METHOD_MEAN_VALUE THEN  AVG(TO_DOUBLE(T4.OUTPUT_VALUE))
	            ELSE SUM(TO_DOUBLE(T4.OUTPUT_VALUE))  END AS OUTPUT_VALUE ,
	            T4.START_TIME,T4.END_TIME,
	            T4.SEQUENCE,SUM(T4.ALERT_STATUS) AS ALERT_STATUS,T4.OUT_NODE_ID,
	            T4.HAS_DRILLDOWN_FLAG,T4.TIME_INTERVAL,
	            T4.OUT_NODE_NAME,T4.OUT_NODE_NAV_TYPE
			    FROM
			    (
			    	SELECT T1.LOCATION_ID,T1.LOCATION_NAME,
			    			T1.START_TIME,T1.END_TIME,T1.SEQUENCE,
			                T1.OUTPUT_KEY,T1.OUTPUT_VALUE, T1.ALERT_STATUS,
			                T1.OUT_NODE_ID,T1.HAS_DRILLDOWN_FLAG,T1.TIME_INTERVAL,
			                T1.OUT_NODE_NAME,T1.OUT_NODE_NAV_TYPE
			                FROM :SQL1 T1
			    )T4
				LEFT OUTER JOIN "sap.tm.trp.db.pipeline::t_pipeline_node_misc_info" T12 ON (T4.OUT_NODE_ID = T12.NODE_ID AND UCASE(T12.KEY) = :ADDREGAT_METHOD_KEY )
			    GROUP BY T4.LOCATION_ID,T4.LOCATION_NAME,T4.OUTPUT_KEY,T12.VALUE,T4.START_TIME,T4.END_TIME,T4.SEQUENCE,T4.OUT_NODE_ID,
			    T4.HAS_DRILLDOWN_FLAG,T4.TIME_INTERVAL,T4.OUT_NODE_NAME,T4.OUT_NODE_NAV_TYPE
			    ORDER BY T4.LOCATION_ID,T4.OUTPUT_KEY,T4.SEQUENCE;
 
END;