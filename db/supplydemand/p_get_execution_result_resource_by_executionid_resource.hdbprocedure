PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.supplydemand::p_get_execution_result_resource_by_executionid_resource"(
	IN PLAN_ID BIGINT,
	IN PLAN_EXECUTION_ID BIGINT,
	IN TIMEZONE NVARCHAR(50),
  	IN NODE_ID BIGINT,
  	IN RESOURCE_TYPE_CODE VARCHAR(32),
  	IN LOCATION_ID_LIST "sap.tm.trp.db.supplydemand::tt_id_list",
  	OUT OUT_PUT "sap.tm.trp.db.supplydemand::tt_get_execution_result_resource_by_executionid_resource_output"
) 
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER 
DEFAULT SCHEMA "SAP_TM_TRP"
READS SQL DATA
AS
BEGIN

    LOCATION = SELECT NULL AS GEO_ID, ID AS LOCATION_ID, NULL AS GEO_FILTER_TYPE, NULL AS GEO_GROUP_ID, NULL AS GEO_NAME FROM :LOCATION_ID_LIST;
	CALL "sap.tm.trp.db.supplydemand::p_get_supply_demand_result_by_plan_location"(:PLAN_ID, :PLAN_EXECUTION_ID, :TIMEZONE, :LOCATION, SD_RESULT);
	
	CALL "sap.tm.trp.db.supplydemand::p_get_supply_demand_additional"(:NODE_ID,:PLAN_ID, :PLAN_EXECUTION_ID,:LOCATION_ID_LIST,:SD_RESULT,DATASET);

SQL1 =
	SELECT
		T1.RESOURCE_TYPE AS RESOURCE_TYPE_CODE,
		T1.RESOURCE_NAME AS RESOURCE_TYPE_NAME,
		T1.LOCATION_ID AS GEO_ID,
		T1.LOCATION_NAME AS GEO_NAME,
		T1.OUTPUT_KEY,
		T1.OUTPUT_VALUE,
		T1.START_TIME,
		T1.END_TIME,
		T1.SEQUENCE,
		T1.ALERT_STATUS,
		T1.OUT_NODE_ID,
		T1.HAS_DRILLDOWN_FLAG,
		T1.TIME_INTERVAL,
		T1.OUT_NODE_NAME,
		T1.OUT_NODE_NAV_TYPE
	FROM :DATASET T1
	WHERE T1.RESOURCE_TYPE = :RESOURCE_TYPE_CODE
	ORDER BY T1.RESOURCE_TYPE,
	         T1.OUTPUT_KEY,
	         T1.SEQUENCE;

--Re-generate those 0 number records not saved in db	         
SQL2 = 
    SELECT 
       	RESOURCE_TYPE_CODE,
		RESOURCE_TYPE_NAME,
		GEO_ID,
		GEO_NAME,
		CASE  WHEN OUTPUT_KEY = 'DEMAND' 
            	      THEN 'SUPPLY' 
	            ELSE 'DEMAND' END  AS OUTPUT_KEY,
	    0                  AS OUTPUT_VALUE,
		START_TIME,
		END_TIME,
		SEQUENCE,
		ALERT_STATUS,
		OUT_NODE_ID,
		HAS_DRILLDOWN_FLAG,
		TIME_INTERVAL,
		OUT_NODE_NAME,
		OUT_NODE_NAV_TYPE
	FROM :SQL1
	UNION ALL
    SELECT 
       	RESOURCE_TYPE_CODE,
		RESOURCE_TYPE_NAME,
		GEO_ID,
		GEO_NAME,
		OUTPUT_KEY,
		OUTPUT_VALUE,
		START_TIME,
		END_TIME,
		SEQUENCE,
		ALERT_STATUS,
		OUT_NODE_ID,
		HAS_DRILLDOWN_FLAG,
		TIME_INTERVAL,
		OUT_NODE_NAME,
		OUT_NODE_NAV_TYPE
	FROM :SQL1;	         
		
--Summerize quantity those output key and sequence are same    
OUT_PUT = 
    SELECT
        RESOURCE_TYPE_CODE,
		RESOURCE_TYPE_NAME,
		GEO_ID,
		GEO_NAME,
		OUTPUT_KEY,
		SUM(OUTPUT_VALUE) AS OUTPUT_VALUE,
		START_TIME,
		END_TIME,
		SEQUENCE,
		ALERT_STATUS,
		OUT_NODE_ID,
		HAS_DRILLDOWN_FLAG,
		TIME_INTERVAL,
		OUT_NODE_NAME,
		OUT_NODE_NAV_TYPE
	FROM :SQL2 
	GROUP BY
	    RESOURCE_TYPE_CODE,
		RESOURCE_TYPE_NAME,
		GEO_ID,
		GEO_NAME,
		OUTPUT_KEY,
		START_TIME,
		END_TIME,
		SEQUENCE,
		ALERT_STATUS,
		OUT_NODE_ID,
		HAS_DRILLDOWN_FLAG,
		TIME_INTERVAL,
		OUT_NODE_NAME,
		OUT_NODE_NAV_TYPE;

END;
