PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.costmodel::sp_get_transportation_based_cost_info"(
   IN COST_MODEL_ID BIGINT,
   OUT COST_INFO_OUT "sap.tm.trp.db.costmodel::tt_location_based_cost_info"
)
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER 
    DEFAULT SCHEMA "SAP_TM_TRP"
    READS SQL DATA AS 
BEGIN


    SQL_COST_INFO = SELECT T1.COST_DATASET_ID, T1.PRIORITY,'*' AS FROM_LOCATION_NAME, '*' AS TO_LOCATION_NAME,
		T2.TRANSPORTATION_MODE_CODE,
		T2.RESOURCE_TYPE,NULL AS CARRIER_ID,T2.UOM_CODE,T2.COST,T2.WILD_STAR_COUNT
		FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
		--INNER JOIN "sap.tm.trp.db.costmodel::t_distance_based_cost" T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)
		INNER JOIN "sap.tm.trp.db.costmodel::cv_distance_cost_model_resource_type_explode"(PLACEHOLDER."$$IP_COST_DATASET_ID$$"=>0,PLACEHOLDER."$$IP_COST_MODEL_ID$$"=>:COST_MODEL_ID) T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)
		WHERE T1.COST_MODEL_ID = :COST_MODEL_ID
		
		UNION 
		
		SELECT T1.COST_DATASET_ID ,T1.PRIORITY,T2.FROM_LOCATION_NAME, T2.TO_LOCATION_NAME,
		T2.TRANSPORTATION_MODE_CODE,
		T2.RESOURCE_TYPE,T2.CARRIER_ID,T2.UOM_CODE,T2.COST,T2.WILD_STAR_COUNT
		FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
		--INNER JOIN "sap.tm.trp.db.costmodel::t_location_based_cost" T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)
		INNER JOIN "sap.tm.trp.db.costmodel::cv_location_cost_model_resource_type_explode"(PLACEHOLDER."$$IP_COST_DATASET_ID$$"=>0,PLACEHOLDER."$$IP_COST_MODEL_ID$$"=>:COST_MODEL_ID) T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)
		WHERE T1.COST_MODEL_ID = :COST_MODEL_ID;
	
	VALID_CARRIER_LIST_WITH_DATASET_ID = SELECT COST_DATASET_ID,CARRIER_ID
	   FROM "sap.tm.trp.db.costmodel::cv_costmodel_dataset_supported_carriers"(PLACEHOLDER."$$IN_COST_MODEL_ID$$"=>:COST_MODEL_ID) T1;
	
	  VALID_TRANSPORTATION_MEANS_WITH_DATASET_ID = SELECT COST_DATASET_ID,TRANSPORTATION_MODE_CODE 
	   FROM "sap.tm.trp.db.costmodel::cv_costmodel_dataset_supported_transportation_means"(PLACEHOLDER."$$IN_COST_MODEL_ID$$"=>:COST_MODEL_ID);
	   
	      	
	--Append the carrier_id from cost dataset and cost model carrier filter criteria:
	SQL_COST_INFO2 = SELECT T1.COST_DATASET_ID ,T1.PRIORITY,
	 T1.FROM_LOCATION_NAME,T1.TO_LOCATION_NAME,
	T1.TRANSPORTATION_MODE_CODE,
	T1.RESOURCE_TYPE,T2.CARRIER_ID,
	T1.UOM_CODE,T1.COST,
	CASE WHEN T2.CARRIER_ID = '*' THEN T1.WILD_STAR_COUNT + 1  ELSE  T1.WILD_STAR_COUNT END AS WILD_STAR_COUNT
	FROM :SQL_COST_INFO T1
	INNER JOIN :VALID_CARRIER_LIST_WITH_DATASET_ID T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)
	;
	
	 --Using the cost model transportaion filter to do the filter:
		 SQL_COST_INFO3 = 
		 SELECT DISTINCT T1.PRIORITY,T1.FROM_LOCATION_NAME,
		T1.TO_LOCATION_NAME,T1.TRANSPORTATION_MODE_CODE,
		T1.RESOURCE_TYPE,T1.CARRIER_ID,
		T1.UOM_CODE,T1.COST,T1.WILD_STAR_COUNT
		 FROM :SQL_COST_INFO2 T1
		 INNER JOIN :VALID_TRANSPORTATION_MEANS_WITH_DATASET_ID T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID
		 AND (T1.TRANSPORTATION_MODE_CODE = T2.TRANSPORTATION_MODE_CODE 
		      OR T2.TRANSPORTATION_MODE_CODE = '*'
		      OR T1.TRANSPORTATION_MODE_CODE = '*')
		 );
	
	    
	
    --Remove dup info: if there is dup, use the one with min priority:
    COST_INFO_OUT = 
    SELECT T1.PRIORITY,T1.FROM_LOCATION_NAME,T1.TO_LOCATION_NAME,T1.TRANSPORTATION_MODE_CODE,
    T1.RESOURCE_TYPE,T1.CARRIER_ID,T1.UOM_CODE,T1.COST,T1.WILD_STAR_COUNT
    FROM :SQL_COST_INFO3 T1
    INNER JOIN
    (
	    SELECT T3.FROM_LOCATION_NAME,T3.TO_LOCATION_NAME,T3.TRANSPORTATION_MODE_CODE,
	  T3.RESOURCE_TYPE,MIN(T3.PRIORITY) AS MIN_PRIORITY
	 FROM :SQL_COST_INFO3 T3
	  GROUP BY T3.FROM_LOCATION_NAME,T3.TO_LOCATION_NAME,T3.TRANSPORTATION_MODE_CODE,
	  T3.RESOURCE_TYPE
    )T2 ON (T1.FROM_LOCATION_NAME = T2.FROM_LOCATION_NAME 
            AND T1.TO_LOCATION_NAME = T2.TO_LOCATION_NAME
            AND T1.TRANSPORTATION_MODE_CODE = T2.TRANSPORTATION_MODE_CODE 
            AND  T1.RESOURCE_TYPE = T2.RESOURCE_TYPE
            AND T1.PRIORITY = T2.MIN_PRIORITY);
      
        

   
END;