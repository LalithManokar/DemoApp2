PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.costmodel.storagecost::p_get_cost_for_pr"(
	    IN SD_PLAN_ID BIGINT,
        IN RESOURCE_CATEGORY VARCHAR(20),
		IN COST_MODEL_ID INTEGER,
		IN STORAGE_TIME "sap.tm.trp.db.costmodel.storagecost::tt_storage_time",
		IN SD_RESULT "sap.tm.trp.db.costmodel.storagecost::tt_sd_result",
		OUT RESULT "sap.tm.trp.db.costmodel.storagecost::tt_storage_cost_period"
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "SAP_TM_TRP"
AS
BEGIN
      DECLARE TIME_OFFSET BIGINT;
      --get time filter
      CALL "sap.tm.trp.db.costmodel.storagecost::p_get_time_offset"(:SD_PLAN_ID, TIME_OFFSET);

      CALL "sap.tm.trp.db.costmodel.storagecost::p_get_resource_type_teu" (:RESOURCE_CATEGORY,RESOURCE_TYPE_TEU);  
      
      LOCATION_RESOURCE_TYPE_LIST = SELECT DISTINCT LOCATION, RESOURCE_TYPE FROM :SD_RESULT;

	  CALL "sap.tm.trp.db.costmodel.storagecost::p_get_dataset" (:COST_MODEL_ID,:LOCATION_RESOURCE_TYPE_LIST,COST_DATASET_ORIGIN);  
	  
	  CALL "sap.tm.trp.db.costmodel.storagecost::p_get_settlement_stock" (:COST_DATASET_ORIGIN,:SD_RESULT,:RESOURCE_TYPE_TEU,SETTLEMENT_STOCK);  

      CALL "sap.tm.trp.db.costmodel.storagecost::p_calculate_time_based_cost" (:TIME_OFFSET,:STORAGE_TIME,:COST_DATASET_ORIGIN,:RESOURCE_TYPE_TEU,TIME_COST);  
	CALL "sap.tm.trp.db.costmodel.storagecost::p_calculate_quantity_based_cost" (:TIME_OFFSET,:STORAGE_TIME,:SETTLEMENT_STOCK,:COST_DATASET_ORIGIN,:RESOURCE_TYPE_TEU,QUANTITY_COST);  

    RESULT = SELECT LOCATION, RESOURCE_TYPE, START_TIME, END_TIME, SUM(COST) AS COST FROM (
    	SELECT * FROM :TIME_COST UNION ALL SELECT * FROM :QUANTITY_COST
    ) GROUP BY LOCATION, RESOURCE_TYPE, START_TIME, END_TIME ORDER BY LOCATION, RESOURCE_TYPE, START_TIME, END_TIME;
END;
