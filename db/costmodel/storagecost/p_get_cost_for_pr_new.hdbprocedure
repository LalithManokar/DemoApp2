PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.costmodel.storagecost::p_get_cost_for_pr_new" ( 
	    IN SD_PLAN_ID BIGINT,
        IN RESOURCE_CATEGORY VARCHAR(20),
		IN COST_MODEL_ID INTEGER,
	    IN RESOURCE_TYPES_CODE_TEU_COUNT "sap.tm.trp.db.pickupreturn::tt_resource_types_code_teu_count",
		IN STORAGE_TIME "sap.tm.trp.db.costmodel.storagecost::tt_storage_time",
		IN SD_RESULT "sap.tm.trp.db.costmodel.storagecost::tt_sd_result",
		OUT RESULT "sap.tm.trp.db.costmodel.storagecost::tt_storage_cost_period"
	)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "SAP_TM_TRP"
AS
BEGIN
      DECLARE TOTAL_OFFSET BIGINT;
      DECLARE V_TIMEZONE_ID VARCHAR(50);
      DECLARE V_OFFSET_FLAG INTEGER;
      DECLARE V_START_OFFSET BIGINT := 0;
      DECLARE V_TIME_OFFSET BIGINT := 0;
      DECLARE V_CNT INTEGER :=0;
      DECLARE TIME_SETTLE_STOCK INTEGER:=0;
      --get time filter

    IP_RESOURCE_TYPE=SELECT RESOURCE_TYPE_CODE AS RESOURCE_TYPE,TEU_COUNT AS TEU FROM :RESOURCE_TYPES_CODE_TEU_COUNT;
    
    SELECT T3.TIMEZONE_ID , T3.OFFSET_FLAG, (T3.HOUR_START_FROM * 60 + T3.MINUTE_START_FROM) AS START_OFFSET INTO V_TIMEZONE_ID,V_OFFSET_FLAG,V_START_OFFSET
		FROM "sap.tm.trp.db.pipeline::t_plan_model" T1
		INNER JOIN "sap.tm.trp.db.filter::t_filter_group" T2 ON T2.ID = T1.FILTER_GROUP_ID
		INNER JOIN "sap.tm.trp.db.filter::t_time_filter" T3 ON T2.TIME_FILTER_ID = T3.ID
		WHERE T1.ID = :SD_PLAN_ID;
		
		SELECT COUNT(*) INTO V_CNT FROM "sap.tm.trp.db.systemmanagement.user::t_time_zone_mapping" WHERE CODE = :V_TIMEZONE_ID;
		
		IF(:V_CNT>0) THEN
		SELECT TO_INT(SECONDS_BETWEEN(current_utctimestamp,UTCTOLOCAL (current_utctimestamp, :V_TIMEZONE_ID,'platform') )/60) INTO V_TIME_OFFSET
        FROM "sap.tm.trp.db.systemmanagement.user::t_time_zone_mapping" WHERE CODE = :V_TIMEZONE_ID; 
        END IF;
        
        SELECT CASE :V_OFFSET_FLAG WHEN 1 THEN :V_TIME_OFFSET + :V_START_OFFSET ELSE 0 END AS "OFFSET" INTO TOTAL_OFFSET FROM DUMMY;
	      
      LOCATION_RESOURCE_TYPE_LIST = SELECT DISTINCT LOCATION, RESOURCE_TYPE FROM :SD_RESULT;

	  CALL "sap.tm.trp.db.costmodel.storagecost::p_get_dataset"
	    (:COST_MODEL_ID,:LOCATION_RESOURCE_TYPE_LIST,COST_DATASET_ORIGIN);  
	  SELECT COUNT(1) INTO TIME_SETTLE_STOCK FROM :COST_DATASET_ORIGIN WHERE TYPE='QUANTITY';
	  
	  IF(:TIME_SETTLE_STOCK>0) THEN 
	  CALL "sap.tm.trp.db.costmodel.storagecost::p_get_settlement_stock" (:COST_DATASET_ORIGIN,:SD_RESULT,:IP_RESOURCE_TYPE,SETTLEMENT_STOCK);  
      END IF;
      
      CALL "sap.tm.trp.db.costmodel.storagecost::p_calculate_time_based_cost" (:TOTAL_OFFSET,:STORAGE_TIME,:COST_DATASET_ORIGIN,:IP_RESOURCE_TYPE,TIME_COST);  
	CALL "sap.tm.trp.db.costmodel.storagecost::p_calculate_quantity_based_cost" (:TOTAL_OFFSET,:STORAGE_TIME,:SETTLEMENT_STOCK,:COST_DATASET_ORIGIN,:IP_RESOURCE_TYPE,QUANTITY_COST);  

    RESULT = SELECT LOCATION, RESOURCE_TYPE, START_TIME, END_TIME, SUM(COST) AS COST FROM (
    	SELECT * FROM :TIME_COST UNION ALL SELECT * FROM :QUANTITY_COST
    ) GROUP BY LOCATION, RESOURCE_TYPE, START_TIME, END_TIME ORDER BY LOCATION, RESOURCE_TYPE, START_TIME, END_TIME;
END;
