PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.costmodel::sp_query_storage_cost_config"( 
   IN COST_MODEL_ID BIGINT,
   IN LOCATION_EQUIP_INFO "sap.tm.trp.db.costmodel::tt_location_equip_info",
   IN RESOURCE_TYPES_CODE_TEU_COUNT "sap.tm.trp.db.pickupreturn::tt_resource_types_code_teu_count",
   OUT TIMEBASE_COST_CONFIG  "sap.tm.trp.db.costmodel::tt_time_based_cost_info",
   OUT QUABASE_COST_CONFIG "sap.tm.trp.db.costmodel::tt_quantity_based_cost_info"
)
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER 
    DEFAULT SCHEMA "SAP_TM_TRP"
    READS SQL DATA 
    AS
BEGIN

     DECLARE max_timebased_days DOUBLE := 9999;
     DECLARE max_quabased_teudays DOUBLE := 999999999;
     
    -- determine which cost config are used for location&equip type, based on the priority and wild_start_count
    -- one location can only have one cost config                    
  /*  tmp_cost_list =       
      SELECT COST_DATASET_ID, LOCATION_NAME, RESOURCE_TYPE, FREE_POOL_TYPE, START_AT, START_TIME, THRESHOLD_FROM, THRESHOLD_TO,
      PER_DIEM_COST, UOM_CODE, FLAG FROM 
      (
        SELECT COST_DATASET_ID, LOCATION_NAME, RESOURCE_TYPE, FREE_POOL_TYPE, START_AT, START_TIME, THRESHOLD_FROM, THRESHOLD_TO, 
        PER_DIEM_COST, UOM_CODE,FLAG, RANK() OVER (PARTITION BY LOCATION_NAME, RESOURCE_TYPE ORDER BY PRIORITY,WILD_STAR_COUNT) AS RANK 
        FROM 
        (
          ( SELECT T1.PRIORITY, T2.COST_DATASET_ID, T4.LOCATION_NAME, T4.RESOURCE_TYPE, NULL AS FREE_POOL_TYPE, NULL AS START_AT,
            NULL AS START_TIME, T2.THRESHOLD_FROM, T2.THRESHOLD_TO, T2.PER_DIEM_COST, T2.UOM_CODE, T2.WILD_STAR_COUNT, 1 AS FLAG
            FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
            --INNER JOIN "sap.tm.trp.db.costmodel::t_time_based_storage_cost" T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)
            INNER JOIN "sap.tm.trp.db.costmodel::cv_time_cost_model_resource_type_explode"(PLACEHOLDER."$$IP_COST_DATASET_ID$$"=>0,PLACEHOLDER."$$IP_COST_MODEL_ID$$"=>:COST_MODEL_ID) T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)           
            INNER JOIN :LOCATION_EQUIP_INFO T4 ON (T2.LOCATION_NAME = T4.LOCATION_NAME AND T2.RESOURCE_TYPE = T4.RESOURCE_TYPE 
            OR (T2.RESOURCE_TYPE = '*'  AND T2.LOCATION_NAME = '*') OR (T2.LOCATION_NAME = T4.LOCATION_NAME AND T2.RESOURCE_TYPE = '*')
            OR (T2.RESOURCE_TYPE = T4.RESOURCE_TYPE AND T2.LOCATION_NAME = '*'))           
            WHERE T1.COST_MODEL_ID = :COST_MODEL_ID 
          )
          UNION ALL
          ( SELECT T1.PRIORITY, T2.COST_DATASET_ID, T4.LOCATION_NAME,T4.RESOURCE_TYPE, T2.FREE_POOL_TYPE, T2.START_AT,
            T2.START_TIME, T2.THRESHOLD_FROM, T2.THRESHOLD_TO, T2.PER_DIEM_COST,T2.UOM_CODE,T2.WILD_STAR_COUNT, 2 AS FLAG
            FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
            --INNER JOIN "sap.tm.trp.db.costmodel::t_quantity_based_storage_cost" T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)
            INNER JOIN "sap.tm.trp.db.costmodel::cv_quantity_cost_model_resource_type_explode"(PLACEHOLDER."$$IP_COST_DATASET_ID$$"=>0,PLACEHOLDER."$$IP_COST_MODEL_ID$$"=>:COST_MODEL_ID) T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)            
            INNER JOIN :LOCATION_EQUIP_INFO T4 ON (T2.LOCATION_NAME = T4.LOCATION_NAME AND T2.RESOURCE_TYPE = T4.RESOURCE_TYPE 
            OR (T2.RESOURCE_TYPE = '*'  AND T2.LOCATION_NAME = '*') OR (T2.LOCATION_NAME = T4.LOCATION_NAME AND T2.RESOURCE_TYPE = '*')
            OR (T2.RESOURCE_TYPE = T4.RESOURCE_TYPE AND T2.LOCATION_NAME = '*'))               
            WHERE T1.COST_MODEL_ID = :COST_MODEL_ID
          ) 
        )
      ) WHERE RANK = 1; */
    
    --Newly added code starts--
    R1=SELECT T1.PRIORITY, T2.COST_DATASET_ID, NULL AS FREE_POOL_TYPE, NULL AS START_AT,
            NULL AS START_TIME, T2.THRESHOLD_FROM, T2.THRESHOLD_TO, T2.PER_DIEM_COST, T2.UOM_CODE, T2.WILD_STAR_COUNT, 1 AS FLAG,
            T2.LOCATION_NAME, 
            CASE WHEN T2.RESOURCE_TYPE = '*' THEN T2.RESOURCE_TYPE
                    ELSE T3.RESOURCE_TYPE_CODE END AS RESOURCE_TYPE
            , T1.COST_MODEL_ID
            FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
            INNER JOIN 
            (SELECT  COST_DATASET_ID,
				                    LOCATION_NAME, 	                 	                      					
             					CASE WHEN RESOURCE_TYPE = '*' 
             					 		THEN '*'
                					 ELSE REPLACE(RESOURCE_TYPE, '*', '%')
             					END AS RESOURCE_TYPE,
             					THRESHOLD_FROM,
		                 		THRESHOLD_TO,
		                 		UOM_CODE,
		                 		PER_DIEM_COST,                 		
		                 		DATA_SOURCE_CODE,                 	
		                 		WILD_STAR_COUNT,                 		
		                 		LAST_MODIFIED_ON   
      					FROM "sap.tm.trp.db.costmodel::t_time_based_storage_cost") T2
      			ON T1.COST_DATASET_ID = T2.COST_DATASET_ID AND
      			T1.COST_MODEL_ID =:COST_MODEL_ID	     					  
				LEFT OUTER JOIN 
			    :RESOURCE_TYPES_CODE_TEU_COUNT T3
    	        ON T3.RESOURCE_TYPE_CODE LIKE T2.RESOURCE_TYPE;
            
    R2=SELECT R1.PRIORITY, R1.COST_DATASET_ID, T4.LOCATION_NAME, T4.RESOURCE_TYPE, R1.FREE_POOL_TYPE, R1.START_AT, R1.START_TIME, R1.THRESHOLD_FROM, R1.THRESHOLD_TO, R1.PER_DIEM_COST, R1.WILD_STAR_COUNT, R1.FLAG,UOM_CODE FROM :R1 AS R1
            INNER JOIN :LOCATION_EQUIP_INFO T4 
            ON R1.LOCATION_NAME = T4.LOCATION_NAME 
            AND R1.RESOURCE_TYPE = T4.RESOURCE_TYPE
            WHERE R1.COST_MODEL_ID = :COST_MODEL_ID
            UNION ALL 
    SELECT R1.PRIORITY, R1.COST_DATASET_ID, T4.LOCATION_NAME, T4.RESOURCE_TYPE, R1.FREE_POOL_TYPE, R1.START_AT,R1.START_TIME, R1.THRESHOLD_FROM, R1.THRESHOLD_TO, R1.PER_DIEM_COST, R1.WILD_STAR_COUNT, R1.FLAG,UOM_CODE FROM :R1 AS R1
            INNER JOIN :LOCATION_EQUIP_INFO T4 
            ON (R1.RESOURCE_TYPE = '*'  AND R1.LOCATION_NAME = '*') 
            WHERE R1.COST_MODEL_ID = :COST_MODEL_ID
            UNION ALL 
    SELECT R1.PRIORITY, R1.COST_DATASET_ID, T4.LOCATION_NAME, T4.RESOURCE_TYPE, R1.FREE_POOL_TYPE, R1.START_AT, R1.START_TIME, R1.THRESHOLD_FROM, R1.THRESHOLD_TO, R1.PER_DIEM_COST, R1.WILD_STAR_COUNT, R1.FLAG,UOM_CODE FROM :R1 AS R1
            INNER JOIN :LOCATION_EQUIP_INFO T4 
            ON (R1.LOCATION_NAME = T4.LOCATION_NAME AND R1.RESOURCE_TYPE = '*')
            WHERE R1.COST_MODEL_ID = :COST_MODEL_ID
            UNION ALL 
    SELECT R1.PRIORITY, R1.COST_DATASET_ID, T4.LOCATION_NAME, T4.RESOURCE_TYPE, R1.FREE_POOL_TYPE, R1.START_AT, R1.START_TIME, R1.THRESHOLD_FROM, R1.THRESHOLD_TO, R1.PER_DIEM_COST, R1.WILD_STAR_COUNT, R1.FLAG,UOM_CODE FROM :R1 AS R1
            INNER JOIN :LOCATION_EQUIP_INFO T4 
            ON (R1.RESOURCE_TYPE = T4.RESOURCE_TYPE AND R1.LOCATION_NAME = '*')        
			WHERE R1.COST_MODEL_ID = :COST_MODEL_ID;
  
     
    R3=SELECT T1.PRIORITY, T2.COST_DATASET_ID, T2.FREE_POOL_TYPE, T2.START_AT,
            T2.START_TIME, T2.THRESHOLD_FROM, T2.THRESHOLD_TO, T2.PER_DIEM_COST,T2.UOM_CODE,T2.WILD_STAR_COUNT, 2 AS FLAG,
            T2.LOCATION_NAME,
            CASE WHEN T2.RESOURCE_TYPE = '*' THEN T2.RESOURCE_TYPE
                    ELSE T3.RESOURCE_TYPE_CODE END AS RESOURCE_TYPE,
            T1.COST_MODEL_ID
            FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
            INNER JOIN
            (SELECT  COST_DATASET_ID,
				                    LOCATION_NAME, 	                 	                      					
             					CASE WHEN RESOURCE_TYPE = '*' 
             					 		THEN '*'
                					 ELSE REPLACE(RESOURCE_TYPE, '*', '%')
             					END AS RESOURCE_TYPE,
             					THRESHOLD_FROM,
             					FREE_POOL_TYPE,
                 				START_AT,
                 				START_TIME,
		                 		THRESHOLD_TO,
		                 		UOM_CODE,
		                 		PER_DIEM_COST,                 		
		                 		DATA_SOURCE_CODE,                 	
		                 		WILD_STAR_COUNT,                 		
		                 		LAST_MODIFIED_ON   
      					FROM "sap.tm.trp.db.costmodel::t_quantity_based_storage_cost") T2
      		ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID) AND T1.COST_MODEL_ID = :COST_MODEL_ID		     					  
			LEFT OUTER JOIN 
			:RESOURCE_TYPES_CODE_TEU_COUNT T3
    	        ON T3.RESOURCE_TYPE_CODE LIKE T2.RESOURCE_TYPE;
            
        R4=SELECT R1.PRIORITY, R1.COST_DATASET_ID, T4.LOCATION_NAME, T4.RESOURCE_TYPE, R1.FREE_POOL_TYPE, R1.START_AT, R1.START_TIME, R1.THRESHOLD_FROM, R1.THRESHOLD_TO, R1.PER_DIEM_COST, R1.WILD_STAR_COUNT, R1.FLAG,UOM_CODE 
            FROM :R3 AS R1
            INNER JOIN :LOCATION_EQUIP_INFO T4 
            ON R1.LOCATION_NAME = T4.LOCATION_NAME 
            AND R1.RESOURCE_TYPE = T4.RESOURCE_TYPE
            WHERE R1.COST_MODEL_ID = :COST_MODEL_ID
            UNION ALL 
        SELECT R1.PRIORITY, R1.COST_DATASET_ID, T4.LOCATION_NAME, T4.RESOURCE_TYPE, R1.FREE_POOL_TYPE, R1.START_AT,R1.START_TIME, R1.THRESHOLD_FROM, R1.THRESHOLD_TO, R1.PER_DIEM_COST, R1.WILD_STAR_COUNT, R1.FLAG,UOM_CODE 
            FROM :R3 AS R1
            INNER JOIN :LOCATION_EQUIP_INFO T4 
            ON (R1.RESOURCE_TYPE = '*'  AND R1.LOCATION_NAME = '*') 
            WHERE R1.COST_MODEL_ID = :COST_MODEL_ID
            UNION ALL 
        SELECT R1.PRIORITY, R1.COST_DATASET_ID, T4.LOCATION_NAME, T4.RESOURCE_TYPE, R1.FREE_POOL_TYPE, R1.START_AT, R1.START_TIME, R1.THRESHOLD_FROM, R1.THRESHOLD_TO, R1.PER_DIEM_COST, R1.WILD_STAR_COUNT, R1.FLAG,UOM_CODE
            FROM :R3 AS R1
            INNER JOIN :LOCATION_EQUIP_INFO T4 
            ON (R1.LOCATION_NAME = T4.LOCATION_NAME AND R1.RESOURCE_TYPE = '*')
            WHERE R1.COST_MODEL_ID = :COST_MODEL_ID
            UNION ALL 
        SELECT R1.PRIORITY, R1.COST_DATASET_ID, T4.LOCATION_NAME, T4.RESOURCE_TYPE, R1.FREE_POOL_TYPE, R1.START_AT, R1.START_TIME, R1.THRESHOLD_FROM, R1.THRESHOLD_TO, R1.PER_DIEM_COST, R1.WILD_STAR_COUNT, R1.FLAG,UOM_CODE 
            FROM :R3 AS R1
            INNER JOIN :LOCATION_EQUIP_INFO T4 
            ON (R1.RESOURCE_TYPE = T4.RESOURCE_TYPE AND R1.LOCATION_NAME = '*')        
			WHERE R1.COST_MODEL_ID = :COST_MODEL_ID;
            
	 tmp_cost_list =       
      SELECT DISTINCT COST_DATASET_ID, LOCATION_NAME, RESOURCE_TYPE, FREE_POOL_TYPE, START_AT, START_TIME, THRESHOLD_FROM, THRESHOLD_TO,
      PER_DIEM_COST, UOM_CODE, FLAG FROM 
      (
        SELECT COST_DATASET_ID, LOCATION_NAME, RESOURCE_TYPE, FREE_POOL_TYPE, START_AT, START_TIME, THRESHOLD_FROM, THRESHOLD_TO, 
        PER_DIEM_COST, UOM_CODE,FLAG, RANK() OVER (PARTITION BY LOCATION_NAME, RESOURCE_TYPE ORDER BY PRIORITY,WILD_STAR_COUNT) AS RANK 
        FROM 
        (
         ( SELECT * FROM :R2)
          UNION ALL
          ( SELECT * FROM :R4) 
        )
      ) WHERE RANK = 1; 
--Newly added code ends--
    -- Time based rating table
    TIMEBASE_COST_CONFIG = 
          SELECT 0 AS PRIORITY, 
                 RESOURCE_TYPE, 
                 LOCATION_NAME, 
                 THRESHOLD_FROM, 
                 IFNULL(THRESHOLD_TO, :max_timebased_days) AS THRESHOLD_TO, 
                 CASE WHEN UPPER(T1.UOM_CODE)='TEU' THEN  T1.PER_DIEM_COST * T2.TEU_COUNT ELSE T1.PER_DIEM_COST END AS PER_DIEM_COST, 
                 CASE WHEN UPPER(T1.UOM_CODE)='TEU' THEN 'PCS' ELSE T1.UOM_CODE END AS UOM_CODE,
                 0 AS WILD_STAR_COUNT                    
            FROM :tmp_cost_list T1 
      		INNER JOIN :RESOURCE_TYPES_CODE_TEU_COUNT T2 ON (T1.RESOURCE_TYPE = T2.RESOURCE_TYPE_CODE) 
			WHERE T1.FLAG = 1; 

       
    -- Quantity based cost config info      
    QUABASE_COST_CONFIG = 
			SELECT 0 AS PRIORITY,
                   RESOURCE_TYPE,
                   LOCATION_NAME, 
                   FREE_POOL_TYPE, 
                   START_AT, 
                   START_TIME, 
                   CASE WHEN UPPER(T1.UOM_CODE)='TEU' THEN  THRESHOLD_FROM/T2.TEU_COUNT ELSE THRESHOLD_FROM END  AS THRESHOLD_FROM, 
                   CASE WHEN UPPER(T1.UOM_CODE)='TEU' THEN  IFNULL(THRESHOLD_TO/T2.TEU_COUNT,:max_quabased_teudays) ELSE IFNULL(THRESHOLD_TO,:max_quabased_teudays) END AS THRESHOLD_TO, 
                   CASE WHEN UPPER(T1.UOM_CODE)='TEU' THEN  T1.PER_DIEM_COST * T2.TEU_COUNT ELSE T1.PER_DIEM_COST END AS PER_DIEM_COST, 
                   CASE WHEN UPPER(T1.UOM_CODE)='TEU' THEN  'PCS' ELSE T1.UOM_CODE END AS UOM_CODE,
                   0 AS WILD_STAR_COUNT
			FROM :tmp_cost_list T1
			INNER JOIN :RESOURCE_TYPES_CODE_TEU_COUNT T2 ON (T1.RESOURCE_TYPE = T2.RESOURCE_TYPE_CODE) 
            WHERE FLAG = 2;  
         
END;
