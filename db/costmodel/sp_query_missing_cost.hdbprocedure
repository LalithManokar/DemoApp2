PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.costmodel::sp_query_missing_cost"(
   IN COST_MODEL_ID BIGINT,
   IN COST_REQUEST "sap.tm.trp.db.costmodel::tt_query_location_based_cost_info",
   OUT MISSING_FILTER TABLE (CARRIER_ID NVARCHAR(20), TRANSPORTATION_MODE_CODE NVARCHAR(20)),
   OUT DATASET_CONNECTION_INFO  "sap.tm.trp.db.costmodel::tt_cost_dataset_connection_info_new",
   OUT MISSING_COST TABLE(
       FROM_LOCATION_NAME VARCHAR(200),
       TO_LOCATION_NAME VARCHAR(200),
       TRANSPORTATION_MODE_CODE NVARCHAR(20),
       RESOURCE_TYPE NVARCHAR(20),
       RESOURCE_CATEGORY NVARCHAR(20),
       CARRIER_ID NVARCHAR(20),
       COST_DATASET_ID VARCHAR(500)
   )
)
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER 
    DEFAULT SCHEMA "SAP_TM_TRP"
    READS SQL DATA 
    AS
BEGIN

    DECLARE COUNT INTEGER;
    DECLARE DATASET_DISTANCE_BASED_COST VARCHAR(50) = 'DISTANCE_BASED_COST';
    DECLARE DATASET_LOCATION_BASED_COST VARCHAR(50) = 'LOCATION_BASED_COST';

    DATASET_IDS = 
    SELECT T1.COST_DATASET_ID AS ID 
    FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
    INNER JOIN "sap.tm.trp.db.costmodel::t_cost_dataset" T2
    ON T1.COST_DATASET_ID = T2.ID
    WHERE T1.COST_MODEL_ID = :COST_MODEL_ID
    AND T2.COST_TYPE_CODE IN (:DATASET_DISTANCE_BASED_COST, :DATASET_LOCATION_BASED_COST);
	
	RESOURCE_TYPES = SELECT DISTINCT T1.RESOURCE_TYPE_CODE, FIRST_VALUE(T2.EQUI_TYPE ORDER BY T2.EQUI_TYPE) AS CATEGORY
                     FROM "sap.tm.trp.db.semantic.resource::v_resource_type_with_category" T1
                     INNER JOIN "sap.tm.trp.db.semantic.resource::v_resource_type" T2
                     ON (T1.RESOURCE_TYPE_CODE = T2.RESOURCE_TYPE_CODE)
                     INNER JOIN "sap.tm.trp.db.costmodel::v_cost_model" T3
                     ON (T1.RESOURCE_CATEGORY = T3.RESOURCE_CATEGORY)
                     WHERE T3.ID = :COST_MODEL_ID
                     GROUP BY T1.RESOURCE_TYPE_CODE;
	
    CALL "sap.tm.trp.db.costmodel::sp_get_connection_info_of_dataset_new"(:COST_MODEL_ID,:DATASET_IDS, DATASET_CONNECTION_INFO);
   
    VALID_CARRIER_LIST_WITH_DATASET_ID = SELECT COST_DATASET_ID,CARRIER_ID
    FROM "sap.tm.trp.db.costmodel::cv_costmodel_dataset_supported_carriers"(PLACEHOLDER."$$IN_COST_MODEL_ID$$"=>:COST_MODEL_ID) T1;
   
    VALID_TRANSPORTATION_MEANS_WITH_DATASET_ID = SELECT COST_DATASET_ID,TRANSPORTATION_MODE_CODE 
    FROM "sap.tm.trp.db.costmodel::cv_costmodel_dataset_supported_transportation_means"(PLACEHOLDER."$$IN_COST_MODEL_ID$$"=>:COST_MODEL_ID);
    
    VALID_MTR_CARRIER_DATASET = SELECT C.COST_DATASET_ID, CARRIER_ID, TRANSPORTATION_MODE_CODE
    FROM :VALID_CARRIER_LIST_WITH_DATASET_ID AS C
    INNER JOIN :VALID_TRANSPORTATION_MEANS_WITH_DATASET_ID AS T
    ON C.COST_DATASET_ID = T.COST_DATASET_ID
    INNER JOIN :DATASET_IDS AS D
    ON C.COST_DATASET_ID = D.ID;
    
    MISSING_FILTER = SELECT T1.CARRIER_ID, T1.TRANSPORTATION_MODE_CODE
    FROM
    (SELECT DISTINCT CARRIER_ID, TRANSPORTATION_MODE_CODE
    FROM :COST_REQUEST) AS T1
    LEFT OUTER JOIN (
    SELECT DISTINCT CARRIER_ID, TRANSPORTATION_MODE_CODE
    FROM :VALID_MTR_CARRIER_DATASET) AS T2
    ON (T1.TRANSPORTATION_MODE_CODE = T2.TRANSPORTATION_MODE_CODE OR T2.TRANSPORTATION_MODE_CODE = '*')
    AND (T1.CARRIER_ID = T2.CARRIER_ID OR T2.CARRIER_ID = '*')
    WHERE T2.CARRIER_ID IS NULL;
    
    SELECT COUNT(*) INTO COUNT FROM :MISSING_FILTER;
    
    IF COUNT = 0 THEN
    
        -- Check distance based cost first
        MISSING_COST_DISTANCE_BASED =
        SELECT T1.FROM_LOCATION_NAME,T1.TO_LOCATION_NAME,T1.TRANSPORTATION_MODE_CODE,
        T1.RESOURCE_TYPE,T1.CARRIER_ID
        FROM :COST_REQUEST T1
        LEFT OUTER JOIN
        (
            SELECT T2.COST_DATASET_ID,'*' AS FROM_LOCATION_NAME, '*' AS TO_LOCATION_NAME,
            T2.TRANSPORTATION_MODE_CODE,T2.RESOURCE_TYPE,T3.CARRIER_ID
            FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
            --INNER JOIN "sap.tm.trp.db.costmodel::t_distance_based_cost" T2 
            INNER JOIN "sap.tm.trp.db.costmodel::cv_distance_cost_model_resource_type_explode"(PLACEHOLDER."$$IP_COST_DATASET_ID$$"=>0,PLACEHOLDER."$$IP_COST_MODEL_ID$$"=>:COST_MODEL_ID) T2
            ON T1.COST_DATASET_ID = T2.COST_DATASET_ID
            INNER JOIN :VALID_CARRIER_LIST_WITH_DATASET_ID T3
            ON T1.COST_DATASET_ID = T3.COST_DATASET_ID
            INNER JOIN :VALID_TRANSPORTATION_MEANS_WITH_DATASET_ID T4
            ON T1.COST_DATASET_ID = T4.COST_DATASET_ID
            AND (T2.TRANSPORTATION_MODE_CODE = T4.TRANSPORTATION_MODE_CODE 
                OR T2.TRANSPORTATION_MODE_CODE = '*'
                OR T4.TRANSPORTATION_MODE_CODE = '*')
            WHERE T1.COST_MODEL_ID = :COST_MODEL_ID
        )T2 ON (
            (T1.TRANSPORTATION_MODE_CODE = T2.TRANSPORTATION_MODE_CODE OR T2.TRANSPORTATION_MODE_CODE = '*')
            AND (T1.RESOURCE_TYPE = T2.RESOURCE_TYPE OR T2.RESOURCE_TYPE = '*')
            AND (T1.CARRIER_ID = T2.CARRIER_ID OR T2.CARRIER_ID = '*')
        )
        WHERE T2.FROM_LOCATION_NAME IS NULL;
    	  
    	  
        MISSING_COST_TMP =
        SELECT T1.FROM_LOCATION_NAME,T1.TO_LOCATION_NAME,T1.TRANSPORTATION_MODE_CODE,
        T1.RESOURCE_TYPE,T1.CARRIER_ID
        FROM :MISSING_COST_DISTANCE_BASED T1
        LEFT OUTER JOIN
        (
            SELECT T1.COST_DATASET_ID,T2.FROM_LOCATION_NAME,T2.TO_LOCATION_NAME,
            T2.TRANSPORTATION_MODE_CODE,T2.RESOURCE_TYPE,T3.CARRIER_ID
            FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
            --INNER JOIN "sap.tm.trp.db.costmodel::t_location_based_cost" T2 
            INNER JOIN "sap.tm.trp.db.costmodel::cv_location_cost_model_resource_type_explode"(PLACEHOLDER."$$IP_COST_DATASET_ID$$"=>0,PLACEHOLDER."$$IP_COST_MODEL_ID$$"=>:COST_MODEL_ID) T2 
            ON T1.COST_DATASET_ID = T2.COST_DATASET_ID
            INNER JOIN :VALID_CARRIER_LIST_WITH_DATASET_ID T3
            ON T1.COST_DATASET_ID = T3.COST_DATASET_ID
            INNER JOIN :VALID_TRANSPORTATION_MEANS_WITH_DATASET_ID T4
            ON T1.COST_DATASET_ID = T4.COST_DATASET_ID
            AND (T2.TRANSPORTATION_MODE_CODE = T4.TRANSPORTATION_MODE_CODE 
              OR T2.TRANSPORTATION_MODE_CODE = '*'
              OR T4.TRANSPORTATION_MODE_CODE = '*')
            WHERE T1.COST_MODEL_ID = :COST_MODEL_ID
        )T2 ON (
            T1.FROM_LOCATION_NAME = T2.FROM_LOCATION_NAME 
            AND T1.TO_LOCATION_NAME = T2.TO_LOCATION_NAME
            AND (T1.TRANSPORTATION_MODE_CODE = T2.TRANSPORTATION_MODE_CODE OR T2.TRANSPORTATION_MODE_CODE = '*')
            AND (T1.RESOURCE_TYPE = T2.RESOURCE_TYPE OR T2.RESOURCE_TYPE = '*')
            AND (T1.CARRIER_ID = T2.CARRIER_ID OR T2.CARRIER_ID = '*')
        )
        WHERE T2.FROM_LOCATION_NAME IS NULL;
        
        MISSING_COST_DATASET = SELECT T1.FROM_LOCATION_NAME, T1.TO_LOCATION_NAME, T1.TRANSPORTATION_MODE_CODE,
        T1.RESOURCE_TYPE,T1.CARRIER_ID, T2.COST_DATASET_ID
        FROM :MISSING_COST_TMP AS T1
        INNER JOIN :VALID_MTR_CARRIER_DATASET AS T2
        ON (T1.TRANSPORTATION_MODE_CODE = T2.TRANSPORTATION_MODE_CODE 
        OR T2.TRANSPORTATION_MODE_CODE = '*')
        AND (T1.CARRIER_ID = T2.CARRIER_ID OR T2.CARRIER_ID = '*');
        
        AGGREGATED_MTR_CARRIER_DATASET = SELECT CARRIER_ID, TRANSPORTATION_MODE_CODE,
        STRING_AGG(COST_DATASET_ID, ',') AS COST_DATASET_ID
        FROM (
            SELECT DISTINCT TRANSPORTATION_MODE_CODE, CARRIER_ID, COST_DATASET_ID
            FROM :MISSING_COST_DATASET
        )
        GROUP BY CARRIER_ID, TRANSPORTATION_MODE_CODE;
        
        MISSING_COST = SELECT T1.FROM_LOCATION_NAME, T1.TO_LOCATION_NAME, T1.TRANSPORTATION_MODE_CODE,
        T1.RESOURCE_TYPE,R.CATEGORY AS RESOURCE_CATEGORY, T1.CARRIER_ID, T2.COST_DATASET_ID
        FROM (
        SELECT DISTINCT FROM_LOCATION_NAME, TO_LOCATION_NAME, TRANSPORTATION_MODE_CODE,
        RESOURCE_TYPE, CARRIER_ID
        FROM :MISSING_COST_DATASET) AS T1
        INNER JOIN :AGGREGATED_MTR_CARRIER_DATASET AS T2
        ON T1.TRANSPORTATION_MODE_CODE = T2.TRANSPORTATION_MODE_CODE
        AND T1.CARRIER_ID = T2.CARRIER_ID
        INNER JOIN :RESOURCE_TYPES AS R
        ON T1.RESOURCE_TYPE = R.RESOURCE_TYPE_CODE;
    
    END IF;
    
END;