PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.costmodel::sp_get_handling_based_cost_info_new" ( 
   IN COST_MODEL_ID BIGINT,
   IN RESOURCE_TYPES_CODE_TEU_COUNT "sap.tm.trp.db.pickupreturn::tt_resource_types_code_teu_count",
   OUT COST_INFO_OUT "sap.tm.trp.db.costmodel::tt_handling_based_cost_info"
)
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER 
    DEFAULT SCHEMA "SAP_TM_TRP"
    READS SQL DATA AS 
BEGIN

    SQL_COST_INFO = 
        
        SELECT T1.COST_DATASET_ID ,T1.PRIORITY,T2.LOCATION_NAME, T2.HANDLING_TYPE,
		T2.FROM_MOT,T2.TO_MOT,
		CASE WHEN T2.RESOURCE_TYPE = '*' THEN T2.RESOURCE_TYPE
                    ELSE T3.RESOURCE_TYPE_CODE END AS RESOURCE_TYPE,
		T2.UOM_CODE,T2.COST,T2.WILD_STAR_COUNT
		FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
		INNER JOIN (SELECT COST_DATASET_ID,
             					LOCATION_NAME,
             					CASE WHEN RESOURCE_TYPE = '*' 
             					 		THEN '*'
                					 ELSE REPLACE(RESOURCE_TYPE, '*', '%')
             					END AS RESOURCE_TYPE,
             					HANDLING_TYPE,
             					FROM_MOT,
             					TO_MOT,
             					UOM_CODE,
             					COST,
             					DATA_SOURCE_CODE,
             					WILD_STAR_COUNT,
             					LAST_MODIFIED_ON FROM "sap.tm.trp.db.costmodel::t_handling_based_cost") T2 
            ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID) AND T1.COST_MODEL_ID = :COST_MODEL_ID
-- 		LEFT OUTER JOIN (SELECT RESOURCE_TYPE_CODE FROM "sap.tm.trp.db.semantic.resource::v_resource_type") T3
		LEFT OUTER JOIN :RESOURCE_TYPES_CODE_TEU_COUNT T3
    	    ON T3.RESOURCE_TYPE_CODE LIKE T2.RESOURCE_TYPE; 
-- 		WHERE T1.COST_MODEL_ID = :COST_MODEL_ID;
	
	  VALID_TRANSPORTATION_MEANS_WITH_DATASET_ID = SELECT T1.COST_DATASET_ID , '*' AS TRANSPORTATION_MODE_CODE 
        FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset"  T1
        	   LEFT OUTER JOIN "sap.tm.trp.db.costmodel::t_cost_model_transportation_means" T2 ON (T1.COST_MODEL_ID = T2.COST_MODEL_ID 
        	   AND T1.COST_DATASET_ID = T2.COST_DATASET_ID)
        	   WHERE T1.COST_MODEL_ID = :COST_MODEL_ID AND T2.COST_MODEL_ID IS NULL
        UNION ALL 
        SELECT COST_DATASET_ID , TRANSPORTATION_MODE_CODE
        	    FROM "sap.tm.trp.db.costmodel::t_cost_model_transportation_means" T2
        	    WHERE T2.COST_MODEL_ID = :COST_MODEL_ID;
	   
	  --Using the cost model transportaion filter to do the filter:
		 SQL_COST_INFO2 = 
		 SELECT DISTINCT T1.PRIORITY,T1.LOCATION_NAME,
		T1.HANDLING_TYPE,T1.FROM_MOT,
		T1.TO_MOT,T1.RESOURCE_TYPE,
		T1.UOM_CODE,T1.COST,T1.WILD_STAR_COUNT
		 FROM :SQL_COST_INFO T1
		 INNER JOIN :VALID_TRANSPORTATION_MEANS_WITH_DATASET_ID T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID
		 AND (T1.FROM_MOT = T2.TRANSPORTATION_MODE_CODE 
		      OR T2.TRANSPORTATION_MODE_CODE = '*'
		      OR T1.FROM_MOT = '*'
		      OR T1.FROM_MOT = '')
		 )
		 INNER JOIN :VALID_TRANSPORTATION_MEANS_WITH_DATASET_ID T3 ON (T1.COST_DATASET_ID = T3.COST_DATASET_ID
		 AND (T1.TO_MOT = T2.TRANSPORTATION_MODE_CODE 
		      OR T3.TRANSPORTATION_MODE_CODE = '*'
		      OR T1.TO_MOT = '*'
		      OR T1.TO_MOT = '')
		 );
		
    --If there is duplication, use the one with highest priority (the highest priority is with smallest PRIORITY value)
    COST_INFO_OUT = 
    SELECT T1.PRIORITY,T1.LOCATION_NAME,T1.HANDLING_TYPE,T1.FROM_MOT,T1.TO_MOT,
    T1.RESOURCE_TYPE,T1.UOM_CODE,T1.COST,T1.WILD_STAR_COUNT
    FROM :SQL_COST_INFO2 T1
    INNER JOIN
    (
	    SELECT T3.LOCATION_NAME,T3.HANDLING_TYPE,T3.FROM_MOT,T3.TO_MOT,
	  T3.RESOURCE_TYPE,MIN(T3.PRIORITY) AS MIN_PRIORITY
	 FROM :SQL_COST_INFO2 T3
	  GROUP BY T3.LOCATION_NAME,T3.HANDLING_TYPE,T3.FROM_MOT,T3.TO_MOT,
	  T3.RESOURCE_TYPE
    )T2 ON (T1.LOCATION_NAME = T2.LOCATION_NAME 
            AND T1.HANDLING_TYPE = T2.HANDLING_TYPE
            AND T1.FROM_MOT = T2.FROM_MOT 
            AND T1.TO_MOT = T2.TO_MOT 
            AND T1.RESOURCE_TYPE = T2.RESOURCE_TYPE
            AND T1.PRIORITY = T2.MIN_PRIORITY);
      
        

   
END;