PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.costmodel::sp_get_storage_based_cost_info"(
   IN COST_MODEL_ID BIGINT,
   OUT QUANTITY_COST_INFO_OUT "sap.tm.trp.db.costmodel::tt_quantity_based_cost_info",
   OUT TIME_COST_INFO_OUT "sap.tm.trp.db.costmodel::tt_time_based_cost_info"
)
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER 
    DEFAULT SCHEMA "SAP_TM_TRP"
    READS SQL DATA AS 
BEGIN

    SQL_QUANTITY_COST_INFO = SELECT T1.PRIORITY,T2.RESOURCE_TYPE,T2.LOCATION_NAME, T2.FREE_POOL_TYPE,
		T2.START_AT,T2.START_TIME,T2.THRESHOLD_FROM,T2.THRESHOLD_TO,T2.PER_DIEM_COST,
		T2.UOM_CODE,T2.WILD_STAR_COUNT
		FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
		--INNER JOIN "sap.tm.trp.db.costmodel::t_quantity_based_storage_cost" T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)		
		INNER JOIN "sap.tm.trp.db.costmodel::cv_quantity_cost_model_resource_type_explode"(PLACEHOLDER."$$IP_COST_DATASET_ID$$"=>0,PLACEHOLDER."$$IP_COST_MODEL_ID$$"=>:COST_MODEL_ID) T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)
		WHERE T1.COST_MODEL_ID = :COST_MODEL_ID;
		
	SQL_TIME_COST_INFO = SELECT T1.PRIORITY,T2.RESOURCE_TYPE,T2.LOCATION_NAME,
	    T2.THRESHOLD_FROM,T2.THRESHOLD_TO,T2.PER_DIEM_COST,
		T2.UOM_CODE,T2.WILD_STAR_COUNT
		FROM "sap.tm.trp.db.costmodel::t_cost_model_dataset" T1
		--INNER JOIN "sap.tm.trp.db.costmodel::t_time_based_storage_cost" T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)
		INNER JOIN "sap.tm.trp.db.costmodel::cv_time_cost_model_resource_type_explode"(PLACEHOLDER."$$IP_COST_DATASET_ID$$"=>0,PLACEHOLDER."$$IP_COST_MODEL_ID$$"=>:COST_MODEL_ID) T2 ON (T1.COST_DATASET_ID = T2.COST_DATASET_ID)
		WHERE T1.COST_MODEL_ID = :COST_MODEL_ID;
		
    
    QUANTITY_COST_INFO_OUT = 
    SELECT T1.PRIORITY,T1.RESOURCE_TYPE,T1.LOCATION_NAME,T1.FREE_POOL_TYPE,T1.START_AT,
    T1.START_TIME,T1.THRESHOLD_FROM,T1.THRESHOLD_TO,T1.PER_DIEM_COST,T1.UOM_CODE,T1.WILD_STAR_COUNT
    FROM :SQL_QUANTITY_COST_INFO T1
    INNER JOIN
    (
	    SELECT T3.RESOURCE_TYPE,T3.LOCATION_NAME,T3.FREE_POOL_TYPE,
	    T3.START_AT,T3.START_TIME,T3.THRESHOLD_FROM,
	    MIN(T3.PRIORITY) AS MIN_PRIORITY
	    FROM :SQL_QUANTITY_COST_INFO T3
	    GROUP BY T3.RESOURCE_TYPE,T3.LOCATION_NAME,T3.FREE_POOL_TYPE,T3.START_AT,
	  T3.START_TIME,T3.THRESHOLD_FROM
    )T2 ON (T1.RESOURCE_TYPE = T2.RESOURCE_TYPE 
            AND T1.LOCATION_NAME = T2.LOCATION_NAME
            --AND T1.FREE_POOL_TYPE = T2.FREE_POOL_TYPE 
            --AND T1.START_AT = T2.START_AT 
           -- AND T1.START_TIME = T2.START_TIME
            AND T1.THRESHOLD_FROM = T2.THRESHOLD_FROM 
            AND T1.PRIORITY = T2.MIN_PRIORITY);
            
    TIME_COST_INFO_OUT = 
    SELECT T1.PRIORITY,T1.RESOURCE_TYPE,T1.LOCATION_NAME,
    T1.THRESHOLD_FROM,T1.THRESHOLD_TO,T1.PER_DIEM_COST,T1.UOM_CODE,T1.WILD_STAR_COUNT
    FROM :SQL_TIME_COST_INFO T1
    INNER JOIN
    (
	    SELECT T3.RESOURCE_TYPE,T3.LOCATION_NAME,T3.THRESHOLD_FROM,
	    MIN(T3.PRIORITY) AS MIN_PRIORITY
	    FROM :SQL_TIME_COST_INFO T3
	    GROUP BY T3.RESOURCE_TYPE,T3.LOCATION_NAME,T3.THRESHOLD_FROM
    )T2 ON (T1.RESOURCE_TYPE = T2.RESOURCE_TYPE 
            AND T1.LOCATION_NAME = T2.LOCATION_NAME
            AND T1.THRESHOLD_FROM = T2.THRESHOLD_FROM 
            AND T1.PRIORITY = T2.MIN_PRIORITY);
      
        

   
END;