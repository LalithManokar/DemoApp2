PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.systemmanagement::p_check_location_filter_authorization"(
    IN LOCATION_FILTER_ID "sap.tm.trp.db.filter::tt_locationfilter_id",
    OUT HAVE_AUTHORIZATION_FLAG SMALLINT
)
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER 
    DEFAULT SCHEMA "SAP_TM_TRP"
    READS SQL DATA
    AS
BEGIN
      --DECLARE VAR_USER_NAME VARCHAR(60);
      DECLARE I_COUNT INTEGER;
      --DECLARE USER_TYPE_ADMIN INTEGER :=99;
      --DECLARE VAR_USER_TYPE INTEGER;
      DECLARE HAS_AUTHORIZATION_FLAG TINYINT; 
       --SELECT USERNAME into VAR_USER_NAME
      --FROM "sap.tm.trp.db.systemmanagement.user::cv_get_username";
      
      --SELECT USER_TYPE_ID INTO VAR_USER_TYPE
     --FROM "sap.tm.trp.db.systemmanagement.user::t_user"
     --WHERE USERNAME = :VAR_USER_NAME;
     call "sap.tm.trp.db.systemmanagement::p_check_location_full_authorization" (
		 	HAVE_AUTHORIZATION_FLAG => HAS_AUTHORIZATION_FLAG
		 );
      --IF :VAR_USER_TYPE = :USER_TYPE_ADMIN THEN
      IF :HAS_AUTHORIZATION_FLAG = 1 THEN
     	 HAVE_AUTHORIZATION_FLAG := 1;
     ELSE
        SELECT COUNT(1) INTO I_COUNT
	      FROM :LOCATION_FILTER_ID  T1
	      LEFT OUTER JOIN "sap.tm.trp.db.systemmanagement::cv_getlocationfilters_of_user" T2 ON (T2.LOCATION_FILTER_ID = T1.ID)
	      WHERE T2.LOCATION_FILTER_ID IS NULL;
	      
	      IF I_COUNT >0 THEN
	      	HAVE_AUTHORIZATION_FLAG := 0;
	      ELSE
	        HAVE_AUTHORIZATION_FLAG := 1;
	      END IF;
     END IF;
      
      

      

END;