procedure "SAP_TM_TRP"."sap.tm.trp.db.systemmanagement.locking::p_lock_acquire_force2" (               
    in i_object_type varchar(50), -- TODO: Where are object types stored? As constants/enum in service layer?
    in i_object_id nvarchar(32), -- TODO: Double-check that this data type is OK
    in i_user_id varchar(22), -- TODO: Double-check data type. Does not support usernames with special characters? 
    in i_token varchar(200), -- TODO: Would a session id really be that long, i.e. is 200 really necessary?
    out o_message varchar(200),
    out o_user_id varchar(22), -- TODO: Double-check data type. does not support usernames with special characters?
    out o_timestamp timestamp
    ) 
language sqlscript
sql security invoker 
default schema "SAP_TM_TRP"
as
/**
 * Takes over the lock of an object using provided user ID and token. 
 *
 * No check for matching user, token or timeout is performed. The action should
 * always succeed.
 * Returns: - a message indicating success
 *          - the new user who owns the lock
 *          - the timestamp of the newly acquired lock
 **/
begin
    declare v_timestamp      timestamp := current_utctimestamp;
    declare v_timeout        int       := 20; -- 20 seconds
    declare v_msg_success    char(18)  := 'MSG_SUCCESS_STATUS';

    -- Use upsert to insert or update.
    -- If below where clause is true (token match or timout), UPSERT will update the lock with new user, token and timestamp
    -- If below where clause is false, UPSERT will insert a new record. This always succeeds because only the key is used for comparison.
    -- For full UPSERT docu see https://go.sap.corp/upsert
    upsert  "sap.tm.trp.db.systemmanagement.locking::t_lock"(
            object_type, object_id, user_id, token, timestamp)
    values( :i_object_type, :i_object_id, :i_user_id, :i_token, :v_timestamp)
    where   object_type = :i_object_type
    and     object_id = :i_object_id;

    -- Return success
    o_user_id   := :i_user_id;
    o_timestamp := :v_timestamp;
    o_message   := :v_msg_success;
end;