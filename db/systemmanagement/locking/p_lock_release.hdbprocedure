procedure "SAP_TM_TRP"."sap.tm.trp.db.systemmanagement.locking::p_lock_release" (               
    in i_object_type varchar(50), -- TODO: Where are object types stored? As constants/enum in service layer?
    in i_object_id nvarchar(32), -- TODO: Double-check that this data type is OK
    in i_user_id varchar(22), -- TODO: Double-check data type. Does not support usernames with special characters? 
    in i_token varchar(200), -- TODO: Would a session id really be that long, i.e. is 200 really necessary?
    out o_message varchar(200),
    out o_owner varchar(22), -- TODO: Double-check data type. Does not support usernames with special characters? 
    out o_timestamp timestamp
    ) 
language sqlscript
sql security invoker 
default schema "SAP_TM_TRP"
as
/**
 * Tries to release the lock of an object using the provided token. 
 *
 * Locks for an object are identified by the token. To implement user-level 
 * locking, simply use the username as token. To implement session-level 
 * locking, use a session ID as token.
 * Returns: - a message indicating success or failure
 *          - the resulting owner: null if successfully released, 
 *                                 original user ID if failed to release
 *          - the resulting timestamp: null if successfully released,
 *                                     original timestamp if failed to release
 **/
begin
    declare v_timestamp          timestamp     := current_utctimestamp;
    declare v_timeout		 	 int           := 20; -- 20 seconds
    declare v_lock_user_id       varchar(22);  
    declare v_lock_token         varchar(200);  
    declare v_lock_timestamp     timestamp;
    declare v_msg_success_status varchar(18)   := 'MSG_SUCCESS_STATUS';
    declare v_msg_err_locked     char(14)      := 'MSG_ERR_LOCKED';

    -- Alternative option is to use a cursor, which does not throw not-found errors and allows to test cursor::notfound instead.
    declare exit handler for sql_error_code 1299 -- No data found, means not locked
    begin
        -- Object not locked, return success messsage. TODO: Should return warning message instead?
        o_message   := :v_msg_success_status;
        o_owner     := null;
        o_timestamp := null;
    end;

    -- Get lock. Throws error 1299, no data found, if no matching entry found.
    select  lo.user_id, lo.token, lo.timestamp
    into    v_lock_user_id, v_lock_token, v_lock_timestamp
    from    "sap.tm.trp.db.systemmanagement.locking::t_lock" lo
    where   lo.object_type = :i_object_type
    and     lo.object_id   = :i_object_id
    for update of lo.object_type, lo.object_id, lo.token, lo.timestamp; 

    -- Check user, token and timestamp
    if  :v_lock_user_id = :i_user_id and :v_lock_token = :i_token then
        -- Was locked by self. Delete entry to release, return success. Ignore timestamp.
        delete from "sap.tm.trp.db.systemmanagement.locking::t_lock"
        where   object_type = :i_object_type
        and     object_id   = :i_object_id;
        o_message   := :v_msg_success_status;
        o_owner     := null;
        o_timestamp := null;
    elseif seconds_between(:v_lock_timestamp, :v_timestamp) > :v_timeout then -- TODO: read threshold from customizing
        -- Was locked with different user or token, but timeout. Do nothing, return success.
        o_message   := :v_msg_success_status; -- TODO: Return warning message instead?
        o_owner     := null;
        o_timestamp := null;
    else
        -- Is locked with different user or token and no timeout. Do nothing, return error.
        o_message   := :v_msg_err_locked;
        o_owner     := :v_lock_user_id;
        o_timestamp := :v_lock_timestamp;
    end if;
end;