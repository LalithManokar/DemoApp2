PROCEDURE "SAP_TM_TRP"."sap.tm.trp.db.movingstock::sp_moving_stock_active_resource_map_freight_order" (
IN LOCATION_FILTER_ID BIGINT,
IN EQUIP_FILTER_ID BIGINT,
IN START_DATE_TIME TIMESTAMP,
IN END_DATE_TIME TIMESTAMP,
IN TIME_FILTER_BY NVARCHAR(255),
IN LOCATION NVARCHAR(20),
IN EQUIPMENT_TYPE VARCHAR(10),
IN RESOURCE_CATEGORY VARCHAR(50),
IN XMIN DOUBLE,
IN XMAX DOUBLE,
IN YMIN DOUBLE,
IN YMAX DOUBLE,
IN MAP_LEVEL INT,
IN SEARCH_TEXT NVARCHAR(1000),
OUT OUT_ACTIVE_RESOURCE_MAP "sap.tm.trp.db.movingstock::tt_active_resource_map_fo_info",
OUT GIS_TYPE VARCHAR(10),
OUT OUT_LOCATIONS_XPOS_YPOS_INVALID  "sap.tm.trp.db.pipeline::tt_location_info_list" 
 ) 
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
DEFAULT SCHEMA "SAP_TM_TRP"
AS
BEGIN
/***************************** 
	Write your procedure logic 
 *****************************/
 DECLARE SEARCH_TEXT_IN NVARCHAR(1000);
GIS_TYPE:='POINT';

CV_DATA = 
SELECT 
DOCUMENT,
DOCUMENT_TYPE,
SCHEDULE_ID,
VOYAGE,
DEPARTURE_TIME,
LAST_LOCATION,
DESTINATION_LOCATION,
ARRIVAL_TIME,
STOCK,
NEXT_PLANNED_LOCATION,
VESSEL_ID
 FROM
"_SYS_BIC"."sap.tm.trp.db.movingstock/cv_freight_booking_moving_stock"(
placeholder."$$LOCATION_FILTER_ID$$"=>:LOCATION_FILTER_ID,
placeholder."$$EQUIP_FILTER_ID$$"=>:EQUIP_FILTER_ID,
placeholder."$$START_DATE_TIME$$"=>:START_DATE_TIME,
placeholder."$$END_DATE_TIME$$"=>:END_DATE_TIME,
placeholder."$$TIME_FILTER_BY$$"=>:TIME_FILTER_BY,
placeholder."$$LOCATION$$"=>:LOCATION,
placeholder."$$EQUIPMENT_TYPE$$"=>:EQUIPMENT_TYPE,
placeholder."$$RESOURCE_CATEGORY$$"=>:RESOURCE_CATEGORY
);

IF LENGTH(:SEARCH_TEXT)>0 THEN
	SEARCH_TEXT_IN:=LOWER('%'||:SEARCH_TEXT||'%');
	
CV_DATA = SELECT * 
		  FROM :CV_DATA
		  WHERE 
		  LOWER("DOCUMENT") LIKE :SEARCH_TEXT_IN 
		  OR  LOWER("DOCUMENT_TYPE") LIKE :SEARCH_TEXT_IN 
		  OR  LOWER("SCHEDULE_ID") LIKE :SEARCH_TEXT_IN   
		  OR  LOWER("VOYAGE") LIKE :SEARCH_TEXT_IN 
		  OR  LOWER("LAST_LOCATION") LIKE :SEARCH_TEXT_IN  
		  OR  LOWER("DESTINATION_LOCATION") LIKE :SEARCH_TEXT_IN
		  OR  LOWER("VESSEL_ID") LIKE :SEARCH_TEXT_IN;

END IF;

OUT_LOCATIONS_XPOS_YPOS_INVALID = 
SELECT T2.ID AS LOCATION_ID,T2.NAME AS LOCATION_NAME,T2.XPOS,T2.YPOS
FROM :CV_DATA T1
INNER JOIN "sap.tm.trp.db.semantic.location::v_all_location" T2 
ON T2.NAME = T1.LAST_LOCATION
WHERE (T2.XPOS IS NULL OR T2.YPOS IS NULL) OR (ABS(T2.XPOS) + ABS(T2.YPOS) =0);


OUT_ACTIVE_RESOURCE_MAP = 
SELECT 
		T1.DOCUMENT,
		T1.SCHEDULE_ID,
		T1.VOYAGE,
		T1.LAST_LOCATION,
		T1.NEXT_PLANNED_LOCATION,
		TO_TIMESTAMP(T1.DEPARTURE_TIME) AS DEPARTURE_TIME,      
		T2.XPOS AS LATITUDE,
		T2.YPOS AS LONGITUDE,
		T1.VESSEL_ID		
FROM :CV_DATA T1
INNER JOIN "sap.tm.trp.db.semantic.location::v_all_location" T2 
ON T2.NAME = T1.LAST_LOCATION
WHERE (T2.XPOS IS NOT NULL AND T2.YPOS IS NOT NULL 
AND ABS(T2.XPOS) + ABS(T2.YPOS) >0) AND (T2.XPOS BETWEEN :XMIN AND :XMAX) AND (T2.YPOS BETWEEN :YMIN AND :YMAX);
END;
