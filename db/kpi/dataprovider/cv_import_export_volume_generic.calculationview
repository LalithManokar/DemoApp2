<?xml version="1.0" encoding="UTF-8"?>
<Calculation:scenario xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:Calculation="http://www.sap.com/ndb/BiModelCalculation.ecore" schemaVersion="2.3" id="cv_import_export_volume_generic" applyPrivilegeType="ANALYTIC_PRIVILEGE" checkAnalyticPrivileges="true" defaultClient="crossClient" defaultLanguage="$$language$$" hierarchiesSQLEnabled="false" translationRelevant="true" visibility="internal" calculationScenarioType="SCRIPT_BASED" dataCategory="DEFAULT" enforceSqlExecution="false" executionSemantic="UNDEFINED" scriptParametersCaseSensitive="true">
  <descriptions defaultDescription="cv_order_demand_with_filters"/>
  <localVariables/>
  <variableMappings/>
  <informationModelLayout relativeWidthScenario="27"/>
  <dataSources/>
  <calculationViews>
    <calculationView xsi:type="Calculation:SqlScriptView" id="Script_View">
      <descriptions/>
      <viewAttributes>
        <viewAttribute datatype="NVARCHAR" id="NODE_ID" length="32"/>
        <viewAttribute datatype="NVARCHAR" id="GEO_ID" length="22"/>
        <viewAttribute datatype="NVARCHAR" id="GEO_NAME" length="100"/>
        <viewAttribute datatype="INTEGER" id="GEO_FILTER_TYPE"/>
        <viewAttribute datatype="NVARCHAR" id="EQUIP_TYPE" length="22"/>
        <viewAttribute datatype="NVARCHAR" id="EQUIP_NAME" length="100"/>
        <viewAttribute datatype="INTEGER" id="EQUIP_FILTER_TYPE"/>
        <viewAttribute datatype="BIGINT" id="TIME_INTERVAL_ID"/>
        <viewAttribute datatype="BIGINT" id="SEQUENCE"/>
        <viewAttribute datatype="TIMESTAMP" id="START_TIME"/>
        <viewAttribute datatype="TIMESTAMP" id="END_TIME"/>
        <viewAttribute datatype="BIGINT" id="INTER_SECONDS"/>
        <viewAttribute datatype="NVARCHAR" id="OUTPUT_KEY" length="20"/>
        <viewAttribute datatype="INTEGER" id="OUTPUT_VALUE"/>
        <viewAttribute datatype="NVARCHAR" id="UNIT" length="10"/>
      </viewAttributes>
      <calculatedViewAttributes/>
      <definition> 
  
 BEGIN 
     DECLARE Filter_Calflag BIGINT;   
     DECLARE Unit VARCHAR(3); 
     DECLARE ExtQueryAttrGrpId BIGINT; 
     DECLARE FILTER_CALCULATED_OK INTEGER := 1;
     DECLARE START_TIME TIMESTAMP;
     DECLARE END_TIME TIMESTAMP;   
     DECLARE ResourceCategory VARCHAR(20);
     DECLARE VAL_ITEM_CAT VARCHAR(50);

     -- Get all the needed information:filter info, date offset, unit 
     CALL &quot;SAP_TM_TRP&quot;.&quot;sap.tm.trp.db.pipeline::p_prepare_info_for_providers_generic&quot;(shift_filtered_dates,filtered_locations,
          filtered_equiptypes, Filter_Calflag, Unit, ExtQueryAttrGrpId, ResourceCategory);
     
     -- If the filered information are not calculated correctly, then return 
     IF :Filter_Calflag &lt;> :FILTER_CALCULATED_OK THEN 
        RETURN;
     END IF;        
    
    
     SELECT  &quot;VALUE&quot;  INTO  VAL_ITEM_CAT from &quot;sap.tm.trp.db.systemmanagement::t_config_cust&quot; where code =:ResourceCategory and KEY = 'ITEM_CAT';
     SELECT MIN(START_TIMESTAMP),MAX(END_TIMESTAMP) INTO START_TIME, END_TIME FROM :shift_filtered_dates;
     
     
     export_volume =        
            SELECT t2.GEO_GROUP_ID,t0.EQUIP_GROUP_ID, t4.TIME_INTERVAL_ID, SUM(t1.QUA_PCS_VAL) AS EXPORT_QUANTITY
              FROM :filtered_equiptypes t0 
        INNER JOIN &quot;sap.tm.trp.db.semantic.order::v_transportation_unit_item&quot; t1 
                ON (t1.RESOURCE_TYPE = t0.EQUIP_CODE AND t1.ITEM_CAT = :VAL_ITEM_CAT)
        INNER JOIN &quot;sap.tm.trp.db.semantic.resource::v_resource_category&quot; t6
                ON (t1.RESOURCE_CATEGORY = t6.MAPPING_CODE AND t6.CODE = :ResourceCategory)        
        INNER JOIN &quot;sap.tm.trp.db.semantic.order::v_transportation_unit_all&quot; t5 
                ON t5.DB_KEY = t1.TU_KEY 
        INNER JOIN &quot;sap.tm.trp.db.semantic.order::v_transportation_unit_stop&quot; t3 
                ON (t3.DB_KEY = t1.FROM_STOP_KEY)
        INNER JOIN :filtered_locations t2 on (t2.LOCATION_ID = t3.LOCATION_ID) 
        CROSS JOIN :shift_filtered_dates t4
             WHERE TO_TIMESTAMP(t3.SEL_TIME) BETWEEN t4.START_TIMESTAMP AND t4.END_TIMESTAMP
               AND t5.MOVEMENT_CAT &lt;> 'RP' AND t5.LIFECYCLE NOT IN ('00','05')
          GROUP BY t2.GEO_GROUP_ID,t0.EQUIP_GROUP_ID, t4.TIME_INTERVAL_ID;
                
     import_volume =
            SELECT t2.GEO_GROUP_ID,t0.EQUIP_GROUP_ID, t4.TIME_INTERVAL_ID, SUM(t1.QUA_PCS_VAL) AS IMPORT_QUANTITY
              FROM :filtered_equiptypes t0 
        INNER JOIN &quot;sap.tm.trp.db.semantic.order::v_transportation_unit_item&quot; t1 
                ON (t1.RESOURCE_TYPE = t0.EQUIP_CODE AND t1.ITEM_CAT = :VAL_ITEM_CAT)
        INNER JOIN &quot;sap.tm.trp.db.semantic.resource::v_resource_category&quot; t6
                ON (t1.RESOURCE_CATEGORY = t6.MAPPING_CODE AND t6.CODE = :ResourceCategory)        
        INNER JOIN &quot;sap.tm.trp.db.semantic.order::v_transportation_unit_all&quot; t5 
                ON t5.DB_KEY = t1.TU_KEY   
        INNER JOIN &quot;sap.tm.trp.db.semantic.order::v_transportation_unit_stop&quot; t3 
                ON (t3.DB_KEY = t1.TO_STOP_KEY)
        INNER JOIN :filtered_locations t2 on (t2.LOCATION_ID = t3.LOCATION_ID) 
        CROSS JOIN :shift_filtered_dates t4
             WHERE TO_TIMESTAMP(t3.SEL_TIME) BETWEEN t4.START_TIMESTAMP AND t4.END_TIMESTAMP
               AND t5.MOVEMENT_CAT &lt;> 'RP' AND t5.LIFECYCLE NOT IN ('00','05')
          GROUP BY t2.GEO_GROUP_ID,t0.EQUIP_GROUP_ID, t4.TIME_INTERVAL_ID;     
               
     
     
     
  
      -- we append the output values as 0 when there is no data (all selected locations/selected types)                
      car_out =  SELECT DISTINCT a.GEO_GROUP_ID, a.GEO_NAME, a.GEO_FILTER_TYPE, b.EQUIP_GROUP_ID, b.EQUIP_NAME, b.EQUIP_FILTER_TYPE,
                 c.TIME_INTERVAL_ID, c.SEQUENCE, c.START_TIMESTAMP AS START_TIME, c.END_TIMESTAMP AS END_TIME, c.INTER_SECONDS
                 FROM :filtered_locations a , :filtered_equiptypes b, :shift_filtered_dates c;                  
          
      var_out  = SELECT 'IMPORT_EXPORT' AS NODE_ID, a.GEO_GROUP_ID AS GEO_ID, a.GEO_NAME, a.GEO_FILTER_TYPE, a.EQUIP_GROUP_ID AS EQUIP_TYPE,  
                 a.EQUIP_NAME, a.EQUIP_FILTER_TYPE, a.TIME_INTERVAL_ID, a.SEQUENCE, a.START_TIME, a.END_TIME, a.INTER_SECONDS, 
                 'QUANTITY' AS OUTPUT_KEY, IFNULL(b.IMPORT_QUANTITY,0) - IFNULL(c.EXPORT_QUANTITY,0) AS OUTPUT_VALUE, :Unit AS UNIT
                 FROM :car_out a 
                 LEFT OUTER JOIN :import_volume b                   
                 ON (a.GEO_GROUP_ID = b.GEO_GROUP_ID AND a.EQUIP_GROUP_ID = b.EQUIP_GROUP_ID AND a.TIME_INTERVAL_ID = b.TIME_INTERVAL_ID)
                 LEFT OUTER JOIN :export_volume c
                 ON (a.GEO_GROUP_ID = c.GEO_GROUP_ID AND a.EQUIP_GROUP_ID = c.EQUIP_GROUP_ID AND a.TIME_INTERVAL_ID = c.TIME_INTERVAL_ID);

                     
END </definition>
    </calculationView>
  </calculationViews>
  <logicalModel id="Script_View">
    <descriptions/>
    <attributes>
      <attribute id="NODE_ID" order="1">
        <descriptions defaultDescription="DATA_DESC"/>
        <keyMapping columnObjectName="Script_View" columnName="NODE_ID"/>
      </attribute>
      <attribute id="GEO_ID" order="2">
        <descriptions defaultDescription="GEO_ID"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_ID"/>
      </attribute>
      <attribute id="GEO_NAME" hidden="false" order="3">
        <descriptions defaultDescription="GEO_NAME"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_NAME"/>
      </attribute>
      <attribute id="GEO_FILTER_TYPE" hidden="false" order="4">
        <descriptions defaultDescription="GEO_FILTER_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="GEO_FILTER_TYPE"/>
      </attribute>
      <attribute id="EQUIP_TYPE" order="5">
        <descriptions defaultDescription="EQUIP_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_TYPE"/>
      </attribute>
      <attribute id="EQUIP_NAME" hidden="false" order="6">
        <descriptions defaultDescription="EQUIP_NAME"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_NAME"/>
      </attribute>
      <attribute id="EQUIP_FILTER_TYPE" hidden="false" order="7">
        <descriptions defaultDescription="EQUIP_FILTER_TYPE"/>
        <keyMapping columnObjectName="Script_View" columnName="EQUIP_FILTER_TYPE"/>
      </attribute>
      <attribute id="TIME_INTERVAL_ID" order="8">
        <descriptions defaultDescription="SEQUENCE"/>
        <keyMapping columnObjectName="Script_View" columnName="TIME_INTERVAL_ID"/>
      </attribute>
      <attribute id="SEQUENCE" hidden="false" order="9">
        <descriptions defaultDescription="SEQUENCE"/>
        <keyMapping columnObjectName="Script_View" columnName="SEQUENCE"/>
      </attribute>
      <attribute id="START_TIME" hidden="false" order="10">
        <descriptions defaultDescription="START_TIME"/>
        <keyMapping columnObjectName="Script_View" columnName="START_TIME"/>
      </attribute>
      <attribute id="END_TIME" hidden="false" order="11">
        <descriptions defaultDescription="END_TIME"/>
        <keyMapping columnObjectName="Script_View" columnName="END_TIME"/>
      </attribute>
      <attribute id="INTER_SECONDS" hidden="false" order="12">
        <descriptions defaultDescription="INTER_SECONDS"/>
        <keyMapping columnObjectName="Script_View" columnName="INTER_SECONDS"/>
      </attribute>
      <attribute id="OUTPUT_KEY" order="13">
        <descriptions defaultDescription="QUANTITY"/>
        <keyMapping columnObjectName="Script_View" columnName="OUTPUT_KEY"/>
      </attribute>
      <attribute id="OUTPUT_VALUE" order="14">
        <descriptions defaultDescription="OUTPUT_VALUE"/>
        <keyMapping columnObjectName="Script_View" columnName="OUTPUT_VALUE"/>
      </attribute>
      <attribute id="UNIT" order="15">
        <descriptions defaultDescription="UNIT"/>
        <keyMapping columnObjectName="Script_View" columnName="UNIT"/>
      </attribute>
    </attributes>
    <calculatedAttributes/>
    <privateDataFoundation>
      <tableProxies/>
      <joins/>
      <layout>
        <shapes/>
      </layout>
    </privateDataFoundation>
    <baseMeasures/>
    <calculatedMeasures/>
    <restrictedMeasures/>
    <localDimensions/>
  </logicalModel>
  <layout>
    <shapes>
      <shape modelObjectName="Output" modelObjectNameSpace="MeasureGroup">
        <upperLeftCorner x="40" y="85"/>
      </shape>
    </shapes>
  </layout>
</Calculation:scenario>