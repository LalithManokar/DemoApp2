PROCEDURE "SAP_TM_ROUTING"."sap.tm.trp.routing.db.path::p_calculate_basic_connection_cost_by_id" (
    IN network_code NVARCHAR(50),
    IN connection_id "sap.tm.trp.routing.db.common::tt_id",
    OUT cost TABLE(id BIGINT, transport_cost DOUBLE, currency NVARCHAR(10), distance DOUBLE, duration DOUBLE),
    OUT return_code INTEGER,
    OUT message "sap.tm.trp.routing.db.common::tt_message"
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   DEFAULT SCHEMA "SAP_TM_ROUTING"
   READS SQL DATA AS
BEGIN

   DECLARE msg_params TABLE(PLACEHOLDER INTEGER, VALUE NVARCHAR(100));
   DECLARE network_id BIGINT;
   DECLARE cost_model_id BIGINT;
   DECLARE resource_type NVARCHAR(20);
   DECLARE currency NVARCHAR(10);

	DECLARE path_usage CONSTANT VARCHAR(10) = 'PATH';
   -- Check whether the network code exist or not
    DECLARE EXIT HANDLER FOR SQL_ERROR_CODE 1299
    BEGIN
        msg_params = SELECT 0 AS PLACEHOLDER, :network_code AS VALUE FROM DUMMY;
        CALL "sap.tm.trp.routing.db.common::p_get_text"('MSG_NETWORK_CODE_NOT_EXIST', :msg_params, 'E', message);
        log = SELECT * FROM :message;
        return_code = 1;
    END;
   
    return_code = 0;
   -- Check for the existence of network id
	SELECT id INTO network_id FROM "sap.tm.trp.routing.db.path::t_network_model"
	WHERE code = :network_code;
	
   CALL "sap.tm.trp.routing.db.path::p_get_network_attr"(:network_id, :path_usage, cost_model_id, resource_type);

   -- Check whether cost model exists
	IF :cost_model_id IS NULL THEN
	    return_code = 1;
	    msg_params = SELECT 0 AS PLACEHOLDER, :cost_model_id AS VALUE FROM DUMMY;
	    CALL "sap.tm.trp.routing.db.common::p_get_text"('MSG_COST_MODEL_NOT_CONFIGURED', :msg_params, 'E', message);
	    log = SELECT * FROM :message;
	    RETURN;
	END IF;
	
	-- Check whether cost model exists
	IF :resource_type IS NULL OR :resource_type = '' THEN
	    return_code = 1;
	    msg_params = SELECT 0 AS PLACEHOLDER, :cost_model_id AS VALUE FROM DUMMY;
	    CALL "sap.tm.trp.routing.db.common::p_get_text"('MSG_BASE_RESOURCE_TYPE_NOT_CONFIGURED', :msg_params, 'E', message);
	    log = SELECT * FROM :message;
	    RETURN;
	END IF;
    
   -- Fetch currency info
   CALL "sap.tm.trp.db.costmodel::sp_cost_model_get"(:cost_model_id, currency_info);
   
   -- CURRENCY CODE MUST EXIST!!!
   SELECT currency_code INTO currency
   FROM :currency_info;
   
    path_id = SELECT 0 AS id FROM DUMMY WHERE 1 <> 1;
    
    CALL "sap.tm.trp.routing.db.dataset::p_get_transport_cost"(
       :cost_model_id,
       :resource_type,
       :path_id,
       :connection_id,
       :path_cost,
       :connection_cost
    ); 
    
    cost = SELECT c1.id, transport_cost, :currency AS currency, distance, duration
    FROM :connection_cost c1
    INNER JOIN "sap.tm.trp.routing.db.dataset::t_connection" c2
    ON c1.id = c2.id;
    
END