PROCEDURE "SAP_TM_ROUTING"."sap.tm.trp.routing.db.path::p_query_basic_connection"(
	IN network_model_id BIGINT, 
	IN from_location NVARCHAR(50),
	IN to_location NVARCHAR(50),
	IN mtr NVARCHAR(10),
	OUT connection "sap.tm.trp.routing.db.dataset::tt_connection_out", 
	OUT connection_carrier "sap.tm.trp.routing.db.dataset::tt_connection_carrier"
)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "SAP_TM_ROUTING"
	READS SQL DATA
AS
BEGIN
	DECLARE dataset_id BIGINT;
	DECLARE count INTEGER;
	DECLARE SOURCE_MANUAL CHAR := 'M';
	DECLARE TYPE_CONNECTION CHAR := 'C';
	DECLARE VIEW_TYPE_FULL CHAR := 'F';
	
	-- Ignore data not found exception
    -- Client check whether result is empty or not
	DECLARE EXIT HANDLER FOR SQL_ERROR_CODE 1299
    BEGIN
    END;
    
	SELECT dataset_id
	INTO dataset_id
	FROM "sap.tm.trp.routing.db.path::t_network_model"
	WHERE id = :network_model_id;
	
	CALL "sap.tm.trp.routing.db.path::p_query_composite_path"(
		network_model_id=>:network_model_id,
		view_type=>:VIEW_TYPE_FULL,
		from_location=>'',
		to_location=>'',
    	mtr=>'',
		paths=>composite_path, 
		path_connection=>composite_path_connection); 
		

    connection_id = SELECT DISTINCT basic_path_id AS id
	FROM :composite_path_connection AS c
    WHERE path_type = :TYPE_CONNECTION 
    AND (:from_location IS NULL OR :from_location = '' OR c.from_location = :from_location)
    AND (:to_location IS NULL OR :to_location = '' OR c.to_location = :to_location)
    AND (:mtr IS NULL OR :mtr = '' OR c.mtr = :mtr);
        
	connection = 
	SELECT A.id, external_id, from_location, to_location, mtr, distance, duration, 
	case when A.dataset_id = :dataset_id and a.source = :SOURCE_MANUAL then action else null end as action, -- Just keep action in top layer
	source, '' AS conflict_flag, created_by, created_on, changed_by, changed_on
	FROM "sap.tm.trp.routing.db.dataset::t_connection" AS A INNER JOIN :connection_id AS B ON A.id = B.id;

	connection_carrier = select connection_id AS connection_id, IFNULL(carrier, '') AS carrier
	FROM :connection AS c1
	INNER JOIN "sap.tm.trp.routing.db.dataset::t_connection_carrier" AS c2
	ON c1.ID = c2.connection_id;
	
END;
