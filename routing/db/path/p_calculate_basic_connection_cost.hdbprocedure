PROCEDURE "SAP_TM_ROUTING"."sap.tm.trp.routing.db.path::p_calculate_basic_connection_cost" (
    IN network_code NVARCHAR(50),
    IN connection "sap.tm.trp.routing.db.dataset::tt_connection",
    IN connection_carrier "sap.tm.trp.routing.db.dataset::tt_connection_carrier",
    OUT cost TABLE(id NVARCHAR(50), transport_cost DOUBLE, currency NVARCHAR(10)),
    OUT return_code INTEGER,
    OUT message "sap.tm.trp.routing.db.common::tt_message"
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   DEFAULT SCHEMA "SAP_TM_ROUTING"
   READS SQL DATA AS
BEGIN
   /*************************************
       Requirement: cost returned by p_get_transportation_based_cost_info can't contain data that only one of from_location_name and to_location_name is *
       For each from_location_name, to_location_name, transportation_mode_code, carrier_id, there can be no more than one record that have the same priority and wild_star_count
   *************************************/
   DECLARE msg_params TABLE(PLACEHOLDER INTEGER, VALUE NVARCHAR(100));
   DECLARE network_exist INTEGER;
   DECLARE network_id BIGINT;
   --DECLARE base_network_id BIGINT;
   DECLARE cost_model_id BIGINT;
   DECLARE resource_type NVARCHAR(20);
   DECLARE currency NVARCHAR(10);

	DECLARE path_usage CONSTANT VARCHAR(10) = 'PATH';
   -- Check whether the network code exist or not
    DECLARE EXIT HANDLER FOR SQL_ERROR_CODE 1299
    BEGIN
        msg_params = SELECT 0 AS PLACEHOLDER, :network_code AS VALUE FROM DUMMY;
        CALL "sap.tm.trp.routing.db.common::p_get_text"('MSG_NETWORK_CODE_NOT_EXIST', :msg_params, 'E', message);
        log = SELECT * FROM :message;
        return_code = 1;
    END;
   
    return_code = 0;
   -- Check for the existence of network id
	SELECT id INTO network_id FROM "sap.tm.trp.routing.db.path::t_network_model"
	WHERE code = :network_code;
	
    /*
	CALL "sap.tm.trp.routing.db.path::p_get_network_chain"(
        :network_id,
        :id_chain
    );
    
    -- Get the network id in the bottom. See if we have better way to do that.
    SELECT LAST_VALUE(id ORDER BY sequence) INTO base_network_id
    FROM (SELECT id, ROW_NUMBER() OVER () AS sequence 
    FROM :id_chain);
	*/
   -- Fetch cost model id(probably may first need to fetch SETTING_GROUP, then call another api(for configuration) to retrieve cost model id)
   -- Should get cost model from network model in the bottom
   CALL "sap.tm.trp.routing.db.path::p_get_network_attr"(:network_id, :path_usage, cost_model_id, resource_type);

   -- Fetch currency info
   CALL "sap.tm.trp.db.costmodel::sp_cost_model_get"(:cost_model_id, currency_info);
   
   -- CURRENCY CODE MUST EXIST!!!
   SELECT currency_code INTO currency
   FROM :currency_info;

   -- Query unit cost by calling api
   CALL "sap.tm.trp.db.costmodel::sp_get_transportation_based_cost_info"(:cost_model_id, cost_info);

   -- Decide which measure to apply(location based, distance based, etc decided by the returned rank)
   connection_param = 
   SELECT A.id, 1 AS sequence, from_location, to_location, mtr, IFNULL(B.carrier, '') AS carrier, :resource_type AS resource_type,
   distance, duration
   FROM :connection AS A LEFT OUTER JOIN :connection_carrier AS B ON A.id = B.connection_id;
   
   CALL "sap.tm.trp.routing.db.cost::p_calculate_transport_cost"(
       :cost_info,
       :connection_param,
       :cost_per_carrier
   ); 
   
   cost = SELECT id, transport_cost, :currency AS currency
   FROM (
   SELECT id, AVG(cost) AS transport_cost
   FROM :cost_per_carrier
   GROUP BY id );
END