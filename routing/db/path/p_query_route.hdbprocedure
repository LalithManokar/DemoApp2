PROCEDURE "SAP_TM_ROUTING"."sap.tm.trp.routing.db.path::p_query_route"(
	IN network_id BIGINT,
	IN with_details CHAR(1), -- X for true and false otherwise
	OUT route TABLE (
	    ID BIGINT,
        NETWORK_MODEL_ID BIGINT,
        COMPOSITE_PATH_ID BIGINT,
        FROM_LOCATION NVARCHAR(50),
        TO_LOCATION NVARCHAR(50),
        DEPARTURE_TIME TIMESTAMP,
        ARRIVAL_TIME TIMESTAMP,
        CREATED_BY NVARCHAR(50),
        CREATED_ON TIMESTAMP,
        CHANGED_BY NVARCHAR(50),
        CHANGED_ON TIMESTAMP
	),
	OUT route_sequence TABLE(
	    ROUTE_ID BIGINT,
        SEQUENCE INTEGER,
        LOCATION NVARCHAR(50),
        PRE_TRIP_SEQUENCE INTEGER,
        NEXT_TRIP_SEQUENCE INTEGER,
        BASIC_PATH_ID BIGINT,
        PATH_TYPE VARCHAR(10),
        MTR NVARCHAR(10),
        TRIP_ID NVARCHAR(100),
        TRIP_NAME NVARCHAR(100),
        DEPARTURE_TIME TIMESTAMP,
        ARRIVAL_TIME TIMESTAMP,
        DISTANCE DOUBLE,
        STORAGE_COST DOUBLE,
        HANDLING_COST DOUBLE,
        TRANSPORT_COST DOUBLE,
        COST_CURRENCY NVARCHAR(10),
        HANDLING_TYPE VARCHAR(10)
	)
)
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "SAP_TM_ROUTING"
	READS SQL DATA
AS
BEGIN

    -- Find those composite path in merged view
    -- Composite paths that are logically deleted will not be considered
	CALL "sap.tm.trp.routing.db.path::p_get_composite_path_merged_view" (:network_id, '', '', '', accumulate_path_id, accumulate_conflict_path_id);
	
    route =	SELECT 
    ID, NETWORK_MODEL_ID, COMPOSITE_PATH_ID, FROM_LOCATION, TO_LOCATION, DEPARTURE_TIME,
    ARRIVAL_TIME, CREATED_BY, CREATED_ON, CHANGED_BY, CHANGED_ON
    FROM "sap.tm.trp.routing.db.path::t_route"
    WHERE composite_path_id IN (SELECT id from :accumulate_path_id);
    
    IF with_details = 'X' THEN
        route_sequence = SELECT ROUTE_ID, SEQUENCE, LOCATION, PRE_TRIP_SEQUENCE, NEXT_TRIP_SEQUENCE,
        BASIC_PATH_ID, PATH_TYPE, MTR, TRIP_ID, TRIP_NAME, S.DEPARTURE_TIME, S.ARRIVAL_TIME,
        DISTANCE, STORAGE_COST, HANDLING_COST, TRANSPORT_COST, COST_CURRENCY, HANDLING_TYPE
        FROM "sap.tm.trp.routing.db.path::t_route_sequence" AS s
        INNER JOIN :route AS r
        ON s.route_id = r.id;
    END IF;
	
END;
