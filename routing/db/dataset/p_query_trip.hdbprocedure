PROCEDURE "SAP_TM_ROUTING"."sap.tm.trp.routing.db.dataset::p_query_trip"
(
    IN path_id BIGINT,
    IN from_time TIMESTAMP,
    IN to_time TIMESTAMP,  
    OUT trips TABLE (
        id NVARCHAR(100), 
        external_id NVARCHAR(50), 
        trip_name NVARCHAR(100), 
        rule_number SMALLINT, 
        from_location NVARCHAR(50), 
        to_location NVARCHAR(50), 
        departure_time TIMESTAMP, 
        arrival_time TIMESTAMP
    )
)
LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER
    DEFAULT SCHEMA "SAP_TM_ROUTING"
    READS SQL DATA AS
BEGIN
    DECLARE external_id NVARCHAR(100);
    DECLARE source CHAR(1); 
    DECLARE SOURCE_MANUAL CHAR(1) = 'M';
    DECLARE SOURCE_SYSTEM CHAR(1) = 'S'; 
    
    -- Read source type of the given path
    SELECT external_id, source INTO external_id, source 
    FROM "sap.tm.trp.routing.db.dataset::t_path"
    WHERE id = :path_id;
        
    IF :source = :SOURCE_MANUAL THEN
        trips = SELECT TO_NVARCHAR(id) AS id, TO_NVARCHAR(id) AS external_id, TO_NVARCHAR(id) AS trip_name, 
        rule_number, from_location, to_location, departure_time, arrival_time
        FROM "sap.tm.trp.routing.db.dataset::t_trip" AS t
        WHERE path_id = :path_id AND departure_time < :to_time AND arrival_time > :from_time;
    ELSE
        path_ids = SELECT :external_id AS external_id, :path_id AS id FROM DUMMY;
         
        -- To-do: check if the performance is not good
        CALL "sap.tm.trp.routing.db.connector::p_list_trip"(
            :from_time, 
            :to_time,
            :path_ids,
            :system_trips,
            :trip_location
        );
        
        trips = SELECT t.id, t.external_id, t.external_id AS trip_name, t.rule_id AS rule_number, 
        p.from_location, p.to_location, t.depart_time AS departure_time, t.arrival_time AS arrival_time
        FROM :system_trips AS t
        INNER JOIN "sap.tm.trp.routing.db.dataset::t_path" AS p
        ON t.basic_path_id = p.id;
    END IF;
    
END;