PROCEDURE "SAP_TM_ROUTING"."sap.tm.trp.routing.db.dataset::p_calculate_path_hash" (
    IN path TABLE (
       "ID" NVARCHAR(50),
        "FROM_LOCATION" NVARCHAR(50),
        "TO_LOCATION" NVARCHAR(50),
        "MTR" NVARCHAR(10),
        "CARRIER" NVARCHAR(50)
    ),
    IN path_connection "sap.tm.trp.routing.db.dataset::tt_path_connection",
	OUT path_hash TABLE(path_id VARCHAR(50), hash VARBINARY(32), str NVARCHAR(500))
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   DEFAULT SCHEMA "SAP_TM_ROUTING"
   READS SQL DATA AS
BEGIN 
   /*************************************
       Write your procedure logic 
   *************************************/
    -- Get last location
    path_last_location = SELECT path_id, LAST_VALUE(to_location ORDER BY sequence ASC)
    AS last_location
    FROM :path_connection
    GROUP BY path_id;
    
    -- Concatenate from location
    path_from_location = SELECT path_id, STRING_AGG(from_location, ':' ORDER BY sequence ASC) AS location_str
    FROM :path_connection
    GROUP BY path_id;
    
    -- Concatenate MTR, from locations and last location and generate hash
    path_hash = SELECT p.id AS path_id, hash_sha256(TO_BINARY(p.mtr ||
    ':' || f.location_str || ':' || l.last_location)) AS hash, 
    p.mtr || ':' || f.location_str || ':' || l.last_location AS str
    FROM :path AS p
    INNER JOIN :path_from_location AS f
    ON p.id = f.path_id
    INNER JOIN :path_last_location AS l
    ON p.id = l.path_id;
	
END;
