PROCEDURE "SAP_TM_ROUTING"."sap.tm.trp.routing.db.dataset::p_update_trip_capacity"(
    IN dataset_code NVARCHAR(50),
    IN trip_capacity "sap.tm.trp.routing.db.dataset::tt_trip_sequence_capacity",
    OUT return_code TINYINT,
	OUT message "sap.tm.trp.routing.db.common::tt_message"
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   DEFAULT SCHEMA SAP_TM_ROUTING
   AS
BEGIN
    DECLARE dataset_id BIGINT;   

    return_code = 0;
    
    SELECT id INTO dataset_id FROM "sap.tm.trp.routing.db.dataset::t_dataset"
    where code = :dataset_code;
    
    -- To-do: check validation of trip capacity
    trip_ids = SELECT trip_id FROM :trip_capacity;
    
    CALL "sap.tm.trp.routing.db.dataset::p_query_trip_location_capacity"
    (
        :dataset_code, :trip_ids, existing_trip_capacity
    );
    
    trip_capacity_changed = SELECT c.trip_id, c.sequence, c.capacity, c.capacity_uom
    FROM :trip_capacity c
    WHERE NOT EXISTS (SELECT l.trip_id FROM :existing_trip_capacity l
    WHERE c.trip_id = l.trip_id
    AND c.sequence = l.sequence
    AND c.capacity = l.capacity 
    AND c.capacity_uom = l.capacity_uom);
    
	UPSERT "sap.tm.trp.routing.db.dataset::t_trip_sequence_capacity"
	(dataset_id, trip_id, sequence, capacity, capacity_uom)
	SELECT :dataset_id, trip_id, sequence, capacity, capacity_uom
	FROM :trip_capacity_changed;
	
	message = SELECT '' AS severity, '' AS message FROM DUMMY WHERE 1 <> 1;
END