PROCEDURE "SAP_TM_ROUTING"."sap.tm.trp.routing.db.dataset::p_query_trip_name" (
    IN trip_ids TABLE (trip_id NVARCHAR(100), path_id BIGINT),
    OUT trip_id_name_map TABLE(trip_id NVARCHAR(100), trip_name NVARCHAR(100))
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   DEFAULT SCHEMA SAP_TM_ROUTING
   READS SQL DATA AS
BEGIN
    DECLARE count INTEGER;
    
    tmp = SELECT trip_id, path_id, p.external_id
    FROM :trip_ids AS t
    INNER JOIN "sap.tm.trp.routing.db.dataset::t_path" AS p
    ON t.path_id = p.id;
    
    manual_trip = SELECT trip_id
    FROM :tmp WHERE external_id IS NULL;
    
    system_trip = SELECT trip_id
    FROM :tmp WHERE external_id IS NOT NULL;
    
    manual_trip_id_name_map = SELECT '' AS trip_id, '' AS trip_name
    FROM DUMMY WHERE 1<> 1;
    
    SELECT COUNT(*) into count FROM :manual_trip;
    IF :count > 0 THEN
        manual_trip_id_name_map = SELECT trip_id, trip_id AS trip_name
        FROM :manual_trip;
    END IF;
    
    SELECT COUNT(*) into count FROM :system_trip;
    system_trip_id_name_map = SELECT '' AS trip_id, '' AS trip_name
    FROM DUMMY WHERE 1<> 1;
    
    IF :count > 0 THEN
        system_trip_id_name_map = SELECT
        trip_id,
        CASE WHEN D.VOYAGE = '' OR D.VOYAGE IS NULL THEN R1.SCHEDULE || '_' || IFNULL(R2.RULE_ID, 0) || 
        TO_VARCHAR(TO_TIMESTAMP(d.departure_utc), 'YYYY-MM-DD-HH24:MI:SS') ELSE D.VOYAGE END 
        AS trip_name
        FROM "sap.tm.trp.db.semantic.schedule::v_departure" AS D
        INNER JOIN :system_trip AS i
        ON i.trip_id = D.DB_KEY
        INNER JOIN "sap.tm.trp.db.semantic.schedule::v_schedule"AS R1
        ON D.PARENT_KEY = R1.DB_KEY
        LEFT OUTER JOIN "sap.tm.trp.db.semantic.schedule::v_departure_rule" as R2
        ON D.DEP_RULE_REF = R2.DB_KEY
        UNION ALL
        SELECT trip_id AS id, 
        TO_NVARCHAR(T.TOR_ID) AS trip_name
        FROM "sap.tm.trp.db.semantic.order::v_freight_order" AS T
        INNER JOIN :system_trip AS i
        ON i.trip_id = t.db_key;
    END IF;
    
    trip_id_name_map = SELECT * FROM :manual_trip_id_name_map
    UNION
    SELECT * FROM :system_trip_id_name_map
    UNION
    SELECT trip_id, trip_id AS trip_name
    FROM :trip_ids AS t
    INNER JOIN "sap.tm.trp.routing.db.dataset::t_connection" AS c
    ON c.id = t.path_id;

END