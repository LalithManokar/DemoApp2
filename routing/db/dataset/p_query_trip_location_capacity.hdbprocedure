PROCEDURE "SAP_TM_ROUTING"."sap.tm.trp.routing.db.dataset::p_query_trip_location_capacity" (
    IN dataset_code NVARCHAR(50),
    IN trip_ids "sap.tm.trp.routing.db.dataset::tt_trip_id", 
    OUT trip_location_capacity "sap.tm.trp.routing.db.dataset::tt_trip_sequence_capacity"
   ) 
    LANGUAGE SQLSCRIPT
    SQL SECURITY INVOKER
    DEFAULT SCHEMA "SAP_TM_ROUTING"
    READS SQL DATA AS
BEGIN
    DECLARE dataset_id BIGINT;
    
    -- No data exception not handled. Programming error if encountered
    SELECT id INTO dataset_id FROM "sap.tm.trp.routing.db.dataset::t_dataset"
    where code = :dataset_code;
    
    CALL "sap.tm.trp.routing.db.dataset::p_get_dataset_chain"(:dataset_id, dataset_chain);
    
    CALL "sap.tm.trp.routing.db.connector::p_query_trip_location_capacity"
    (:trip_ids, tm_trip_location_capacity);
    
    trip_sequence_capacity_delta = SELECT TO_NVARCHAR(trip_id) AS trip_id, sequence, 
    capacity, capacity_uom, level
    FROM "sap.tm.trp.routing.db.dataset::t_trip_sequence_capacity" c1
    INNER JOIN :dataset_chain c2
    ON c1.dataset_id = c2.id
    WHERE c1.trip_id IN (SELECT trip_id FROM :trip_ids);
    
    trip_location_capacity = SELECT trip_id, sequence, 
    FIRST_VALUE(capacity ORDER BY level) AS capacity,
    capacity_uom
    FROM (SELECT trip_id, sequence, capacity, capacity_uom, 
    (SELECT MAX(level) + 1 FROM :dataset_chain) AS level
    FROM :tm_trip_location_capacity
    UNION ALL SELECT * FROM :trip_sequence_capacity_delta)
    GROUP BY trip_id, sequence, capacity_uom;
    
END;
