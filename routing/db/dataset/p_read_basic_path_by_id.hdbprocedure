PROCEDURE "SAP_TM_ROUTING"."sap.tm.trp.routing.db.dataset::p_read_basic_path_by_id"( 
	IN basic_path_ids "sap.tm.trp.routing.db.common::tt_id",
	OUT paths "sap.tm.trp.routing.db.dataset::tt_path_out", 
	OUT path_connection TABLE (
		path_id VARCHAR(50),
		sequence INTEGER,
		from_location NVARCHAR(50),
		from_longitude DOUBLE,
		from_latitude DOUBLE,
		to_location NVARCHAR(50),
		to_longitude DOUBLE,
		to_latitude DOUBLE,
		distance DOUBLE,
		duration INTEGER,
		stay_time INTEGER
	) 
) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER
	DEFAULT SCHEMA "SAP_TM_ROUTING"
	READS SQL DATA
AS
BEGIN
	paths = SELECT A.id, name, external_id, external_type, from_location, to_location, 
	mtr, carrier, action, source, '' AS conflict_flag, created_by, created_on, changed_by, changed_on
    FROM "sap.tm.trp.routing.db.dataset::t_path" AS A
    INNER JOIN :basic_path_ids AS B
    ON A.id = B.id;
	path_connection = SELECT A.path_id, 
	sequence, 
	A.from_location, 
	C.xpos AS from_longitude, 
	C.ypos AS from_latitude, 
	A.to_location, 
	D.xpos AS to_longitude, 
	D.ypos AS to_latitude, 
	distance, 
	duration, 
	stay_time
    FROM "sap.tm.trp.routing.db.dataset::t_path_connection" AS A
	INNER JOIN :paths AS B
	ON A.path_id = B.id
	LEFT OUTER JOIN "sap.tm.trp.db.semantic.location::v_all_location" AS C
	ON A.from_location = C.name
	LEFT OUTER JOIN "sap.tm.trp.db.semantic.location::v_all_location" AS D
	ON A.to_location = D.name;
END;
