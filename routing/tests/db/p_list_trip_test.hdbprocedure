PROCEDURE "SAP_TM_ROUTING_TEST"."sap.tm.trp.routing.tests.db::p_list_trip_test" (
        in from_time timestamp,
        in to_time timestamp,
        in basic_path_ids table (basic_path_id bigint, external_id varchar(50)),
        out trip table(
             ID VARCHAR(50), 
             BASIC_PATH_ID BIGINT,
             MTR VARCHAR(10),
             FROM_LOCATION VARCHAR(50),
             TO_LOCATION VARCHAR(50),
             DEPART_TIME TIMESTAMP,
             ARRIVAL_TIME TIMESTAMP
        ),
        out trip_location table (
             TRIP_ID VARCHAR(50),
             SEQUENCE INTEGER,
             LOCATION VARCHAR(50),
             DISTANCE DOUBLE, 
             DEPART_TIME TIMESTAMP,
             ARRIVAL_TIME TIMESTAMP
        )
    )
   LANGUAGE SQLSCRIPT
   SQL SECURITY DEFINER
   DEFAULT SCHEMA "SAP_TM_ROUTING_TEST"
   READS SQL DATA AS
BEGIN
   /*************************************
       This procedure will only be used in unit test.
       It will return one trip for each basic_path_ids
   *************************************/
   DECLARE start_time timestamp;
   basic_trip_ids = 
   SELECT basic_path_id || '_TEST' AS trip_id, basic_path_id FROM :basic_path_ids;
   
   SELECT ADD_DAYS(:from_time, 3) INTO start_time FROM DUMMY;
   
   trip_location = 
   SELECT TO_VARCHAR(A.basic_path_id) || '_TEST' AS trip_id, sequence, location, distance,  
   --ADD_SECONDS(:arv_time, SUM(duration) OVER (PARTITION BY A.basic_path_id ORDER BY sequence ASC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS depart_time,
   ADD_SECONDS(:start_time, dpttime) AS depart_time, ADD_SECONDS(:start_time, arvtime) AS arrival_time
   FROM "sap.tm.trp.routing.tests.db::t_path_seq_test" AS A INNER JOIN :basic_path_ids AS B ON A.basic_path_id = B.basic_path_id;

   last_trip = 
   SELECT A.* FROM :trip_location AS A INNER JOIN (SELECT trip_id, MAX(sequence) AS last_seq FROM :trip_location GROUP BY trip_id) AS B
   ON A.trip_id = B.trip_id AND A.sequence = B.last_seq;
   
   trip = 
   SELECT B.trip_id AS ID, B.basic_path_id, '' AS MTR, '' AS FROM_LOCATION, '' AS TO_LOCATION, :start_time AS DEPART_TIME, ARRIVAL_TIME 
   FROM :last_trip AS A INNER JOIN :basic_trip_ids AS B ON A.trip_id = B.trip_id;
   --GROUP BY B.trip_id, B.basic_path_id;
   
END