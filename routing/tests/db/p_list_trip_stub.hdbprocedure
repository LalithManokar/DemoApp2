PROCEDURE "SAP_TM_ROUTING_TEST"."sap.tm.trp.routing.tests.db::p_list_trip_stub" (
    in from_time timestamp,
    in to_time timestamp,
    in basic_path_ids "sap.tm.trp.routing.db.common::tt_id", 
    out trip TABLE( 
         ID NVARCHAR(100), 
         EXTERNAL_ID NVARCHAR(100),
         basic_path_id BIGINT,
         RULE_ID SMALLINT,
         MTR NVARCHAR(10),
         FROM_LOCATION NVARCHAR(50),
         TO_LOCATION NVARCHAR(50),
         DEPART_TIME TIMESTAMP,
         ARRIVAL_TIME TIMESTAMP 
    ),
    out trip_location table (
        TRIP_ID NVARCHAR(100),
        SEQUENCE INTEGER,
        LOCATION NVARCHAR(50),
        DISTANCE DOUBLE, 
        DEPART_TIME TIMESTAMP,
        ARRIVAL_TIME TIMESTAMP,
        CAPACITY DECIMAL(15,3),
        CAPACITY_UOM NVARCHAR(10),
        vehicle_id NVARCHAR(50),
        cutoff_offset INTEGER,
        availability_offset INTEGER
    )
)
   LANGUAGE SQLSCRIPT
   SQL SECURITY INVOKER
   DEFAULT SCHEMA SAP_TM_ROUTING_TEST
   READS SQL DATA AS
BEGIN
   /*************************************
       Write your procedure logic 
   *************************************/
   trip = 
   SELECT A.id, external_id, path_id AS basic_path_id, rule_number AS rule_id, mtr, from_location, to_location, departure_time AS depart_time, arrival_time
   FROM "sap.tm.trp.routing.tests.db::t_trip_time_test" AS A INNER JOIN :basic_path_ids AS B
   ON A.path_id = B.id
   WHERE departure_time >= :from_time AND arrival_time <= :to_time;
   
   trip_location = 
   SELECT trip_id, sequence, location, distance, departure_time AS depart_time, arrival_time, capacity, capacity_uom, vehicle_id, cutoff_offset, availability_offset
   FROM "sap.tm.trp.routing.tests.db::t_trip_time_seq_test"
   WHERE EXISTS (SELECT trip_id FROM :trip WHERE id = trip_id);
END